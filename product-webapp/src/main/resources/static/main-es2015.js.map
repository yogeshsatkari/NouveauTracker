{"version":3,"sources":["./src/app/service/email.service.ts","./src/app/component/add-program/add-program.component.ts","./src/app/component/add-program/add-program.component.html","./src/app/service/program.service.ts","./src/app/service/monthly-tracker.service.ts","./src/app/model/program-time.ts","./src/app/model/project-time.ts","./src/app/component/charts-folder/bar-chart/bar-chart.component.ts","./src/app/component/charts-folder/bar-chart/bar-chart.component.html","./src/app/component/charts-folder/doughnut-chart2/doughnut-chart2.component.ts","./src/app/component/charts-folder/doughnut-chart2/doughnut-chart2.component.html","./src/app/model/daily-tracker.ts","./src/app/component/view-program-manager/view-program-manager.component.ts","./src/app/component/view-program-manager/view-program-manager.component.html","./src/app/component/monthly-tracker-details/monthly-tracker-details.component.ts","./src/app/component/monthly-tracker-details/monthly-tracker-details.component.html","./src/app/component/monthly-tracker-details/dialog-content-example-dialog.html","./src/app/component/consolidated-view/consolidated-view.component.ts","./src/app/component/consolidated-view/consolidated-view.component.html","./src/app/component/time-tracker/time-tracker.component.ts","./src/app/component/time-tracker/time-tracker.component.html","./src/environments/environment.ts","./src/app/component/project-card/project-card.component.ts","./src/app/component/project-card/project-card.component.html","./src/app/component/all-charts/all-charts.component.ts","./src/app/component/all-charts/all-charts.component.html","./src/app/component/add-project/add-project.component.ts","./src/app/component/add-project/add-project.component.html","./src/app/service/employee.service.ts","./src/app/model/monthly-tracker.ts","./src/app/component/snackbar/snackbar.component.ts","./src/app/component/snackbar/snackbar.component.html","./src/app/component/register-login/register-login.component.ts","./src/app/component/register-login/register-login.component.html","./src/app/component/calendar/calendar.component.ts","./src/app/component/calendar/calendar.component.html","./src/app/service/daily-tracker.service.ts","./src/app/component/leaves/leaves.component.ts","./src/app/component/leaves/leaves.component.html","./src/app/model/daily-tracker-model.ts","./src/app/component/add-program-members/add-program-members.component.ts","./src/app/component/add-program-members/add-program-members.component.html","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app.component.ts","./src/app/app.component.html","./src/app/component/consolidated-analytics/consolidated-analytics.component.ts","./src/app/component/consolidated-analytics/consolidated-analytics.component.html","./src/app/component/view-project-card/view-project-card.component.ts","./src/app/component/view-project-card/view-project-card.component.html","./src/app/model/log.ts","./src/app/component/charts-folder/bar-chart2/bar-chart2.component.ts","./src/app/component/charts-folder/bar-chart2/bar-chart2.component.html","./src/app/app.module.ts","./src/app/component/missing-trackers/missing-trackers.component.ts","./src/app/component/missing-trackers/missing-trackers.component.html","./src/app/component/side-nav/side-nav.component.ts","./src/app/component/side-nav/side-nav.component.html","./src/app/guard/auth.guard.ts","./src/app/model/program-data.ts","./src/app/component/charts-folder/pie-chart/pie-chart.component.ts","./src/app/component/charts-folder/pie-chart/pie-chart.component.html","./src/app/component/nav-bar/nav-bar.component.ts","./src/app/component/nav-bar/nav-bar.component.html","./src/app/component/charts-folder/doughnut-chart/doughnut-chart.component.ts","./src/app/component/charts-folder/doughnut-chart/doughnut-chart.component.html","./src/app/component/profile/profile.component.ts","./src/app/component/profile/profile.component.html","./src/app/component/monthly-tracker/monthly-tracker.component.ts","./src/app/component/monthly-tracker/monthly-tracker.component.html","./src/app/component/program-card/program-card.component.ts","./src/app/component/program-card/program-card.component.html","./src/app/component/add-project-members/add-project-members.component.ts","./src/app/component/add-project-members/add-project-members.component.html","./src/app/model/employee-data.ts","./src/app/app-routing.module.ts","./src/app/model/project-data.ts","./src/app/component/view-program-card/view-program-card.component.ts","./src/app/component/view-program-card/view-program-card.component.html","./src/app/component/monthly-tracker/dialog/dialog.component.ts","./src/app/component/monthly-tracker/dialog/dialog.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Observable } from 'rxjs';\r\nimport { MonthlyTracker } from './../model/monthly-tracker';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EmailService {\r\n  requestBody: CustomEmailRequest = new CustomEmailRequest();\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n  BASE_URL = 'https://nouveautracker.stackroute.io/email-service/';\r\n  // BASE_URL = 'http://localhost:8080/email-service/';\r\n  CUSTOM_EMPLOYEE_EMAIL = 'sendemployeecustomemail/';\r\n\r\n  revertMonthlyTracker(monthlyTracker: MonthlyTracker): Observable<string> {\r\n    this.requestBody.to = monthlyTracker.employeeEmail;\r\n    this.requestBody.actionToBeTaken = monthlyTracker.remarks;\r\n    this.requestBody.month = monthlyTracker.monthName;\r\n    this.requestBody.subject =\r\n      'REVERTED: Monthly Tracker for ' +\r\n      monthlyTracker.monthName +\r\n      ' ' +\r\n      monthlyTracker.year;\r\n    this.requestBody.year = monthlyTracker.year.toString();\r\n    return this.httpClient.post(\r\n      this.BASE_URL + this.CUSTOM_EMPLOYEE_EMAIL,\r\n      this.requestBody,\r\n      { responseType: 'text' }\r\n    );\r\n  }\r\n}\r\nexport class CustomEmailRequest {\r\n  to: string;\r\n  subject: string;\r\n  year: string;\r\n  month: string;\r\n  actionToBeTaken: string;\r\n}\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { EmployeeService } from 'src/app/service/employee.service';\r\nimport { ProgramService } from 'src/app/service/program.service';\r\nimport { ViewProgramManagerComponent } from '../view-program-manager/view-program-manager.component';\r\n\r\n@Component({\r\n  selector: 'app-add-program',\r\n  templateUrl: './add-program.component.html',\r\n  styleUrls: ['./add-program.component.css'],\r\n})\r\nexport class AddProgramComponent implements OnInit {\r\n  addProgramForm: FormGroup;\r\n  file: File;\r\n  viewProgram: ViewProgramManagerComponent;\r\n\r\n  @ViewChild('fileInput') fileInput: ElementRef;\r\n  fileAttr = 'Choose File';\r\n\r\n  programType: any;\r\n\r\n  managersArray = [];\r\n\r\n  constructor(\r\n    formBuilder: FormBuilder,\r\n    private programService: ProgramService,\r\n    private snackBar: MatSnackBar,\r\n    private employeeService: EmployeeService\r\n  ) {\r\n    this.addProgramForm = formBuilder.group({\r\n      organizationName: new FormControl('', Validators.required),\r\n      programName: new FormControl('', Validators.required),\r\n      programType: new FormControl('', Validators.required),\r\n      programCode: new FormControl('', Validators.required),\r\n      costCode: new FormControl('', Validators.required),\r\n      customerId: new FormControl('', Validators.required),\r\n      managerEmailId: new FormControl('', Validators.required),\r\n      startDate: new FormControl(Validators.required),\r\n      endDate: new FormControl(Validators.required),\r\n      startTime: new FormControl('', Validators.required),\r\n      endTime: new FormControl('', Validators.required),\r\n      image: new FormControl('', Validators.required),\r\n    });\r\n  }\r\n\r\n  onFileUpload(event: any): void {\r\n    this.file = event.target.files[0];\r\n    this.fileAttr = event.target.files[0].name;\r\n  }\r\n\r\n  getProgramTypes(): void {\r\n    this.programService.getAllProgramType().subscribe((response) => {\r\n      this.programType = response;\r\n    });\r\n  }\r\n\r\n  saveProgram(): void {\r\n    this.addProgramForm.patchValue({\r\n      startDate: this.addProgramForm.value.startDate.getTime(),\r\n      endDate: this.addProgramForm.value.endDate.getTime()\r\n    })\r\n\r\n    console.log(this.addProgramForm.value);\r\n\r\n    const programData: FormData = new FormData();\r\n\r\n    programData.append('image', this.file, this.file.name);\r\n    programData.append('program', JSON.stringify(this.addProgramForm.value));\r\n\r\n    this.programService.addProgram(programData).subscribe(\r\n      (response) => {\r\n        this.snackBar.open('Program Created Successfully.', '', {\r\n          duration: 5000,\r\n          horizontalPosition: 'center',\r\n          verticalPosition: 'top',\r\n          panelClass: ['mat-toolbar', 'mat-primary']\r\n        });\r\n\r\n        this.addProgramForm.reset();\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        this.snackBar.open('Some error occured while adding Program.', '', {\r\n          duration: 5000,\r\n          horizontalPosition: 'center',\r\n          verticalPosition: 'top',\r\n          panelClass: ['mat-toolbar', 'mat-warn']\r\n        });\r\n\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  getAllManagers(): void {\r\n    this.employeeService.getEmployeesByRole('MANAGER').subscribe((response) => {\r\n      response.forEach(manager => {\r\n        console.log(manager.emailId);\r\n        this.managersArray.push(manager.emailId);\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getProgramTypes();\r\n    this.getAllManagers();\r\n  }\r\n}\r\n","<div mat-dialog-title class=\"flex-container\">\r\n  <h1 mat-dialog-title>Create New Program</h1>\r\n  <span class=\"example-spacer\"></span>\r\n  <mat-icon [mat-dialog-close]=\"true\" matTooltip=\"Close\">close</mat-icon>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <form class=\"example-form\" [formGroup]=\"addProgramForm\">\r\n    <div fxLayout=\"column\" fxFlex=\"100%\">\r\n      <div fxLayout=\"row\" fxLayoutGap=\"2%\" fxLayout.xs=\"column\">\r\n        <mat-form-field\r\n          class=\"example-full-width\"\r\n          fxFlex=\"50%\"\r\n          appearance=\"outline\"\r\n        >\r\n          <mat-label>Program Name</mat-label>\r\n          <input\r\n            matInput\r\n            #programName\r\n            formControlName=\"programName\"\r\n            maxlength=\"20\"\r\n            required\r\n          />\r\n          <mat-hint align=\"end\"\r\n            >{{ programName.value?.length || 0 }}/20</mat-hint\r\n          >\r\n        </mat-form-field>\r\n        <mat-form-field\r\n          class=\"example-full-width\"\r\n          fxFlex=\"50%\"\r\n          appearance=\"outline\"\r\n        >\r\n          <mat-label>Program Type</mat-label>\r\n          <mat-select formControlName=\"programType\" required>\r\n            <mat-option *ngFor=\"let type of programType\" [value]=\"type\">{{\r\n              type\r\n            }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutGap=\"2%\" fxLayout.xs=\"column\">\r\n        <mat-form-field\r\n          class=\"example-full-width\"\r\n          appearance=\"outline\"\r\n          fxFlex=\"50%\"\r\n        >\r\n          <mat-label>Organization Name</mat-label>\r\n          <input\r\n            matInput\r\n            formControlName=\"organizationName\"\r\n            #organizationName\r\n            maxlength=\"15\"\r\n            required\r\n          />\r\n          <mat-hint align=\"end\"\r\n            >{{ organizationName.value?.length || 0 }}/15</mat-hint\r\n          >\r\n        </mat-form-field>\r\n\r\n        <div fxFlex=\"50%\">\r\n          <label>Organization Logo </label>\r\n          <br />\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            formControlName=\"image\"\r\n            (change)=\"onFileUpload($event)\"\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutGap=\"2%\" fxLayout.xs=\"column\">\r\n        <mat-form-field\r\n          class=\"example-full-width\"\r\n          appearance=\"outline\"\r\n          fxFlex=\"50%\"\r\n        >\r\n          <mat-label>Manager Email Id</mat-label>\r\n          <mat-select formControlName=\"managerEmailId\" required>\r\n            <mat-option\r\n              *ngFor=\"let manager of managersArray\"\r\n              [value]=\"manager\"\r\n              >{{ manager }}</mat-option\r\n            >\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field\r\n          class=\"example-full-width\"\r\n          appearance=\"outline\"\r\n          fxFlex=\"50%\"\r\n        >\r\n          <mat-label>Enter Date Range for Program</mat-label>\r\n          <mat-date-range-input [rangePicker]=\"picker\">\r\n            <input\r\n              matStartDate\r\n              placeholder=\"Start date\"\r\n              formControlName=\"startDate\"\r\n              required\r\n            />\r\n            <input\r\n              matEndDate\r\n              placeholder=\"End date\"\r\n              formControlName=\"endDate\"\r\n              required\r\n            />\r\n          </mat-date-range-input>\r\n          <mat-hint>MM/DD/YYYY – MM/DD/YYYY</mat-hint>\r\n          <mat-datepicker-toggle\r\n            matSuffix\r\n            [for]=\"picker\"\r\n          ></mat-datepicker-toggle>\r\n          <mat-date-range-picker #picker></mat-date-range-picker>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutGap=\"2%\" fxLayout.xs=\"column\">\r\n        <mat-form-field\r\n          class=\"example-full-width\"\r\n          appearance=\"outline\"\r\n          fxFlex=\"50%\"\r\n        >\r\n          <mat-label>Daily Start Time</mat-label>\r\n          <input type=\"time\" matInput formControlName=\"startTime\" required />\r\n          <mat-icon matSuffix>alarm</mat-icon>\r\n        </mat-form-field>\r\n        <mat-form-field\r\n          class=\"example-full-width\"\r\n          appearance=\"outline\"\r\n          fxFlex=\"50%\"\r\n        >\r\n          <mat-label>Daily End Time</mat-label>\r\n          <input type=\"time\" matInput formControlName=\"endTime\" required />\r\n          <mat-icon matSuffix>alarm</mat-icon>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutGap=\"2%\" fxLayout.xs=\"column\">\r\n        <mat-form-field\r\n          class=\"example-full-width\"\r\n          appearance=\"outline\"\r\n          fxFlex=\"33%\"\r\n        >\r\n          <mat-label>Customer Code</mat-label>\r\n          <input matInput formControlName=\"customerId\" required type=\"number\" />\r\n        </mat-form-field>\r\n        <mat-form-field\r\n          class=\"example-full-width\"\r\n          appearance=\"outline\"\r\n          fxFlex=\"33%\"\r\n          required\r\n        >\r\n          <mat-label>Cost Code</mat-label>\r\n          <input matInput formControlName=\"costCode\" required type=\"number\" />\r\n        </mat-form-field>\r\n        <mat-form-field\r\n          class=\"example-full-width\"\r\n          appearance=\"outline\"\r\n          fxFlex=\"33%\"\r\n        >\r\n          <mat-label>Program Code</mat-label>\r\n          <input\r\n            matInput\r\n            formControlName=\"programCode\"\r\n            required\r\n            type=\"number\"\r\n          />\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions align=\"end\">\r\n  <button (click)=\"addProgramForm.reset()\" mat-raised-button>Reset</button>\r\n  <button\r\n    (click)=\"saveProgram()\"\r\n    [mat-dialog-close]=\"true\"\r\n    [disabled]=\"!addProgramForm.valid\"\r\n    color=\"primary\"\r\n    mat-flat-button\r\n  >\r\n    Create\r\n  </button>\r\n</mat-dialog-actions>\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProgramService {\r\n\r\n  baseUrl = 'https://nouveautracker.stackroute.io/program-service/api/v1/';\r\n  // baseUrl = 'http://localhost:8080/program-service/api/v1/';\r\n  programUrl = this.baseUrl + 'program';\r\n  projectUrl = this.baseUrl + 'project';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllPrograms(): Observable<any> {\r\n    return this.http.get(this.baseUrl + '/programs');\r\n  }\r\n\r\n  getAllProjects(): Observable<any> {\r\n    return this.http.get(this.baseUrl + '/projects');\r\n  }\r\n\r\n  getProgramDetails(programName: string): Observable<any> {\r\n    const url = this.programUrl + '/' + programName;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getProjectDetails(projectName: string): Observable<any> {\r\n    const url = this.projectUrl + '/' + projectName;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  addProgram(program: any): Observable<any> {\r\n    return this.http.post(this.programUrl, program);\r\n  }\r\n\r\n  addProject(project: any): Observable<any> {\r\n    return this.http.post(this.projectUrl, project);\r\n  }\r\n\r\n  addMembersToProgram(program: any, programName: string): Observable<any> {\r\n    console.log(\"hola\");\r\n    console.log(program);\r\n    const url = this.programUrl + '/member/' + programName;\r\n    return this.http.put(url, program);\r\n  }\r\n\r\n  addMembersToProject(project: any, projectName: string): Observable<any> {\r\n    const url = this.projectUrl + '/member/' + projectName;\r\n    return this.http.put(url, project);\r\n  }\r\n\r\n  getAllActiveProgramsOnParticularDate(memberEmail: string, dateInMillis: number): Observable<any> {\r\n    const url = this.baseUrl + '/programs' + '/member/' + memberEmail + '/' + dateInMillis;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getAllActiveProjectsOnParticularDate(memberEmail: string, dateInMillis: number): Observable<any> {\r\n    const url = this.baseUrl + '/projects' + '/member/' + memberEmail + '/' + dateInMillis;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getProgramsByManager(managerEmail: string): Observable<any> {\r\n    const url = this.baseUrl + '/programs' + '/manager/' + managerEmail;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getProjectsByManager(managerEmail: string): Observable<any> {\r\n    const url = this.baseUrl + '/projects' + '/manager/' + managerEmail;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  removeMembersFromProgram(programName: string, memberEmail: string): Observable<any> {\r\n    const url = this.programUrl + '/member/' + programName + '/' + memberEmail;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  removeMembersFromProject(projectName: string, memberEmail: string): Observable<any> {\r\n    const url = this.projectUrl + '/member/' + projectName + '/' + memberEmail;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getAllProgramType() {\r\n    const url = this.baseUrl + '/programtype';\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getAllActivePrograms(programStatus): Observable<any> {\r\n\r\n    const url = this.programUrl + '/status/' + programStatus;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getAllActiveProjects(projectStatus: string): Observable<any> {\r\n    const url = this.projectUrl + '/status/' + projectStatus;\r\n    return this.http.get(url);\r\n  }\r\n\r\n\r\n  searchPrograms(program: any): Observable<any> {\r\n    const url = this.baseUrl + '/programs/search';\r\n    return this.http.post(url, program);\r\n  }\r\n\r\n  searchProjects(project: any): Observable<any> {\r\n    const url = this.baseUrl + '/projects/search';\r\n    return this.http.post(url, project);\r\n  }\r\n\r\n  searchProgramsManager(program: any): Observable<any> {\r\n    const url = this.baseUrl + '/programs/manager/search';\r\n    return this.http.post(url, program);\r\n  }\r\n\r\n  searchProjectManager(project: any): Observable<any> {\r\n    const url = this.baseUrl + '/projects/manager/search';\r\n    return this.http.post(url, project);\r\n  }\r\n\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { MonthlyTracker } from '../model/monthly-tracker';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MonthlyTrackerService {\r\n  constructor(private httpClient: HttpClient) {}\r\n  BASE_URL = 'https://nouveautracker.stackroute.io/monthly-tracker-service/api/v1/';\r\n  // BASE_URL = 'http://localhost:8080/monthly-tracker-service/api/v1/';\r\n  MONTHLY_TRACKER = 'monthlytracker';\r\n  MONTHLY_TRACKERS = 'filtermonthlytrackers';\r\n\r\n  saveMonthlyTracker(monthlyTracker: MonthlyTracker): void {\r\n    this.httpClient.post<MonthlyTracker>(\r\n      this.BASE_URL + this.MONTHLY_TRACKER,\r\n      monthlyTracker\r\n    ).subscribe(res=>console.log(\"Result of MT save,\",res),err=>console.log(\"error while saving MT\",err));\r\n  }\r\n\r\n  getAllMonthlyTrackers(\r\n    month: string,\r\n    year: number\r\n  ): Observable<MonthlyTracker[]> {\r\n    console.log(month);\r\n\r\n    return this.httpClient.get<MonthlyTracker[]>(\r\n      this.BASE_URL +\r\n        this.MONTHLY_TRACKERS +\r\n        '?month=' +\r\n        month +\r\n        '&year=' +\r\n        year\r\n    );\r\n  }\r\n  ApproveMonthlyTracker(monthlyTracker: MonthlyTracker): Observable<string> {\r\n    return this.httpClient.put(\r\n      this.BASE_URL +\r\n        this.MONTHLY_TRACKER +\r\n        '?id=' +\r\n        monthlyTracker.monthlyTrackerId +\r\n        '&status=' +\r\n        'COMPLETED',\r\n      monthlyTracker,\r\n      { responseType: 'text' }\r\n    );\r\n  }\r\n  RevertMonthlyTracker(monthlyTracker: MonthlyTracker): Observable<string> {\r\n    return this.httpClient.put(\r\n      this.BASE_URL +\r\n        this.MONTHLY_TRACKER +\r\n        '?id=' +\r\n        monthlyTracker.monthlyTrackerId +\r\n        '&status=' +\r\n        'REVERTED',\r\n      monthlyTracker,\r\n      { responseType: 'text' }\r\n    );\r\n  }\r\n\r\n  SubmitMonthlyTracker(monthlyTracker: MonthlyTracker): Observable<string> {\r\n    return this.httpClient.put(\r\n      this.BASE_URL +\r\n        this.MONTHLY_TRACKER +\r\n        '?id=' +\r\n        monthlyTracker.monthlyTrackerId +\r\n        '&status=' +\r\n        'SUBMITTED',\r\n      monthlyTracker,\r\n      { responseType: 'text' }\r\n    );\r\n  }\r\n  findMonthlyTrackerById(id: string): Observable<MonthlyTracker> {\r\n    return this.httpClient.get<MonthlyTracker>(\r\n      this.BASE_URL + this.MONTHLY_TRACKER + '?monthlyTrackerID=' + id\r\n    );\r\n  }\r\n\r\n  RemarkMonthlyTracker(\r\n    monthlyTrackerId: string,\r\n    remarks: string\r\n  ): Observable<string> {\r\n    return this.httpClient.put(\r\n      this.BASE_URL +\r\n        this.MONTHLY_TRACKER +\r\n        '/revert' +\r\n        '?id=' +\r\n        monthlyTrackerId +\r\n        '&remarks=' +\r\n        remarks,\r\n      null,\r\n      { responseType: 'text' }\r\n    );\r\n  }\r\n}\r\n","export class ProgramTime {\r\n    program:string;\r\n    time:number;\r\n\r\n    constructor(program:string,time:number){\r\n        this.program=program;\r\n        this.time=time;\r\n        \r\n    }\r\n}\r\n","export class ProjectTime {\r\n    project:string;\r\n    time:number;\r\n\r\n    constructor(project:string,time:number){\r\n        this.project=project;\r\n        this.time=time;\r\n        \r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport * as Chart from 'chart.js';\r\nimport { DailyTrackerService } from 'src/app/service/daily-tracker.service';\r\nimport { ProgramService } from 'src/app/service/program.service';\r\n\r\n@Component({\r\n  selector: 'app-bar-chart',\r\n  templateUrl: './bar-chart.component.html',\r\n  styleUrls: ['./bar-chart.component.css']\r\n})\r\nexport class BarChartComponent implements OnInit {\r\n\r\n  public role: string;\r\n  public loggedEmail: string;\r\n  public programsArray = [];\r\n  public programChartLabel: any;\r\n  public programChartData = [];\r\n  public programChartDataHours: any;\r\n  constructor(private programService: ProgramService,\r\n              private dailyTrackerService: DailyTrackerService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.role = window.localStorage.getItem('role');\r\n    this.loggedEmail = window.localStorage.getItem('tgt_email');\r\n    switch(this.role) {\r\n      case 'OPERATIONS': {\r\n        // this.getAllActivePrograms();\r\n        this.getAllProgramHours();\r\n        break;\r\n      }\r\n      case 'MANAGER': {\r\n        this.getAllProgramHoursByManagers();\r\n        break;\r\n      }\r\n      case 'EMPLOYEE': {                      \r\n        this.getAllProgramHoursByEmployee();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  myChart(): void{\r\n    const myChart = new Chart('myChart', {\r\n      type: 'bar',\r\n      data: {\r\n          labels: this.programChartLabel,\r\n          datasets: [{\r\n              label: 'Number of employees',\r\n              data: this.programChartData,\r\n              backgroundColor: 'lightpink',\r\n              borderWidth: 1,\r\n              borderColor: '#777',\r\n              hoverBorderWidth: 1,\r\n              hoverBorderColor: '#000'\r\n            },\r\n            {\r\n              label: 'Total working hours',\r\n              // data: this.programChartData,\r\n              data: this.programChartDataHours,\r\n              backgroundColor: 'cornflowerblue',\r\n              borderWidth: 1,\r\n              borderColor: '#777',\r\n              hoverBorderWidth: 1,\r\n              hoverBorderColor: '#000'\r\n            }\r\n          ]\r\n      },\r\n      options: {\r\n        scales: {\r\n          yAxes: [{\r\n              ticks: {\r\n                  beginAtZero: true\r\n              }\r\n          }]\r\n        },\r\n        // scaleShowVerticalLines: false,\r\n        responsive: true,\r\n        title: {\r\n          display: true,\r\n          text: 'External Programs (active)',\r\n          padding: 20,\r\n          fontSize: 22,\r\n        },\r\n        legend: {\r\n          position: 'top',                  // comment and show\r\n          labels: {\r\n            fontColor: '#777',\r\n            fontSize: 13\r\n          }\r\n        },\r\n        layout: {\r\n          padding: {\r\n            left: 50\r\n          }\r\n        },\r\n        tooltips: {\r\n          displayColors: false\r\n        }\r\n      }\r\n  });\r\n  }\r\n\r\n  getAllActivePrograms(): void {\r\n    this.programService.getAllActivePrograms('ACTIVE').subscribe(\r\n      response => {\r\n        console.log(response);\r\n        this.programsArray = response;\r\n        this.programChartLabel.forEach(labelName => {\r\n          this.programsArray.forEach(program => {\r\n            if(labelName===program.programName) {\r\n                this.programChartData.push(program.membersList.length);\r\n            }\r\n          })\r\n        });\r\n              this.myChart();                 // everything should load at once\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  //////////////////////////////////////////\r\n\r\n  getAllProgramHours(): void {\r\n    this.dailyTrackerService.getAllProgramHours().subscribe(\r\n      response => {\r\n        console.log(\"All program with hours\");\r\n        console.log(response);\r\n        this.programChartLabel = Object.keys(response);\r\n        this.programChartDataHours = Object.values(response);\r\n        this.getAllActivePrograms();\r\n        // this.myChart();\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n//////////////////////////////////////////////\r\n\r\n  getAllProgramHoursByEmployee(): void {\r\n    this.dailyTrackerService.getAllProgramHoursByEmployee(this.loggedEmail).subscribe(\r\n      response => {\r\n        console.log(\"All program with hours\");\r\n        console.log(response);\r\n        this.programChartLabel = Object.keys(response);\r\n        this.programChartDataHours = Object.values(response);\r\n        this.getAllActivePrograms();\r\n        // this.myChart();\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n//////////////////////////////////////////////\r\n\r\ngetAllProgramHoursByManagers(): void {\r\n  this.dailyTrackerService.getAllProgramsHoursForManager(this.loggedEmail).subscribe(\r\n    response => {\r\n      console.log(\"All program with hours\");\r\n      console.log(response);\r\n      this.programChartLabel = Object.keys(response);\r\n      this.programChartDataHours = Object.values(response);\r\n      this.getAllActivePrograms();\r\n      // this.myChart();\r\n    },\r\n    error => {\r\n      console.log(error);\r\n    }\r\n  );\r\n}\r\n\r\n}\r\n","<!-- *ngIf=\"role==='OPERATIONS'\" -->\r\n<div  style=\"display: block; \">          \r\n    <div id=\"divChart\">\r\n        <canvas id=\"myChart\"></canvas>\r\n    </div>\r\n</div>\r\n\r\n<!-- <div style=\"display: block; \">\r\n    <div id=\"divChart\">\r\n        <canvas id=\"myChart1\"></canvas>\r\n    </div>\r\n</div> -->\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport * as Chart from 'chart.js';\r\nimport { ProgramService } from 'src/app/service/program.service';\r\n\r\n@Component({\r\n  selector: 'app-doughnut-chart2',\r\n  templateUrl: './doughnut-chart2.component.html',\r\n  styleUrls: ['./doughnut-chart2.component.css']\r\n})\r\nexport class DoughnutChart2Component implements OnInit {\r\n\r\n  public projectsArray = [];\r\n  public doughnutChartLabel = [];\r\n  public doughnutChartData = [];\r\n  constructor(private programService: ProgramService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllActiveprojects();\r\n  }\r\n\r\n  myChart(): void{\r\n    const myChart = new Chart('myChart', {\r\n      type: 'doughnut',\r\n      data: {\r\n          labels: this.doughnutChartLabel,\r\n          datasets: [{\r\n              label: 'No. of employees',\r\n              data: this.doughnutChartData,\r\n              backgroundColor: [\r\n                'cornflowerblue',\r\n                'olivedrab',\r\n                'orange',\r\n                'tomato',\r\n                'crimson',\r\n                'purple',\r\n                'turquoise',\r\n                'forestgreen',\r\n                'navy',\r\n                '#455a64',\r\n                'rgba(255, 220, 129, 0.2)',\r\n                'rgba(200, 181, 199, 0.2)',\r\n                'rgba(193, 226, 206, 0.2)',\r\n                'rgba(201, 193, 226, 0.2)',\r\n                'rgba(175, 201, 195, 0.2)',\r\n                'rgba(253, 222, 166, 0.2)',\r\n                'rgba(216, 156, 218, 0.2)',\r\n                'rgba(154, 215, 209, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(216, 181, 173, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(154, 198, 215, 0.2)',\r\n                'rgba(208, 232, 191, 0.2)'\r\n              ],\r\n              // hoverOffset: 4,\r\n              borderWidth: 1,\r\n              borderColor: '#fff',\r\n              hoverBorderWidth: 2,\r\n              hoverBorderColor: '#fff'\r\n          }]\r\n      },\r\n      options: {\r\n        title: {\r\n          display: true,\r\n          text: 'Employee Distribution (Active projects)',\r\n          padding: 20,\r\n          fontSize: 25,\r\n        },\r\n        legend: {\r\n          position: 'right',                  // comment and show\r\n          labels: {\r\n            fontColor: '#000',\r\n          }\r\n        },\r\n        layout: {\r\n          padding: {\r\n            left: 100\r\n          }\r\n        },\r\n        tooltips: {\r\n          displayColors: false\r\n        }\r\n      }\r\n  });\r\n  }\r\n\r\n  getAllActiveprojects(): void {\r\n    this.programService.getAllActiveProjects('ACTIVE').subscribe(\r\n      response => {\r\n        this.projectsArray = response;\r\n        console.log(response);\r\n        this.projectsArray.forEach(project => {\r\n          this.doughnutChartLabel.push(project.projectName);\r\n          this.doughnutChartData.push(project.membersList.length);\r\n        });\r\n        this.myChart();\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<div style=\"display: block; \">\r\n    <div id=\"divChart\">\r\n        <canvas id=\"myChart\"></canvas>\r\n    </div>\r\n</div>\r\n","import { ListKeyManager } from '@angular/cdk/a11y';\r\nimport { Log } from './log';\r\nexport enum LeaveType {\r\n  FULL_DAY = 'FULLDAY',\r\n  HALF_DAY = 'HALF_DAY',\r\n  NONE = 'NONE',\r\n}\r\nexport class DailyTracker {\r\n    trackerId = '';\r\n    dayOfMonth: string;\r\n    date: Date;\r\n    employeeEmail: String = '';\r\n    logs: Log[] = [];\r\n    leaveType: LeaveType = LeaveType.NONE;\r\n    remarks = '';\r\n    state = false; // show whether the tracker is available for edit or not\r\n    currentDay = false; // this attribute tells whther this daily tracker is current day of the calendar or not.it will always be false, except for 1 day when it matches the current calendar date\r\n    leaveHours = 0;\r\n\r\n    constructor(date: Date, state: boolean){\r\n        this.state = state;\r\n        this.date = date;\r\n        if (this.state){this.dayOfMonth = String(this.date.getDate()); }\r\n        else{this.dayOfMonth = ''; }\r\n    \r\n\r\n    }\r\n  }\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ProgramService } from '../../service/program.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AddProgramComponent } from '../add-program/add-program.component';\r\nimport { AddProjectComponent } from '../add-project/add-project.component';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { ViewProgramCardComponent } from '../view-program-card/view-program-card.component';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { EmployeeService } from 'src/app/service/employee.service';\r\n\r\n@Component({\r\n  selector: 'app-view-program-manager',\r\n  templateUrl: './view-program-manager.component.html',\r\n  styleUrls: ['./view-program-manager.component.css'],\r\n})\r\n\r\nexport class ViewProgramManagerComponent implements OnInit {\r\n  length: number;\r\n  pageEvent: PageEvent;\r\n\r\n  projectPaginatorLength: number;\r\n\r\n  lowValue = 0;\r\n  highValue = 8;\r\n\r\n  panelOpenState = false;\r\n\r\n  programArray: any;\r\n  projectArray: any;\r\n  role: string;\r\n\r\n  showProgramSpinner = true;\r\n  showProjectSpinner = true;\r\n\r\n  filterProgramForm: FormGroup;\r\n  filterProjectForm: FormGroup;\r\n\r\n  managersArray = [];\r\n  organizationNameArray = new Set();\r\n\r\n  constructor(\r\n    private programService: ProgramService,\r\n    private dialog: MatDialog,\r\n    private formBuilder: FormBuilder,\r\n    private employeeService: EmployeeService\r\n  ) {\r\n    this.role = '';\r\n\r\n    this.filterProgramForm = formBuilder.group({\r\n      organizationName: new FormControl(),\r\n      programName: new FormControl(),\r\n      programDate: new FormControl(new Date()),\r\n      managerEmailId: new FormControl(),\r\n      programStatus: new FormControl('ACTIVE')\r\n    })\r\n\r\n    this.filterProjectForm = formBuilder.group({\r\n      organizationName: new FormControl(),\r\n      projectName: new FormControl(),\r\n      projectDate: new FormControl(new Date()),\r\n      managerEmailId: new FormControl(),\r\n      projectStatus: new FormControl('ACTIVE')\r\n    })\r\n\r\n  }\r\n\r\n  showProgramDetails(programName: string): void {\r\n    console.log(programName);\r\n    this.dialog.open(ViewProgramCardComponent);\r\n  }\r\n\r\n\r\n  openAddProgramDialog(): void {\r\n    const dialogForProgram = this.dialog.open(AddProgramComponent, {\r\n      width: '900px',\r\n    });\r\n    dialogForProgram.afterClosed().subscribe(result => {\r\n      console.log(result);\r\n      this.showProgramSpinner = true;\r\n      this.getAllPrograms();\r\n    });\r\n  }\r\n\r\n  openAddProjectDialog(): void {\r\n    const dialogForProject = this.dialog.open(AddProjectComponent, {\r\n      width: '900px',\r\n    });\r\n\r\n\r\n    dialogForProject.afterClosed().subscribe(result => {\r\n      console.log(result);\r\n\r\n      this.getAllProjects();\r\n    });\r\n  }\r\n\r\n  getPaginatorData(event: PageEvent): PageEvent {\r\n    this.lowValue = event.pageIndex * event.pageSize;\r\n    this.highValue = this.lowValue + event.pageSize;\r\n    return event;\r\n  }\r\n\r\n  getAllPrograms(): void {\r\n\r\n    this.programService.getAllPrograms().subscribe((response) => {\r\n      console.log(response);\r\n\r\n      this.programArray = response;\r\n      this.length = this.programArray.length;\r\n      this.showProgramSpinner = false;\r\n      console.log(this.programArray);\r\n\r\n      response.forEach(program => {\r\n        this.organizationNameArray.add(program.organizationName); \r\n      })\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  getAllProgramsByManager(managerEmail: string): void {\r\n    this.programService.getProgramsByManager(managerEmail).subscribe((response) => {\r\n      console.log(response);\r\n\r\n      this.programArray = response;\r\n      this.length = this.programArray.length;\r\n      this.showProgramSpinner = false;\r\n\r\n      response.forEach(program => {\r\n        this.organizationNameArray.add(program.organizationName);\r\n      })\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  getProgramsByDateForEmployee(employeeEmail: string, dateInMillis: number): void {\r\n    this.programService.getAllActiveProgramsOnParticularDate(employeeEmail, dateInMillis).subscribe((response) => {\r\n      console.log(response);\r\n\r\n      this.programArray = response;\r\n      this.length = this.programArray.length;\r\n      this.showProgramSpinner = false;\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  filterPrograms(): void {\r\n    this.role = window.localStorage.getItem('role');\r\n    const email = window.localStorage.getItem('tgt_email');\r\n\r\n    switch (this.role) {\r\n\r\n      case 'OPERATIONS':\r\n        const searchProgramData: FormData = new FormData();\r\n        searchProgramData.append('program', JSON.stringify(this.filterProgramForm.value));\r\n\r\n        if (this.filterProgramForm.value.programDate != null) {\r\n          searchProgramData.append('date', JSON.stringify(this.filterProgramForm.value.programDate.getTime()));\r\n        }\r\n\r\n        this.programService.searchPrograms(searchProgramData).subscribe((result) => {\r\n          this.programArray = result;\r\n        })\r\n        break;\r\n\r\n      case 'MANAGER':\r\n        const searchProgramDataManager: FormData = new FormData();\r\n\r\n        searchProgramDataManager.append('program', JSON.stringify(this.filterProgramForm.value));\r\n        searchProgramDataManager.append('manager', email);\r\n\r\n        if (this.filterProgramForm.value.programDate != null) {\r\n          searchProgramDataManager.append('date', JSON.stringify(this.filterProgramForm.value.programDate.getTime()));\r\n        }\r\n\r\n        this.programService.searchProgramsManager(searchProgramDataManager).subscribe((result) => {\r\n          this.programArray = result;\r\n        })\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  resetFilterProgramForm(): void {\r\n    this.filterProgramForm.reset();\r\n    this.getAllPrograms();\r\n  }\r\n\r\n  getAllManagers(): void {\r\n    this.employeeService.getEmployeesByRole('MANAGER').subscribe((response) => {\r\n      response.forEach(manager => {\r\n        console.log(manager.emailId);\r\n        this.managersArray.push(manager.emailId);\r\n      });\r\n    });\r\n  }\r\n\r\n  getAllProjects(): void {\r\n    this.programService.getAllProjects().subscribe((response) => {\r\n      this.projectArray = response;\r\n      this.projectPaginatorLength = this.projectArray.length;\r\n      console.log(this.projectArray);\r\n      this.showProjectSpinner = false;\r\n    });\r\n  }\r\n\r\n  getAllProjectsByManager(managerEmail: string): void {\r\n    this.programService.getProjectsByManager(managerEmail).subscribe((response) => {\r\n      console.log(response);\r\n\r\n      this.projectArray = response;\r\n      this.projectPaginatorLength = this.projectArray.length;\r\n      this.showProjectSpinner = false;\r\n    });\r\n  }\r\n\r\n  getProjectsByDateForEmployee(employeeEmail: string, dateInMillis: number): void {\r\n    this.programService.getAllActiveProjectsOnParticularDate(employeeEmail, dateInMillis).subscribe((response) => {\r\n      console.log(response);\r\n\r\n      this.projectArray = response;\r\n      this.projectPaginatorLength = this.projectArray.length;\r\n      this.showProjectSpinner = false;\r\n    });\r\n  }\r\n\r\n  filterProjects(): void {\r\n    this.role = window.localStorage.getItem('role');\r\n    const email = window.localStorage.getItem('tgt_email');\r\n\r\n    switch (this.role) {\r\n\r\n      case 'OPERATIONS':\r\n        const searchProjectData: FormData = new FormData();\r\n        searchProjectData.append('project', JSON.stringify(this.filterProjectForm.value));\r\n\r\n        if (this.filterProjectForm.value.projectDate != null) {\r\n          searchProjectData.append('date', JSON.stringify(this.filterProjectForm.value.projectDate.getTime()));\r\n        }\r\n\r\n        this.programService.searchProjects(searchProjectData).subscribe((result) => {\r\n          this.projectArray = result;\r\n        })\r\n        break;\r\n\r\n      case 'MANAGER':\r\n        const searchProjectDataManager: FormData = new FormData();\r\n        searchProjectDataManager.append('project', JSON.stringify(this.filterProjectForm.value))\r\n        searchProjectDataManager.append('manager', email);\r\n\r\n        if (this.filterProjectForm.value.projectDate) {\r\n          searchProjectDataManager.append('date', JSON.stringify(this.filterProjectForm.value.projectDate.getTime()));\r\n        }\r\n\r\n        this.programService.searchProjectManager(searchProjectDataManager).subscribe((result) => {\r\n          console.log(result);\r\n          this.projectArray = result;\r\n        })\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  resetFilterProjectForm(): void {\r\n    this.filterProjectForm.reset();\r\n    this.getAllProjects();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.role = window.localStorage.getItem('role');\r\n    const email = window.localStorage.getItem('tgt_email');\r\n\r\n    const today = new Date().getTime();\r\n\r\n    console.log(this.role);\r\n    console.log(email);\r\n\r\n    switch (this.role) {\r\n      case 'MANAGER':\r\n        this.getAllProgramsByManager(email);\r\n        this.getAllProjectsByManager(email);\r\n        break;\r\n\r\n      case 'OPERATIONS':\r\n        this.getAllPrograms();\r\n        this.getAllProjects();\r\n        this.getAllManagers();\r\n        break;\r\n\r\n      case 'EMPLOYEE':\r\n        this.getProgramsByDateForEmployee(email, today);\r\n        this.getProjectsByDateForEmployee(email, today);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.programService.getAllActivePrograms('ACTIVE').subscribe((response) => {\r\n      console.log(response);\r\n    })\r\n  }\r\n}\r\n","<mat-tab-group mat-stretch-tabs class=\"example-tabs mat-elevation-z4\">\r\n  <mat-tab label=\"PROGRAMS\">\r\n    <mat-expansion-panel\r\n      *ngIf=\"role != 'EMPLOYEE'\"\r\n      class=\"mat-elevation-z0\"\r\n      [disabled]=\"true\"\r\n      #mepProgram=\"matExpansionPanel\"\r\n    >\r\n      <mat-expansion-panel-header>\r\n        <button\r\n          mat-icon-button\r\n          matTooltip=\"Refine Search\"\r\n          color=\"primary\"\r\n          (click)=\"mepProgram.expanded = !mepProgram.expanded\"\r\n        >\r\n          <mat-icon>tune</mat-icon>\r\n        </button>\r\n        <span class=\"example-spacer\"></span>\r\n\r\n        <button\r\n          mat-flat-button\r\n          matTooltip=\"Create New Program\"\r\n          color=\"primary\"\r\n          (click)=\"openAddProgramDialog()\"\r\n          *ngIf=\"role === 'OPERATIONS'\"\r\n        >\r\n          Add New Program\r\n        </button>\r\n      </mat-expansion-panel-header>\r\n\r\n      <form [formGroup]=\"filterProgramForm\">\r\n        <div fxLayout=\"column\">\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayout.xs=\"column\"\r\n            fxLayoutGap=\"2%\"\r\n            fxFlex=\"100%\"\r\n          >\r\n            <mat-form-field\r\n              fxFlex=\"50%\"\r\n              class=\"example-full-width\"\r\n              appearance=\"outline\"\r\n            >\r\n              <mat-label>Program Name</mat-label>\r\n              <input matInput formControlName=\"programName\" />\r\n            </mat-form-field>\r\n            <mat-form-field\r\n              fxFlex=\"50%\"\r\n              class=\"example-full-width\"\r\n              appearance=\"outline\"\r\n            >\r\n              <mat-label>Organization Name</mat-label>\r\n              <mat-select formControlName=\"organizationName\">\r\n                <mat-option\r\n                  *ngFor=\"let organization of organizationNameArray\"\r\n                  [value]=\"organization\"\r\n                  >{{ organization }}</mat-option\r\n                >\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayout.xs=\"column\"\r\n            fxLayoutGap=\"2%\"\r\n            fxFlex=\"100%\"\r\n          >\r\n            <mat-form-field fxFlex=\"33%\" appearance=\"outline\">\r\n              <mat-label>Choose a date</mat-label>\r\n              <input\r\n                matInput\r\n                [matDatepicker]=\"programFilterPicker\"\r\n                formControlName=\"programDate\"\r\n              />\r\n              <mat-hint>MM/DD/YYYY</mat-hint>\r\n              <mat-datepicker-toggle\r\n                matSuffix\r\n                [for]=\"programFilterPicker\"\r\n              ></mat-datepicker-toggle>\r\n              <mat-datepicker #programFilterPicker></mat-datepicker>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field\r\n              *ngIf=\"role === 'OPERATIONS'\"\r\n              fxFlex=\"33%\"\r\n              appearance=\"outline\"\r\n            >\r\n              <mat-label>Manager Email Id</mat-label>\r\n              <mat-select formControlName=\"managerEmailId\">\r\n                <mat-option\r\n                  *ngFor=\"let manager of managersArray\"\r\n                  [value]=\"manager\"\r\n                  >{{ manager }}</mat-option\r\n                >\r\n              </mat-select>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field fxFlex=\"33%\" appearance=\"outline\">\r\n              <mat-label>Program Status</mat-label>\r\n              <mat-select formControlName=\"programStatus\">\r\n                <mat-option value=\"ACTIVE\">Active</mat-option>\r\n                <mat-option value=\"INACTIVE\">Inactive</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n\r\n        <div align=\"end\">\r\n          <button\r\n            class=\"filter-buttons\"\r\n            (click)=\"resetFilterProgramForm()\"\r\n            mat-flat-button\r\n          >\r\n            Reset\r\n          </button>\r\n          <button\r\n            class=\"filter-buttons\"\r\n            mat-flat-button\r\n            color=\"primary\"\r\n            (click)=\"filterPrograms()\"\r\n          >\r\n            Apply\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </mat-expansion-panel>\r\n\r\n    <mat-paginator\r\n      [length]=\"length\"\r\n      [pageSize]=\"8\"\r\n      (page)=\"getPaginatorData($event)\"\r\n    >\r\n    </mat-paginator>\r\n\r\n    <div *ngIf=\"showProgramSpinner; else showPrograms\">\r\n      <mat-spinner class=\"progress-spinner\"></mat-spinner>\r\n    </div>\r\n\r\n    <ng-template #showPrograms>\r\n      <div *ngIf=\"programArray.length < 1; else showProgramArray\">\r\n        <h1>No Programs to Show.</h1>\r\n      </div>\r\n      <ng-template #showProgramArray>\r\n        <app-program-card\r\n          class=\"program-cards\"\r\n          *ngFor=\"let program of programArray | slice: lowValue:highValue\"\r\n          [programData]=\"program\"\r\n        ></app-program-card>\r\n      </ng-template>\r\n    </ng-template>\r\n  </mat-tab>\r\n\r\n  <mat-tab label=\"INTERNAL PROJECTS\">\r\n    <mat-expansion-panel\r\n      *ngIf=\"role != 'EMPLOYEE'\"\r\n      class=\"mat-elevation-z0\"\r\n      [disabled]=\"true\"\r\n      #mepProject=\"matExpansionPanel\"\r\n    >\r\n      <mat-expansion-panel-header>\r\n        <button\r\n          mat-icon-button\r\n          matTooltip=\"Refine Search\"\r\n          color=\"primary\"\r\n          (click)=\"mepProject.expanded = !mepProject.expanded\"\r\n        >\r\n          <mat-icon>tune</mat-icon>\r\n        </button>\r\n        <span class=\"example-spacer\"></span>\r\n        <button\r\n          mat-button\r\n          (click)=\"openAddProjectDialog()\"\r\n          mat-flat-button\r\n          color=\"primary\"\r\n          *ngIf=\"role === 'OPERATIONS'\"\r\n        >\r\n          Add New Project\r\n        </button>\r\n      </mat-expansion-panel-header>\r\n\r\n      <form [formGroup]=\"filterProjectForm\">\r\n        <div fxLayout=\"column\">\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayout.xs=\"column\"\r\n            fxLayoutGap=\"2%\"\r\n            fxFlex=\"100%\"\r\n          >\r\n            <mat-form-field\r\n              fxFlex=\"50%\"\r\n              class=\"example-full-width\"\r\n              appearance=\"outline\"\r\n            >\r\n              <mat-label>Project Name</mat-label>\r\n              <input matInput formControlName=\"projectName\" />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field fxFlex=\"50%\" appearance=\"outline\">\r\n              <mat-label>Project Status</mat-label>\r\n              <mat-select formControlName=\"projectStatus\">\r\n                <mat-option value=\"ACTIVE\">Active</mat-option>\r\n                <mat-option value=\"INACTIVE\">Inactive</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayout.xs=\"column\"\r\n            fxLayoutGap=\"2%\"\r\n            fxFlex=\"100%\"\r\n          >\r\n            <mat-form-field fxFlex=\"50%\" appearance=\"outline\">\r\n              <mat-label>Choose a date</mat-label>\r\n              <input\r\n                matInput\r\n                [matDatepicker]=\"projectFilterPicker\"\r\n                formControlName=\"projectDate\"\r\n              />\r\n              <mat-hint>MM/DD/YYYY</mat-hint>\r\n              <mat-datepicker-toggle\r\n                matSuffix\r\n                [for]=\"projectFilterPicker\"\r\n              ></mat-datepicker-toggle>\r\n              <mat-datepicker #projectFilterPicker></mat-datepicker>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field\r\n              *ngIf=\"role === 'OPERATIONS'\"\r\n              fxFlex=\"50%\"\r\n              appearance=\"outline\"\r\n            >\r\n              <mat-label>Manager Email Id</mat-label>\r\n              <mat-select formControlName=\"managerEmailId\">\r\n                <mat-option\r\n                  *ngFor=\"let manager of managersArray\"\r\n                  [value]=\"manager\"\r\n                  >{{ manager }}</mat-option\r\n                >\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n\r\n        <div align=\"end\">\r\n          <button\r\n            class=\"filter-buttons\"\r\n            (click)=\"resetFilterProjectForm()\"\r\n            mat-flat-button\r\n          >\r\n            Reset\r\n          </button>\r\n          <button\r\n            class=\"filter-buttons\"\r\n            mat-flat-button\r\n            color=\"primary\"\r\n            (click)=\"filterProjects()\"\r\n          >\r\n            Apply\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </mat-expansion-panel>\r\n\r\n    <mat-paginator\r\n      [length]=\"projectPaginatorLength\"\r\n      [pageSize]=\"8\"\r\n      (page)=\"getPaginatorData($event)\"\r\n    >\r\n    </mat-paginator>\r\n\r\n    <div *ngIf=\"showProjectSpinner; else showProjects\">\r\n      <mat-spinner class=\"progress-spinner\"></mat-spinner>\r\n    </div>\r\n\r\n    <ng-template #showProjects>\r\n      <div *ngIf=\"projectArray.length < 1; else showProjectsArray\">\r\n        <h1>No Projects to Show.</h1>\r\n      </div>\r\n\r\n      <ng-template #showProjectsArray>\r\n        <app-project-card\r\n          class=\"project-cards\"\r\n          *ngFor=\"let project of projectArray | slice: lowValue:highValue\"\r\n          [projectData]=\"project\"\r\n        ></app-project-card>\r\n      </ng-template>\r\n    </ng-template>\r\n  </mat-tab>\r\n</mat-tab-group>\r\n","import { MonthlyTrackerService } from './../../service/monthly-tracker.service';\r\nimport { DailyTracker } from './../../model/daily-tracker';\r\nimport { AfterViewInit, Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport * as moment from \"moment\";\r\nimport { DailyTrackerService } from \"src/app/service/daily-tracker.service\";\r\nimport { MonthlyTracker } from 'src/app/model/monthly-tracker';\r\n\r\n\r\n@Component({\r\n  selector: 'app-monthly-tracker-details',\r\n  templateUrl: './monthly-tracker-details.component.html',\r\n  styleUrls: ['./monthly-tracker-details.component.css'],\r\n\r\n})\r\nexport class MonthlyTrackerDetailsComponent implements AfterViewInit {\r\n  email:string;\r\n  month:string;\r\n  year:string;\r\n  employeeName:string='Muthu';\r\n  dailyTrackers:DailyTracker[]=[]\r\n  monthlyTracker:MonthlyTracker;\r\n  constructor(private apiService: MonthlyTrackerService,private api2:DailyTrackerService, private route: ActivatedRoute,public dialog: MatDialog) { \r\n    // for (let index = moment().add(10, 'days'); index < moment().add(30, 'days'); index=moment(index).add(1, 'days')) {\r\n    //   this.dates.push(index.toDate().toDateString())\r\n    // }\r\n    \r\n  }\r\n  ngAfterViewInit(): void {\r\n\r\n    this.email = this.route.snapshot.params['email'];\r\n    this.month = this.route.snapshot.params['month'];\r\n    this.year = this.route.snapshot.params['year']; \r\n    this.apiService.findMonthlyTrackerById(this.email+\"-\"+this.month+\"-\"+this.year).subscribe(response=>{\r\n      this.monthlyTracker=response;\r\n      this.api2.getTrackersForPeriod(this.email,this.monthlyTracker.startDate,this.monthlyTracker.endDate).subscribe(response=>{\r\n        this.dailyTrackers=response;        \r\n        this.dailyTrackers.forEach(dailyTracker=>{\r\n          dailyTracker.logs.forEach(log=>log.taskName)\r\n\r\n        })\r\n      })\r\n    });\r\n  }\r\n\r\n  getDateString(item:DailyTracker){\r\n    return moment(item.date).toDate().toDateString();\r\n  }\r\n  openDialog(dailyTracker:DailyTracker) {\r\n    const dialogRef = this.dialog.open(DialogContentExampleDialog,{\r\n      data:dailyTracker\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-content-example-dialog',\r\n  templateUrl: './dialog-content-example-dialog.html',\r\n  styleUrls: ['./dialog.component.css']\r\n})\r\nexport class DialogContentExampleDialog {\r\n  projects:{ name: string; hours: number; }[]=[];\r\n  selflearnings:{ name: string; hours: number; }[]=[];\r\n  programs:{ name: string; hours: number; }[]=[];\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public dailyTracker: DailyTracker,private dailog:MatDialog){\r\n    dailyTracker.logs.filter(log=>log.logType===\"PROGRAM\").forEach(log=>{\r\n      this.programs.push({name:log.taskName,hours:log.logHours});\r\n    });\r\n    dailyTracker.logs.filter(log=>log.logType===\"PROJECT\").forEach(log=>{\r\n      this.projects.push({name:log.taskName,hours:log.logHours});\r\n    });\r\n    dailyTracker.logs.filter(log=>log.logType===\"SELF_LEARNING\").forEach(log=>{\r\n      this.selflearnings.push({name:log.taskName,hours:log.logHours});\r\n    });\r\n  }\r\n  getDateString(item:DailyTracker){\r\n    return moment(item.date).toDate().toDateString();\r\n  }\r\n  close(){\r\n  this.dailog.closeAll();\r\n  }\r\n}\r\n","<div class=\"canvas\">\r\n  <div class=\"overview\">\r\n   <div>Employee: {{email}}</div>\r\n   <div>Month: July</div>\r\n   <div>Year : 2022</div>\r\n  </div>\r\n   <div class=\"main\">\r\n     <div class=\"date\" (click)=\"openDialog(item)\" *ngFor=\"let item of dailyTrackers\">\r\n       <h2>  {{getDateString(item).slice(4,7)}}</h2>\r\n       <div class=\"number\" >\r\n         {{getDateString(item).slice(8,10)}}\r\n       </div>\r\n     </div>\r\n \r\n   </div>\r\n </div>\r\n ","<div class=\"dialog\">\r\n  <mat-icon class=\"close\" (click)=\"close()\" >close</mat-icon>\r\n  <h2 mat-dialog-title>Daily Tracker</h2>\r\n  <span class=\"date\">{{getDateString(this.dailyTracker)}}</span>\r\n<br>\r\n<br>\r\n<div *ngIf=\"projects.length>0\">\r\n  <h3> <mat-icon class=\"mat-18\">web_asset</mat-icon> Projects</h3>\r\n  <hr>\r\n  <div class=\"list\" *ngFor=\"let project of projects\">\r\n    <div><b>{{project.name}}</b></div> <div class=\"hrs\">{{project.hours}} hrs</div>\r\n  </div>\r\n</div>\r\n<br *ngIf=\"projects.length>0\">\r\n<br *ngIf=\"projects.length>0\">\r\n<div *ngIf=\"programs.length>0\">\r\n  <h3> <mat-icon class=\"mat-18\">cast_for_education</mat-icon> Programs</h3>\r\n<hr>\r\n<div class=\"list\" *ngFor=\"let program of programs\">\r\n  <div><b>{{program.name}}</b></div> <div class=\"hrs\">{{program.hours}} hrs</div>\r\n</div>\r\n</div>\r\n<br *ngIf=\"programs.length>0\">\r\n<br *ngIf=\"programs.length>0\">\r\n<div *ngIf=\"selflearnings.length>0\">\r\n  <h3> <mat-icon class=\"mat-18\">menu_book</mat-icon> Self Learning</h3>\r\n<hr>\r\n<div class=\"list\" *ngFor=\"let selflearning of selflearnings\">\r\n  <div><b>{{selflearning.name}}</b></div> <div class=\"hrs\">{{selflearning.hours}} hrs</div>\r\n</div>\r\n</div>\r\n</div>\r\n","import { T } from '@angular/cdk/keycodes';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n// import * as XLSX from 'xlsx';\r\nimport { LeaveType } from 'src/app/model/daily-tracker';\r\nimport { DailyTrackerModel } from 'src/app/model/daily-tracker-model';\r\nimport { Employee } from 'src/app/model/employee';\r\nimport { EmployeeData } from 'src/app/model/employee-data';\r\nimport { LogType } from 'src/app/model/log';\r\nimport { Program } from 'src/app/model/program';\r\nimport { MemberHour, ProgramData } from 'src/app/model/program-data';\r\nimport { ProgramTime } from 'src/app/model/program-time';\r\nimport { Project } from 'src/app/model/project';\r\nimport { ProjectData } from 'src/app/model/project-data';\r\nimport { ProjectTime } from 'src/app/model/project-time';\r\n\r\n// import { XLSX$Consts } from 'xlsx';\r\nimport { ConsolidatedAnalyticsComponent } from '../consolidated-analytics/consolidated-analytics.component';\r\nimport { ngxCsv } from 'ngx-csv/ngx-csv';\r\nimport { LeavesComponent } from '../leaves/leaves.component';\r\nimport { EmployeeService } from 'src/app/service/employee.service';\r\nimport { DailyTrackerService } from 'src/app/service/daily-tracker.service';\r\nimport { ProgramService} from 'src/app/service/program.service';\r\n// import { FileSaverService } from 'ngx-filesaver';\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-consolidated-view',\r\n  templateUrl: './consolidated-view.component.html',\r\n  styleUrls: ['./consolidated-view.component.css']\r\n})\r\nexport class ConsolidatedViewComponent implements OnInit {\r\n  //data objects for passing data from consolidated view to analytics view\r\n  analyticsDataProg: any;\r\n  analyticsDataProj: any;\r\n  analyticsDataEmp: any;\r\n\r\n  //variable to check checkbox status for yearly report\r\n  yearlyReport: boolean = false;\r\n\r\n  yearlyReportDownloaded:boolean=false;\r\n  // array to hold each row of report(row=EmployeeData object)\r\n  empData: EmployeeData[] = []\r\n\r\n  //Array to hold List of all employees in company\r\n  empList: Employee[];\r\n\r\n  //Array to hold all dailytrackers for a month\r\n  dailyTrackers: DailyTrackerModel[];\r\n  dailyTrackersYear1: DailyTrackerModel[];//year variable for program report\r\n  dailyTrackersYear2: DailyTrackerModel[];//year variable for project report\r\n\r\n  //array to hold each row of Program report(row=ProgramData object)\r\n  progData: ProgramData[] = [];\r\n  projData: ProjectData[] = [];\r\n\r\n  //array to hld list of all programs /projectfor the year selectedValueYearProg\r\n  progList: any;\r\n  projList: any;\r\n  //array for name of columns in employee report\r\n  displayedColumnsEmp: string[] = ['image', 'email', 'name', 'projectHrs', 'programHrs', 'self_Learning_Hrs', 'leaves', 'manager', 'projects-programs'];\r\n\r\n  //array for name of columns in program report\r\n  displayedColumnsProg: string[] = ['programName', 'programType', 'createdOn', 'startDate', 'endDate', 'organizationName', 'managerEmailId', 'memberList', 'totalHours', 'programStatus'];\r\n\r\n  displayedColumnsProj: string[] = ['projectName', 'createdOn', 'startDate', 'endDate', 'managerEmailId', 'memberList', 'totalHours', 'projectStatus'];\r\n\r\n  dataSourceEmp: any; //datasources for tables\r\n  dataSourceProg: any;\r\n  dataSourceProj: any;\r\n\r\n  selectedValueYear: number = 2022;\r\n  selectedValueYearProg: number = 2022;\r\n  selectedValueYearProj: number = 2022;\r\n  months: string[] = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n  years: number[] = [2018, 2019, 2020, 2021, 2022];\r\n  selectedValueMonth: string = this.months[new Date().getMonth()];\r\n\r\n\r\n  applyFilterEmp(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSourceEmp.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  applyFilterProg(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSourceProg.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  applyFilterProj(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSourceProj.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  constructor( private dialog: MatDialog,private empService:EmployeeService,private dtService:DailyTrackerService,private progServ:ProgramService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.fetchAllDailyTrackers();\r\n\r\n  }\r\n\r\n  //get all employees from db\r\n  fetchAllEmployees() {\r\n    this.empService.getAllEmployees().subscribe((result: any) => {\r\n      console.log(\"all Employees:\", result);\r\n      this.empList = result;\r\n      this.createEmployeeData();\r\n    });\r\n  }\r\n\r\n  //get all daily tracker for a month and year\r\n  fetchAllDailyTrackers() {\r\n    //reset all 3 main arrays\r\n    this.empData = [];\r\n    this.empList = [];\r\n    this.dailyTrackers = []\r\n    let month: number = this.months.indexOf(this.selectedValueMonth);\r\n    let year: number = this.selectedValueYear;\r\n    if (this.yearlyReport)//if yearly report checkbox is checked, get trackers for the year\r\n    {\r\n      this.yearlyReportDownloaded=true;\r\n      this.getDailyTrackersForYear(year);\r\n    }\r\n    else {\r\n      this.yearlyReportDownloaded=false;\r\n      this.dtService.getAllDailyTrackers(month, year).subscribe((res: any) => {\r\n        console.log(res);\r\n        this.dailyTrackers = res;\r\n        this.fetchAllEmployees();\r\n      });\r\n    }\r\n  }\r\n  //get daily trackers for the year\r\n  getDailyTrackersForYear(year: number) {\r\n    let fromDateStr = \"01/01/\" + year;\r\n    let toDateStr = \"12/31/\" + year;\r\n    this.dtService.getDailyTrackersForPeriod(new Date(fromDateStr).getTime(), new Date(toDateStr).getTime()).subscribe((res: any) => {\r\n      this.dailyTrackers = res;\r\n      this.fetchAllEmployees();\r\n    }\r\n    );\r\n  }\r\n  //create Employee Data list , assigning all EmployeeData objects to Employee_List\r\n  createEmployeeData() {\r\n    for (var emp of this.empList)//for every employee\r\n    {\r\n      let totalProgHrs = 0;\r\n      let totalProjHrs = 0;\r\n      let self_Learning_Hrs = 0;\r\n      let uniqueProgList: string[] = [];\r\n      let uniqueProjList: string[] = [];\r\n      let trackersOfThisEmp: DailyTrackerModel[] = []\r\n      let leaves: number = 0;\r\n      let fullDayLeaveList = [];\r\n      let halfDayLeaveList = [];\r\n      //iterate through all trackers in dailyTrackers list to find this employee's tracker\r\n      for (var tracker of this.dailyTrackers) {\r\n        if (tracker.employeeEmail == emp.emailId) {\r\n          //add this tracker to list of this employee's daily tracker for future use in this loop\r\n          trackersOfThisEmp.push(tracker);\r\n          //capture leave status and add to leave variable 1 for fullday 0.5 for halfday\r\n          if (tracker.leaveType == LeaveType.FULL_DAY) {\r\n            let date = new Date(tracker.date);\r\n            console.log(`FullDay Leave pushed for:`, date);\r\n            fullDayLeaveList.push(tracker.date);\r\n            leaves += 1;\r\n          }\r\n          else {\r\n            if (tracker.leaveType == LeaveType.NONE) { }\r\n            else{\r\n              console.log(`HalfDay Leave pushed for:`, new Date(tracker.date));\r\n              halfDayLeaveList.push(tracker.date);\r\n              leaves += 0.5;\r\n            }\r\n          }\r\n          for (var log of tracker.logs) {\r\n            switch (log.logType) {\r\n              case LogType.PROGRAM: console.log(\"program log for:\", emp.employeeName, \" Hours:\", log.logHours);\r\n                totalProgHrs += log.logHours;\r\n                //check if this program already exists in uniqueProgList, if not, add it\r\n                let found = false;\r\n                for (let i = 0; i < uniqueProgList.length; i++) {\r\n                  if (log.taskName == uniqueProgList[i]) {\r\n                    found = true;\r\n                  }\r\n                }\r\n                if (!found) {\r\n                  uniqueProgList.push(log.taskName);//create unique list of programs\r\n                }\r\n                break;\r\n              case LogType.PROJECT: console.log(\"project log for:\", emp.employeeName, \" Hours:\", log.logHours);\r\n                totalProjHrs += log.logHours;\r\n                //check if this project already exists in uniqueProgList, if not, add it\r\n                let found1 = false;\r\n                for (let i = 0; i < uniqueProjList.length; i++) {\r\n                  if (log.taskName == uniqueProjList[i]) {\r\n                    found1 = true;\r\n                  }\r\n                }\r\n                if (!found1) {\r\n                  uniqueProjList.push(log.taskName);//create unique list of programs\r\n                }\r\n                break;\r\n              case LogType.SELF_LEARNING: console.log(\"SelfLearning for:\", emp.employeeName, \" Hours:\", log.logHours);\r\n                self_Learning_Hrs += log.logHours;\r\n                break;\r\n              default: console.log(\"Wrong Log Type Found\");\r\n            }\r\n          }\r\n        }\r\n      }\r\n      let programs: ProgramTime[] = []\r\n      for (var prog of uniqueProgList) {\r\n        programs.push(new ProgramTime(prog, 0));//create objects with program name and loghours=0\r\n      }\r\n      let projects: ProjectTime[] = [];\r\n      for (var proj of uniqueProjList) {\r\n        projects.push(new ProjectTime(proj, 0));//create objects with program name and loghours=0\r\n      }\r\n\r\n      //with unique prog and proj list, iterate through the trackers again to get total hours for each prog/proj\r\n      for (let tracker of trackersOfThisEmp) {\r\n        for (var log of tracker.logs) {\r\n          switch (log.logType) {\r\n            case LogType.PROGRAM:// if its a program log, search programtime array for prog and add to its hours\r\n              for (let i = 0; i < programs.length; i++) {\r\n                if (log.taskName == programs[i].program) {\r\n                  programs[i].time += log.logHours;\r\n                }\r\n              }\r\n              break;\r\n            case LogType.PROJECT:// if its a program log, search programtime array for prog and add to its hours\r\n              for (let i = 0; i < projects.length; i++) {\r\n                if (log.taskName == projects[i].project) {\r\n                  projects[i].time += log.logHours;\r\n                }\r\n              }\r\n              break;\r\n            case LogType.SELF_LEARNING:\r\n            default:\r\n          }\r\n        }\r\n      }\r\n      //create EmployeeData object and push to empData array FINAL OUTPUT IN REPORT\r\n      this.empData.push(new EmployeeData(emp.profileImage, emp.emailId, emp.employeeName, projects, programs, totalProgHrs, totalProjHrs, self_Learning_Hrs, leaves, emp.managerEmailId, fullDayLeaveList, halfDayLeaveList));\r\n    }\r\n    console.log(\"hello\", this.empData);\r\n    this.dataSourceEmp = new MatTableDataSource(this.empData);\r\n    this.fetchAllPrograms();\r\n    this.fetchAllProjects();\r\n  }\r\n  //gets all active/inactive projects from backend\r\n  fetchAllProjects() {\r\n    this.projList = [];\r\n    this.dailyTrackersYear2 = [];\r\n    this.projData = [];\r\n    this.progServ.getAllProjects().subscribe((res: any) => {\r\n      console.log(\"All Projects from backend:\", res);\r\n      this.projList = this.getProjectsForTheYear(res, this.selectedValueYearProj);\r\n      for (var project of this.projList) {\r\n        this.projData.push(new ProjectData(project.organizationBrandLogo, project.projectName, project.organizationName, project.createdOn, project.startDate, project.endDate, project.managerEmailId, project.projectStatus));//member list and total hours are optional parameters and will be calculated in following code\r\n      }\r\n      console.log(\"project data objects:\", this.projData);\r\n      this.createProjectData();\r\n    })\r\n\r\n  }\r\n  //gets all active/inactive programs from backend\r\n  fetchAllPrograms() {\r\n    this.progList = [];\r\n    this.dailyTrackersYear1 = [];\r\n    this.progData = [];\r\n    this.progServ.getAllPrograms().subscribe((res: any) => {\r\n      console.log(\"All Programs from backend:\", res);\r\n      this.progList = this.getProgramsForTheYear(res, this.selectedValueYearProg);\r\n      for (var program of this.progList) {\r\n        this.progData.push(new ProgramData(program.organizationBrandLogo, program.programName, program.organizationName, program.programType, program.createdOn, program.startDate, program.endDate, program.managerEmail, program.programStatus));//member list and total hours are optional parameters and will be calculated in following code\r\n      }\r\n      console.log(\"program data objects:\", this.progData);\r\n      this.createProgramData();\r\n    })\r\n  }\r\n\r\n  //creates ProgramData object for each program in progList\r\n  createProgramData() {\r\n    let yearStart = new Date(\"01/01/\" + this.selectedValueYearProg).getTime();\r\n    let yearEnd = new Date(\"12/31/\" + this.selectedValueYearProg).getTime();\r\n    this.dtService.getDailyTrackersForPeriod(yearStart, yearEnd).subscribe((result: any) => {\r\n      console.table(result);\r\n      this.dailyTrackersYear1 = result;\r\n      for (var tracker of this.dailyTrackersYear1) {\r\n        for (var log of tracker.logs) {\r\n          if (log.logType == LogType.PROGRAM) {\r\n            for (let i = 0; i < this.progData.length; i++) {\r\n              if (this.progData[i].programName == log.taskName) {\r\n                this.progData[i].totalHours += log.logHours;//add loghours to that program's total hours\r\n                //check if this employee exists in member list of that program, if not add him with hours, if yes, then add hours against that employee for that program\r\n                let memberFound = false;\r\n                for (let j = 0; j < this.progData[i].memberList.length; j++) {\r\n                  if (this.progData[i].memberList[j].member == tracker.employeeEmail) {\r\n                    memberFound = true;\r\n                    this.progData[i].memberList[j].hours += log.logHours;//if member found, add the loghours for him\r\n                  }\r\n                }\r\n                if (!memberFound) {\r\n                  this.progData[i].memberList.push(new MemberHour(tracker.employeeEmail, log.logHours));//push a new member hour entry to members array of that program  \r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      console.log(\"Final ProgramData obj for report:\", this.progData);\r\n      this.dataSourceProg = new MatTableDataSource(this.progData);\r\n    });\r\n\r\n  }\r\n\r\n  createProjectData() {\r\n    let yearStart = new Date(\"01/01/\" + this.selectedValueYearProj).getTime();\r\n    let yearEnd = new Date(\"12/31/\" + this.selectedValueYearProj).getTime();\r\n    this.dtService.getDailyTrackersForPeriod(yearStart, yearEnd).subscribe((result: any) => {\r\n      console.table(result);\r\n      this.dailyTrackersYear2 = result;\r\n      for (var tracker of this.dailyTrackersYear2) {\r\n        for (var log of tracker.logs) {\r\n          if (log.logType == LogType.PROJECT) {\r\n            for (let i = 0; i < this.projData.length; i++) {\r\n              if (this.projData[i].projectName == log.taskName) {\r\n                this.projData[i].totalHours += log.logHours;//add loghours to that program's total hours\r\n                //check if this employee exists in member list of that program, if not add him with hours, if yes, then add hours against that employee for that program\r\n                let memberFound = false;\r\n                for (let j = 0; j < this.projData[i].memberList.length; j++) {\r\n                  if (this.projData[i].memberList[j].member == tracker.employeeEmail) {\r\n                    memberFound = true;\r\n                    this.projData[i].memberList[j].hours += log.logHours;//if member found, add the loghours for him\r\n                  }\r\n                }\r\n                if (!memberFound) {\r\n                  this.projData[i].memberList.push(new MemberHour(tracker.employeeEmail, log.logHours));//push a new member hour entry to members array of that program  \r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      console.log(\"Final projectData objects:\", this.projData);\r\n      this.dataSourceProj = new MatTableDataSource(this.projData);\r\n    });\r\n\r\n  }\r\n\r\n  getProgramsForTheYear(list: Program[], year: number): Program[] {\r\n    let result = [];\r\n    let yearStart = new Date(\"01/01/\" + year).getTime();\r\n    let yearEnd = new Date(\"12/31/\" + year).getTime();\r\n\r\n    for (var prog of list) {\r\n      if (prog.createdOn >= yearStart && prog.createdOn <= yearEnd) {\r\n        result.push(prog);\r\n      }\r\n    }\r\n    console.log(\"inside get programsfor the year method, for year\", year, \"programs are\", result)\r\n    return result;\r\n  }\r\n\r\n  getProjectsForTheYear(list: Project[], year: number): Project[] {\r\n    let result = [];\r\n    let yearStart = new Date(\"01/01/\" + year).getTime();\r\n    let yearEnd = new Date(\"12/31/\" + year).getTime();\r\n\r\n    for (var proj of list) {\r\n      if (proj.createdOn >= yearStart && proj.createdOn <= yearEnd) {\r\n        result.push(proj);\r\n      }\r\n    }\r\n    console.log(\"inside get projects for the year method, for year\", year, \"programs are\", result)\r\n    return result;\r\n  }\r\n\r\n  //open analytics\r\n  openAnalyticsProg() {\r\n    //data for barchart/pieChart\r\n    let progName = [];\r\n    let progHours = [];\r\n    let employeeOnProgram = [];\r\n    for (var prog of this.progData) {\r\n      progName.push(prog.programName);\r\n      progHours.push(prog.totalHours);\r\n      employeeOnProgram.push(prog.memberList.length);\r\n    }\r\n\r\n\r\n    this.analyticsDataProg = {\r\n      barChartLabels: progName,\r\n      barChartData: [{ data: progHours, label: \"Total Billed Hours\" }],\r\n      barChartHeader: \"Program Hour Comaprison\",\r\n      pieChartLabels: progName,\r\n      pieChartData: [{ data: employeeOnProgram }],\r\n      pieChartHeader: \"TeamSize Comparison\"\r\n    }\r\n    let dialogConf = new MatDialogConfig();\r\n    dialogConf.data = this.analyticsDataProg;\r\n    this.dialog.open(ConsolidatedAnalyticsComponent, dialogConf);\r\n  }\r\n  openAnalyticsEmp() {\r\n    //data for barchart\r\n    let empName = [];\r\n    let progHrs = [];\r\n    let projHrs = [];\r\n    let slHrs = [];\r\n    for (var empObj of this.empData) {\r\n      empName.push(empObj.name);\r\n      progHrs.push(empObj.totalProgHrs);\r\n      projHrs.push(empObj.totalProjHrs);\r\n      slHrs.push(empObj.self_Learning_Hrs);\r\n    }\r\n    //data for pie chart, show hour distribution of all employees of comapny among program, project, selflearning\r\n    let compProgHr = 0, compProjHr = 0, compSelfLearnHr = 0;\r\n    for (var empObj of this.empData) {\r\n      compProgHr += empObj.totalProgHrs;\r\n      compProjHr += empObj.totalProjHrs;\r\n      compSelfLearnHr += empObj.self_Learning_Hrs;\r\n    }\r\n\r\n\r\n    this.analyticsDataEmp = {\r\n      barChartLabels: empName,\r\n      barChartData: [\r\n        { data: progHrs, label: \"Program Hrs\" },\r\n        { data: projHrs, label: \"Project Hrs\" },\r\n        { data: slHrs, label: \"SelfStudy Hrs\" },\r\n      ],\r\n      pieChartLabels: [\"Program Hrs\", \"Project Hrs\", \"Self Learning Hrs\"],\r\n      pieChartData: [{ data: [compProgHr, compProjHr, compSelfLearnHr] }],\r\n      barChartHeader: \"Employee Hours Distribution\",\r\n      pieChartHeader: \"Total Billable Hours Distr.\"\r\n\r\n    }\r\n    let dialogConf = new MatDialogConfig();\r\n    dialogConf.data = this.analyticsDataEmp;\r\n    this.dialog.open(ConsolidatedAnalyticsComponent, dialogConf);\r\n  }\r\n  openAnalyticsProj() {\r\n    let projName = [];\r\n    let projHours = [];\r\n    let employeeOnProject = [];\r\n    for (var proj of this.projData) {\r\n      projName.push(proj.projectName);\r\n      projHours.push(proj.totalHours);\r\n      employeeOnProject.push(proj.memberList.length);\r\n    }\r\n\r\n\r\n    this.analyticsDataProj = {\r\n      barChartLabels: projName,\r\n      barChartData: [{ data: projHours, label: \"Total Billed Hours\" }],\r\n      barChartHeader: \"Project Hour Comaprison\",\r\n      pieChartLabels: projName,\r\n      pieChartData: [{ data: employeeOnProject }],\r\n      pieChartHeader: \"TeamSize Comparison\"\r\n    }\r\n    let dialogConf = new MatDialogConfig();\r\n    dialogConf.data = this.analyticsDataProj;\r\n    this.dialog.open(ConsolidatedAnalyticsComponent, dialogConf);\r\n  }\r\n\r\n  //employee report excel download\r\n  downloadEmpReport() {\r\n\r\n    // let element=document.getElementById(\"employeeTable\");\r\n    let reportObj = [];\r\n    for (var emp of this.empData) {\r\n      reportObj.push({\r\n        name: emp.name, email: emp.email, projectHours: emp.totalProgHrs, programHrs: emp.totalProgHrs, selfLearningHours: emp.self_Learning_Hrs, manager: emp.manager, leaves: emp.leaves\r\n      });\r\n    }\r\n    let _title;\r\n    if(this.yearlyReportDownloaded){\r\n_title=\"year\"+this.selectedValueYear;\r\n    }\r\n    else{\r\n      _title=this.selectedValueMonth;\r\n    }\r\n    var options = {\r\n      fieldSeparator: ',',\r\n      quoteStrings: '\"',\r\n      decimalseparator: '.',\r\n      showLabels: true,\r\n      showTitle: true,\r\n      title: 'EmployeeReport:'+_title,\r\n      useBom: true,\r\n      noDownload: false,\r\n      headers: [\"Name\", \"Email\", \"Project Hours\", \"Program Hours\", \"Self Learning Hours\", \"Manager\", \"Leaves(Days)\"]\r\n    };\r\n    console.log(\"reportObj:\", reportObj);\r\n    new ngxCsv(reportObj, 'EmployeeReport:' + _title, options)\r\n\r\n  }\r\n\r\n  //show leave details in a modal\r\n  showLeaves(empDataObj: EmployeeData) {\r\n    let dialogConf = new MatDialogConfig();\r\n    dialogConf.data = {\r\n      fullDayList: empDataObj.fullDayLeavesList,\r\n      halfDayList: empDataObj.halfDayLeavesList\r\n    };\r\n    this.dialog.open(LeavesComponent, dialogConf)\r\n    console.log(\"leave list for:\", empDataObj.name, empDataObj.fullDayLeavesList, empDataObj.halfDayLeavesList);\r\n  }\r\n\r\n  downloadProjReport() {\r\n\r\n    // let element=document.getElementById(\"employeeTable\");\r\n    let reportObj = [];\r\n    for (var proj of this.projData) {\r\n      reportObj.push({\r\n        projectName:proj.projectName,createdOn: new Date(proj.createdOn),startDate:new Date(proj.startDate), endDate: new Date(proj.endDate),managerEmailId:proj.managerEmailId, totalHours:proj.totalHours,projectStatus:proj.projectStatus,\r\n      });\r\n    }\r\n    \r\n    var options = {\r\n      fieldSeparator: ',',\r\n      quoteStrings: '\"',\r\n      decimalseparator: '.',\r\n      showLabels: true,\r\n      showTitle: true,\r\n      title: 'ProjectsReport:'+this.selectedValueYearProj,\r\n      useBom: true,\r\n      noDownload: false,\r\n      headers: [\"ProjectName\", \"CreatedOn\", \"StartDate\", \"EndDate\", \"Manager\", \"TotalBilledHours\", \"ProjectStatus\"]\r\n    };\r\n    console.log(\"reportObj:\", reportObj);\r\n    new ngxCsv(reportObj, 'ProjectReport:' + this.selectedValueYearProj, options)\r\n\r\n  }\r\n  \r\n  \r\n  downloadProgReport() {\r\n\r\n    // let element=document.getElementById(\"employeeTable\");\r\n    let reportObj = [];\r\n    for (var prog of this.progData) {\r\n      reportObj.push({\r\n        programName:prog.programName,createdOn: new Date(prog.createdOn),startDate:new Date(prog.startDate), endDate: new Date(prog.endDate),managerEmailId:prog.managerEmailId, totalHours:prog.totalHours,projectStatus:prog.programStatus,organizationName:prog.organizationName,programType:prog.programType\r\n      });\r\n    }\r\n    \r\n    var options = {\r\n      fieldSeparator: ',',\r\n      quoteStrings: '\"',\r\n      decimalseparator: '.',\r\n      showLabels: true,\r\n      showTitle: true,\r\n      title: 'ProgramReport:'+this.selectedValueYearProg,\r\n      useBom: true,\r\n      noDownload: false,\r\n      headers: [\"ProjectName\", \"CreatedOn\", \"StartDate\", \"EndDate\", \"Manager\", \"TotalBilledHours\", \"ProjectStatus\",\"OrganizationName\",\"ProgramType\"]\r\n    };\r\n    console.log(\"reportObj:\", reportObj);\r\n    new ngxCsv(reportObj, 'ProgramReport:' + this.selectedValueYearProg, options)\r\n\r\n  }\r\n}\r\n","<h1 data-text=\"CONSOLIDATED REPORTS\">CONSOLIDATED REPORTS</h1>\r\n<mat-tab-group>\r\n    <mat-tab label=\"Employee\">\r\n        <div>\r\n            <mat-form-field appearance=\"standard\">\r\n                <mat-label>Filter</mat-label>\r\n                <input matInput (keyup)=\"applyFilterEmp($event)\" placeholder=\"Ex. ium\" #input>\r\n            </mat-form-field>\r\n\r\n\r\n\r\n            <mat-form-field appearance=\"fill\" class=\"width-10per\">\r\n                <mat-label>Choose Month</mat-label>\r\n                <mat-select [(ngModel)]=\"selectedValueMonth\" name=\"month\">\r\n                    <mat-option *ngFor=\"let month of months\" [value]=\"month\">\r\n                        {{month}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"fill\" class=\"width-10per\">\r\n                <mat-label>Choose Year</mat-label>\r\n                <mat-select [(ngModel)]=\"selectedValueYear\" name=\"year\">\r\n                    <mat-option *ngFor=\"let year of years\" [value]=\"year\">\r\n                        {{year}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            <mat-icon id=\"search\" (click)=\"fetchAllDailyTrackers()\">search</mat-icon>\r\n            <mat-checkbox class=\"margin-left-100px\" color=\"primary\" [(ngModel)]=\"yearlyReport\">Yearly Report</mat-checkbox>\r\n\r\n            <img src=\"../../../assets/download_icon.png\" class=\"download\" matTooltip=\"download report\" (click)=\"downloadEmpReport()\">\r\n            <img src=\"../../../assets/viewAnalyticsIcon.png\" id=\"analytics\" matTooltip=\"View Analytics\" (click)=\"openAnalyticsEmp()\">\r\n\r\n\r\n        </div>\r\n\r\n\r\n        <table mat-table [dataSource]=\"dataSourceEmp\" class=\"mat-elevation-z8\">\r\n\r\n        \r\n            <ng-container matColumnDef=\"image\">\r\n                <th mat-header-cell *matHeaderCellDef> Image </th>\r\n                <td mat-cell *matCellDef=\"let element\"><img class=\"profile\" *ngIf=\"element.image\" src=\"data:image/png;base64,{{element.image}}\" alt=\"imagefound\"> <img class=\"profile\" *ngIf=\"!element.image\" src=\"../../../assets/noProfileImage.jpg\" alt=\"imageNotFound\"></td>\r\n            </ng-container>\r\n\r\n            \r\n            <ng-container matColumnDef=\"name\">\r\n                <th mat-header-cell *matHeaderCellDef> Name </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n            </ng-container>\r\n\r\n\r\n            <ng-container matColumnDef=\"email\">\r\n                <th mat-header-cell *matHeaderCellDef> Email </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\r\n            </ng-container>\r\n\r\n\r\n\r\n            <ng-container matColumnDef=\"projects-programs\">\r\n                <th mat-header-cell *matHeaderCellDef>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    Projects-Programs</th>\r\n                <td mat-cell *matCellDef=\"let element\">\r\n                    <mat-accordion>\r\n                        <mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n                            <mat-expansion-panel-header>\r\n                                <mat-panel-title>\r\n                                    &nbsp;&nbsp;Project Details<div id=\"space-200px\"></div>Program Details\r\n                                </mat-panel-title>\r\n                            </mat-expansion-panel-header>\r\n                            <div class=\"left\">\r\n                                <div class=\"flex-row border\" *ngFor=\"let projectTime of element.projects\">\r\n                                    <p>{{projectTime.project}}</p>\r\n                                    <p>{{projectTime.time}}hrs</p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"right\">\r\n                                <div class=\"flex-row border\" *ngFor=\"let programTime of element.programs\">\r\n                                    <p>{{programTime.program}}</p>\r\n                                    <p>{{programTime.time}}hrs</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </mat-expansion-panel>\r\n                    </mat-accordion>\r\n                </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"projectHrs\">\r\n                <th mat-header-cell *matHeaderCellDef>Project</th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\">{{element.totalProjHrs}}</td>\r\n            </ng-container>\r\n\r\n\r\n\r\n\r\n            <ng-container matColumnDef=\"programHrs\">\r\n                <th mat-header-cell *matHeaderCellDef align=\"center\"> Program </th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\"> {{element.totalProgHrs}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"self_Learning_Hrs\">\r\n                <th mat-header-cell *matHeaderCellDef>Self Learning</th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\"> {{element.self_Learning_Hrs}} </td>\r\n            </ng-container>\r\n\r\n\r\n\r\n            <ng-container matColumnDef=\"leaves\">\r\n                <th mat-header-cell *matHeaderCellDef> Leaves </th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\" class=\"leaves\" matTooltip=\"Leave Details\" (click)=\"showLeaves(element)\"> {{element.leaves}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"manager\">\r\n                <th mat-header-cell *matHeaderCellDef align=\"center\">Manager</th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.manager}} </td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumnsEmp\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumnsEmp;\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n                <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n            </tr>\r\n        </table>\r\n    </mat-tab>\r\n\r\n    <!-- program report -->\r\n    <mat-tab label=\"Programs\"> \r\n        <div>\r\n            <mat-form-field appearance=\"standard\">\r\n                <mat-label>Filter</mat-label>\r\n                <input matInput (keyup)=\"applyFilterProg($event)\" placeholder=\"Ex. ium\" #input>\r\n            </mat-form-field>\r\n\r\n\r\n\r\n\r\n            <mat-form-field appearance=\"fill\" class=\"width-10per\">\r\n                <mat-label>Choose Year</mat-label>\r\n                <mat-select [(ngModel)]=\"selectedValueYearProg\" name=\"year\" (ngModelChange)=\"fetchAllPrograms()\"  matTooltip=\"Year Of Creation\">\r\n                    <mat-option *ngFor=\"let year of years\" [value]=\"year\">\r\n                        {{year}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <img src=\"../../../assets/download_icon.png\" class=\"download\" matTooltip=\"download report\" (click)=\"downloadProgReport()\">\r\n            <img src=\"../../../assets/viewAnalyticsIcon.png\" id=\"analytics\" matTooltip=\"View Analytics\" (click)=\"openAnalyticsProg()\">\r\n\r\n        </div>\r\n\r\n\r\n        <table mat-table [dataSource]=\"dataSourceProg\" class=\"mat-elevation-z8\">\r\n\r\n            <!-- Position Column -->\r\n            <ng-container matColumnDef=\"programName\">\r\n                <th mat-header-cell *matHeaderCellDef> Program</th>\r\n                <td mat-cell *matCellDef=\"let element\"><ngx-avatar name={{element.programName}} [round]=\"true\" size=\"40\"></ngx-avatar><span> {{element.programName}}</span></td>\r\n            </ng-container>\r\n\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"programType\">\r\n                <th mat-header-cell *matHeaderCellDef> Type </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.programType}} </td>\r\n            </ng-container>\r\n\r\n            <!-- Weight Column -->\r\n            <ng-container matColumnDef=\"createdOn\">\r\n                <th mat-header-cell *matHeaderCellDef> Created On </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.createdOn | date:\"dd/MM/yyyy\"}}<td>\r\n            </ng-container>\r\n\r\n\r\n            <ng-container matColumnDef=\"startDate\">\r\n                <th mat-header-cell *matHeaderCellDef> Start Date</th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\">{{element.startDate | date:\"dd/MM/yyyy\"}}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"endDate\">\r\n                <th mat-header-cell *matHeaderCellDef align=\"center\"> End Date </th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\"> {{element.endDate | date:\"dd/MM/yyyy\"}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"organizationName\">\r\n                <th mat-header-cell *matHeaderCellDef> Organisation </th>\r\n                <td mat-cell *matCellDef=\"let element\" ><img class=\"profile\" *ngIf=\"element.organizationBrandLogo\" src=\"data:image/png;base64,{{element.organizationBrandLogo}}\" alt=\"imagefound\"> <img class=\"profile\" *ngIf=\"!element.organizationBrandLogo\" src=\"../../../assets/noProfileImage.jpg\" alt=\"imageNotFound\"> {{element.organizationName}}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"managerEmailId\">\r\n                <th mat-header-cell *matHeaderCellDef align=\"center\"> Manager </th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\"> {{element.managerEmailId}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"memberList\">\r\n                <th mat-header-cell *matHeaderCellDef align=\"center\"> Working Members </th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\"> \r\n                    <mat-accordion>\r\n                        <mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n                            <mat-expansion-panel-header>\r\n                                <mat-panel-title>\r\n                                    On-Program Employees\r\n                                </mat-panel-title>\r\n                            </mat-expansion-panel-header>\r\n                            <div >\r\n                                <div class=\"flex-row-apart border\" *ngFor=\"let memberHours of element.memberList\">\r\n                                    <p>{{memberHours.member}}</p>\r\n                                    <p>{{memberHours.hours}}hr</p>\r\n                                </div>\r\n                            </div>\r\n                        </mat-expansion-panel>\r\n                    </mat-accordion>\r\n                </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"totalHours\">\r\n                <th mat-header-cell *matHeaderCellDef align=\"center\"> Total Hours </th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\"> {{element.totalHours}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"programStatus\">\r\n                <th mat-header-cell *matHeaderCellDef align=\"center\"> Status </th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\"> {{element.programStatus}} </td>\r\n            </ng-container>\r\n\r\n           \r\n\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumnsProg\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumnsProg;\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n                <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n            </tr>\r\n        </table>\r\n    </mat-tab>\r\n\r\n    <!-- project report -->\r\n    <mat-tab label=\"Projects\">\r\n        <div>\r\n            <mat-form-field appearance=\"standard\">\r\n                <mat-label>Filter</mat-label>\r\n                <input matInput (keyup)=\"applyFilterProj($event)\" placeholder=\"Ex. ium\" #input>\r\n            </mat-form-field>\r\n\r\n\r\n\r\n\r\n            <mat-form-field appearance=\"fill\" class=\"width-10per\">\r\n                <mat-label>Choose Year</mat-label>\r\n                <mat-select [(ngModel)]=\"selectedValueYearProj\" name=\"year\" (ngModelChange)=\"fetchAllProjects()\" matTooltip=\"Year Of Creation\">\r\n                    <mat-option *ngFor=\"let year of years\" [value]=\"year\">\r\n                        {{year}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <img src=\"../../../assets/download_icon.png\" class=\"download\" matTooltip=\"download report\" (click)=\"downloadProjReport()\">\r\n            <img src=\"../../../assets/viewAnalyticsIcon.png\" id=\"analytics\" matTooltip=\"View Analytics\" (click)=\"openAnalyticsProj()\">\r\n\r\n        </div>\r\n\r\n\r\n        <table mat-table [dataSource]=\"dataSourceProj\" class=\"mat-elevation-z8\">\r\n\r\n            <!-- Position Column -->\r\n            <ng-container matColumnDef=\"projectName\">\r\n                <th mat-header-cell *matHeaderCellDef> Project</th>\r\n                <td mat-cell *matCellDef=\"let element\"><ngx-avatar name={{element.projectName}} [round]=\"true\" size=\"40\"></ngx-avatar><span> {{element.projectName}}</span></td>\r\n            </ng-container>\r\n\r\n          \r\n\r\n            <!-- Weight Column -->\r\n            <ng-container matColumnDef=\"createdOn\">\r\n                <th mat-header-cell *matHeaderCellDef> Created On </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.createdOn | date:\"dd/MM/yyyy\"}}<td>\r\n            </ng-container>\r\n\r\n\r\n            <ng-container matColumnDef=\"startDate\">\r\n                <th mat-header-cell *matHeaderCellDef> Start Date</th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\">{{element.startDate | date:\"dd/MM/yyyy\"}}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"endDate\">\r\n                <th mat-header-cell *matHeaderCellDef align=\"center\"> End Date </th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\"> {{element.endDate | date:\"dd/MM/yyyy\"}} </td>\r\n            </ng-container>\r\n\r\n\r\n            <ng-container matColumnDef=\"managerEmailId\">\r\n                <th mat-header-cell *matHeaderCellDef align=\"center\"> Manager </th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\"> {{element.managerEmailId}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"memberList\">\r\n                <th mat-header-cell *matHeaderCellDef align=\"center\"> Working Members </th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\"> \r\n                    <mat-accordion>\r\n                        <mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n                            <mat-expansion-panel-header>\r\n                                <mat-panel-title>\r\n                                    On-Project Employees\r\n                                </mat-panel-title>\r\n                            </mat-expansion-panel-header>\r\n                            <div >\r\n                                <div class=\"flex-row-apart border\" *ngFor=\"let memberHours of element.memberList\">\r\n                                    <p>{{memberHours.member}}</p>\r\n                                    <p>{{memberHours.hours}}hr</p>\r\n                                </div>\r\n                            </div>\r\n                        </mat-expansion-panel>\r\n                    </mat-accordion>\r\n                </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"totalHours\">\r\n                <th mat-header-cell *matHeaderCellDef align=\"center\"> Total Hours </th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\"> {{element.totalHours}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"projectStatus\">\r\n                <th mat-header-cell *matHeaderCellDef align=\"center\"> Status </th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\"> {{element.projectStatus}} </td>\r\n            </ng-container>\r\n\r\n           \r\n\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumnsProj\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumnsProj;\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n                <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n            </tr>\r\n        </table>\r\n    </mat-tab>\r\n\r\n    \r\n\r\n</mat-tab-group>\r\n<table id=\"employeeTable\">\r\n    <th>\r\n\r\n    </th>\r\n\r\n</table>","import { Component, ElementRef, Inject, OnInit, Renderer2 } from '@angular/core';\r\nimport { Form, FormArray, FormBuilder, FormControl, FormGroup, FormsModule, NgForm, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nimport { DailyTracker, LeaveType } from 'src/app/model/daily-tracker';\r\nimport { DailyTrackerModel } from 'src/app/model/daily-tracker-model';\r\nimport { Log, LogType } from 'src/app/model/log';\r\nimport { Program, ProgramType } from 'src/app/model/program';\r\nimport { DailyTrackerService } from 'src/app/service/daily-tracker.service';\r\nimport { ProgramService } from 'src/app/service/program.service';\r\nimport { Project } from 'src/project';\r\n\r\n\r\n\r\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\r\n\r\n@Component({\r\n  selector: 'app-time-tracker',\r\n  templateUrl: './time-tracker.component.html',\r\n  styleUrls: ['./time-tracker.component.css']\r\n})\r\nexport class TimeTrackerComponent implements OnInit {\r\n  currentDate: Date = new Date();\r\n  date = '';\r\n\r\n  hdStatus = 'NotApplied';\r\n  leaves: LeaveType[] = [LeaveType.NONE, LeaveType.HALF_DAY, LeaveType.FULL_DAY];\r\n  leaveApplied: LeaveType; // ng model variable to capture leave applied value\r\n  programLogArray: Log[] = [];\r\n  projectLogArray: Log[] = [];\r\n  programArray: Program[] = [];\r\n  projectArray: Project[] = [];\r\n \r\n  dayLogs: Log[] = [];\r\n  cardArray2: number[] = [1, 2, 3];\r\n  cardArray3: number[] = [1];\r\n  totalHoursOfDay = 0;\r\n  centered = false;\r\n  disabled = false;\r\n  unbounded = false;\r\n  radius = 200;\r\n  color = '';\r\n  logMsg = '';\r\n  snackbarDurationSec = 5;\r\n  tracker: DailyTracker;\r\n  trackerCreated = false;\r\n\r\n  dailyTracker: FormGroup;\r\n\r\n\r\n\r\n  constructor(public dialogRef: MatDialogRef<TimeTrackerComponent>, public formBuilder: FormBuilder, private render: Renderer2, private elem: ElementRef, private _snackBar: MatSnackBar, @Inject(MAT_DIALOG_DATA) public _data: any, public trackerApi: DailyTrackerService, private progServ: ProgramService) {\r\n    let slHourInit = 0;\r\n    let slDetailsInit = '';\r\n    for (let i = 0; i < _data.logs.length; i++) {\r\n      if (_data.logs[i].logType == LogType.SELF_LEARNING) {\r\n        slHourInit = _data.logs[i].logHours;\r\n        slDetailsInit = _data.logs[i].selfStudyDetails;\r\n      }\r\n    }\r\n    this.dailyTracker = this.formBuilder.group({\r\n      progTimeLogs: this.formBuilder.array([]),\r\n      projTimeLogs: this.formBuilder.array([]),\r\n      slDetails: new FormControl(slDetailsInit),\r\n      slHours: new FormControl(slHourInit),   // initialize form input with data recieved from calendar Dailytracker object\r\n      remarks: new FormControl(\"\"),   // same as above\r\n\r\n    });\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    console.log(\"data rcv from calendar ui in trackerUI:\",this._data)\r\n    // display data recieved from CALENDAR to DIALOG on console\r\n   \r\n\r\n    if (this._data.trackerId == '') {\r\n      this.trackerCreated = true;\r\n      console.log('creating a new trackerObject line 217 ');\r\n      this.createFormArray_NewTracker();\r\n    }\r\n    else {\r\n      this.trackerCreated = false;\r\n      this.createFormArray_TrackerExists();\r\n    }\r\n    this.calTotalHoursOfDay();\r\n    this.logMsg = this.totalHoursOfDay + ' hrs. logged.';\r\n  }\r\n\r\n  // this method returns true if Logged hours for day =8, else returns false\r\n  totalHoursValid() {\r\n    if (this.totalHoursOfDay == 8) { return true; }\r\n    else { return false; }\r\n  }\r\n\r\n\r\n  get progTimeLogsArray(): FormArray {\r\n    return this.dailyTracker.get('progTimeLogs') as FormArray;\r\n  }\r\n  get projTimeLogsArray(): FormArray {\r\n    return this.dailyTracker.get('projTimeLogs') as FormArray;\r\n  }\r\n  // method to open snackbar incase hours logged <8 and user clicks SAVE\r\n  openSnackbar() {\r\n    this._snackBar.openFromComponent(SnackbarComponent, { duration: this.snackbarDurationSec * 1000 });\r\n  }\r\n  // method to generate formControls in each array program, project\r\n  createFormArray_TrackerExists() {\r\n    this.leaveApplied = this._data.leaveType;\r\n    console.log(\"inside createFormArray_TrackerExists. _data.logs.length=\", this._data.logs.length);\r\n    for (let i = 0; i < this._data.logs.length; i++) {\r\n      switch (this._data.logs[i].logType) {\r\n        case LogType.PROJECT: console.log(\"project log created\")\r\n        this.projectLogArray.push(this._data.logs[i]); // add this log to projectlogarray\r\n          this.projTimeLogsArray.push(new FormControl(this._data.logs[i].logHours));\r\n          break;\r\n        case LogType.PROGRAM:console.log(\"program log created\")\r\n           this.programLogArray.push(this._data.logs[i]); // add this log to programlogarray\r\n          this.progTimeLogsArray.push(new FormControl(this._data.logs[i].logHours));\r\n          break;\r\n        case LogType.SELF_LEARNING: break;\r\n        default: console.log('wrong log type found');\r\n      }\r\n    }\r\n    console.log(\"project array filtered from calenderUI data:\",this.projectLogArray);\r\n    console.log(\"program array filtered from calenderUI data:\",this.programLogArray);\r\n  }\r\n  createFormArray_NewTracker() {\r\n    this.leaveApplied = LeaveType.NONE;\r\n   \r\n    this._data.logs = this.generateDaysLogs(this._data.date); // create log array for tracker object, by calling program/project api\r\n    console.log(\"_datalogs,\", this._data.logs, \"data log length\", this._data.logs.length);\r\n    // for (let i = 0; i < this._data.logs.length; i++) {\r\n    //   console.log(\"logtype126\", this._data.logs[i].logType, \"i=\", i, \"data log length\", this._data.logs.length);\r\n    //   switch (this._data.logs[i].logType) {\r\n\r\n    //     case LogType.PROJECT: console.log(\"logtypeProject\", this._data.logs[i].logType);\r\n    //       this.projectLogArray.push(this._data.logs[i]); // add this log to projectlogarray\r\n    //       this.projTimeLogsArray.push(new FormControl(this._data.logs[i].logHours));\r\n    //       break;\r\n    //     case LogType.PROGRAM: this.programLogArray.push(this._data.logs[i]); // add this log to programlogarray\r\n    //       this.progTimeLogsArray.push(new FormControl(this._data.logs[i].logHours));\r\n    //       break;\r\n    //     case LogType.SELF_LEARNING: break;\r\n    //     default: console.log('wrong log type found');\r\n    //   }\r\n    // }\r\n    // console.log(\"_datalogs,\", this._data);\r\n    console.log(\"project array\", this.projectLogArray);\r\n  }\r\n  // submit daily tracker\r\n  submitDailyTracker(element1: HTMLElement, element2: HTMLElement) {\r\n    \r\n    this.calTotalHoursOfDay();\r\n    console.log('total hours logged=', this.totalHoursOfDay);\r\n    console.log(this.dailyTracker.value);\r\n    this.updateLogData_LeaveStatus();   // update latest info from the form to send back to calendar. _data is updated\r\n    if (this.leaveApplied == LeaveType.FULL_DAY) {\r\n      this._data.logs = [];   // just before submission, check if FULLDAY leave is applied. If YES, send empty Log array to backend\r\n    }\r\n    if (this.totalHoursValid()) {\r\n      console.log(this.dailyTracker.value);\r\n      if (this.trackerCreated)    // if a new tracker is just created, call the SAVE api\r\n      {\r\n        this.generateTrackerId();\r\n        this.trackerApi.saveTracker(this.createDailyTrackerForBackend()).subscribe((response) => console.log('response from save api from backend', response)); // api call to save the Daily tracker to backend\r\n        this.dialogRef.close(this._data);\r\n      }\r\n      else                      // if its an existing tracker, call UPDATE api\r\n      {\r\n        this.trackerApi.updateTracker(this.createDailyTrackerForBackend()).subscribe(response => console.log('response from Update Api:', response));\r\n        this.dialogRef.close(this._data);\r\n      }\r\n    }\r\n    else {\r\n      if (this.totalHoursOfDay > 8) {\r\n        this.render.setStyle(element1, 'box-shadow', '0 0 5px red,0 0 7px rgb(237, 180, 180)');\r\n        this.render.setStyle(element2, 'box-shadow', '0 0 5px red,0 0 7px rgb(237, 180, 180)');\r\n        this.logMsg = this.totalHoursOfDay + ' hrs logged. Log Exact 8hrs pls.';\r\n      }\r\n      else {\r\n        if (this.trackerCreated) {        // if a new tracker is just created, call the SAVE api\r\n          this.generateTrackerId();\r\n          this.trackerApi.saveTracker(this.createDailyTrackerForBackend()).subscribe((response) => console.log('response from save api from backend', response));\r\n          this.openSnackbar();\r\n          this.dialogRef.close(this._data);\r\n        }\r\n        else                      // if its an existing tracker, call UPDATE api\r\n        {\r\n          this.trackerApi.updateTracker(this.createDailyTrackerForBackend()).subscribe(response => console.log('response from Update Api:', response));\r\n          this.dialogRef.close(this._data);\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  calTotalHoursOfDay() {\r\n\r\n    this.totalHoursOfDay = 0;\r\n    let leaveHours = 0;\r\n    switch (this.leaveApplied) {\r\n      case LeaveType.NONE: leaveHours = 0;\r\n        break;\r\n      case LeaveType.HALF_DAY: leaveHours = 4;\r\n        break;\r\n      case LeaveType.FULL_DAY: leaveHours = 8;\r\n        break;\r\n      default: console.log('wrong leave type entered');\r\n    }\r\n    this.totalHoursOfDay += leaveHours;\r\n\r\n    for (let i = 0; i < this.progTimeLogsArray.length; i++) {     // add prog log hours\r\n      this.totalHoursOfDay += this.progTimeLogsArray.value[i];\r\n    }\r\n\r\n    for (let i = 0; i < this.projTimeLogsArray.length; i++) {     // add proj log hours\r\n      this.totalHoursOfDay += this.projTimeLogsArray.value[i];\r\n    }\r\n    this.totalHoursOfDay += this.dailyTracker.get('slHours')?.value;  // add self learning hours\r\n\r\n    console.log('at end of calculate method:', this.totalHoursOfDay);\r\n  }\r\n\r\n\r\n\r\n  closeDialogue() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  // method to create a dailytracker object that will be returned to calendar when dailyTracker is saved &closed\r\n\r\n  updateLogData_LeaveStatus() {\r\n\r\n    for (let i = 0; i < this.programLogArray.length; i++) {\r\n      this.programLogArray[i].logHours = this.dailyTracker.get('progTimeLogs').value[i];\r\n    }\r\n    for (let i = 0; i < this.projectLogArray.length; i++) {\r\n      this.projectLogArray[i].logHours = this.dailyTracker.get('projTimeLogs').value[i];\r\n    }\r\n    const selfLearningLog = new Log(LogType.SELF_LEARNING, this.dailyTracker.get('slHours')?.value, 'SelfLearning', 0, this.dailyTracker.get('slDetails')?.value);\r\n    this._data.logs = [];\r\n    for (const log of this.programLogArray) {\r\n      this._data.logs.push(log);\r\n    }\r\n    for (const log of this.projectLogArray) {\r\n      this._data.logs.push(log);\r\n    }\r\n    this._data.logs.push(selfLearningLog);\r\n    this._data.leaveType = this.leaveApplied;\r\n    console.log('data:', this._data);\r\n  }\r\n  // generates trackerId for the current dailyTracker object to be created by combining email of user with current date in milliseconds\r\n  generateTrackerId() {\r\n    this._data.trackerId = localStorage.getItem('tgt_email') + \"-\" + (new Date()).getTime();\r\n    console.log('trackerId formed inside generateTrackerId Method', this._data.trackerId);\r\n  }\r\n\r\n  generateDaysLogs(date: Date): Log[] {\r\n    this.getActivePrograms(date);// api call to program service to get active programs list\r\n    this.getActiveProjects(date); // api call to project service to get active project list\r\n    const selfStudyLog = new Log(LogType.SELF_LEARNING, 0, 'SelfLearning', 0, '');\r\n    this.dayLogs.push(selfStudyLog);\r\n    console.log(\"returning dayLogs fron generate method:\", this.dayLogs);\r\n    return this.dayLogs;\r\n  }\r\n\r\n  getActivePrograms(date: Date) {   // this method uses an API call to Program service to get active programs for this date\r\n\r\n    this.progServ.getAllActiveProgramsOnParticularDate(localStorage.getItem('tgt_email'), date.getTime()).subscribe((result: any) => {\r\n      console.log(\"inside generateDaysLogs method.Program list onAPI call is:\", result);\r\n    \r\n      for (let i = 0; i < result.length; i++) {\r\n        const tempLog = new Log(LogType.PROGRAM, 0, result[i].programName, result[i].startDate, '');\r\n        this.dayLogs.push(tempLog);\r\n        this.programLogArray.push(tempLog); // add this log to projectlogarray\r\n        this.progTimeLogsArray.push(new FormControl(tempLog.logHours));\r\n      }\r\n    });\r\n\r\n  }\r\n  getActiveProjects(date: Date) {   // this method uses an API call to Project service to get active programs for this date\r\n\r\n    this.progServ.getAllActiveProjectsOnParticularDate(localStorage.getItem('tgt_email'), date.getTime()).subscribe((result: any) => {\r\n      console.log(\"inside generateDaysLogs method.Project list onAPI call is:\", result);\r\n      \r\n      for (let i = 0; i < result.length; i++) {\r\n        const tempLog = new Log(LogType.PROJECT, 0,result[i].projectName, result[i].startDate, '');\r\n        \r\n\r\n        this.dayLogs.push(tempLog);\r\n        this.projectLogArray.push(tempLog); // add this log to projectlogarray\r\n        this.projTimeLogsArray.push(new FormControl(tempLog.logHours));\r\n      }\r\n    });\r\n\r\n  }\r\n  isFulldayApplied() {\r\n    console.log('leave status:', this.leaveApplied);\r\n    if (this.leaveApplied == LeaveType.FULL_DAY) { return true; }\r\n    else { return false; }\r\n  }\r\n  createDailyTrackerForBackend(): DailyTrackerModel {\r\n    let temp = new DailyTrackerModel(this._data.trackerId, this._data.date.getTime(), localStorage.getItem('tgt_email'), this._data.logs, this._data.leaveType, this._data.remarks); // date is converted to milliseconds with getTime()\r\n    console.log(\"inside createDailyTrackerForBackend tracker object:\", temp);\r\n    return temp;\r\n  }\r\n}\r\n","<mat-icon class=\"close highlightOnHover\" (click)=\"closeDialogue()\">close</mat-icon>\r\n<div class=\"container\" id=\"container-box\" #container>\r\n    <div class=\"header\" mat-dialog-title>\r\n        <div class=\"flex-header\">\r\n            <!-- <mat-icon class=\"highlightOnHover\">keyboard_arrow_left</mat-icon>\r\n            <mat-icon class=\"highlightOnHover\">keyboard_arrow_right</mat-icon> -->\r\n            <mat-icon style=\"font-size:30px;margin-right: 15px;\">calendar_today</mat-icon>\r\n            <span style=\"font-size:30px\">{{_data.date.toDateString()}}</span>\r\n        </div>\r\n    </div>\r\n    <!-- <div id=\"half-day\">\r\n        <mat-slide-toggle [(ngModel)]=\"isChecked\" (toggleChange)=\"updateLeaveStatus()\">HalfDayLeave: {{hdStatus}}\r\n        </mat-slide-toggle>\r\n    </div> -->\r\n    <div class=\"flex-center\">\r\n        <label id=\"example-radio-group-label\" class=\"font-verdana\">Leave </label>\r\n        <mat-radio-group aria-labelledby=\"example-radio-group-label\" class=\"example-radio-group\"\r\n            [(ngModel)]=\"leaveApplied\">\r\n            <mat-radio-button class=\"example-radio-button\" *ngFor=\"let leave of leaves\" [value]=\"leave\" class=\"font-verdana padding-left-20px\" color=\"primary\">\r\n                {{leave}}\r\n            </mat-radio-button>\r\n        </mat-radio-group>\r\n        \r\n    </div>\r\n\r\n\r\n    <div id=\"DailyTrackerForm\" [formGroup]=\"dailyTracker\">\r\n        <h2 [hidden]=\"projectLogArray.length<1\">PROJECTS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"badge bg-success\">Active</span></h2>\r\n        <div class=\"table-container\">\r\n            <table class=\"table table-striped\" [hidden]=\"projectLogArray.length<1\">\r\n                <thead>\r\n                    <tr class=\"logrow\">\r\n                        <th scope=\"col\"></th>\r\n                        <th scope=\"col\">Project Name</th>\r\n                        <th scope=\"col\">Start Date</th>\r\n                        <th scope=\"col\">\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        </th>\r\n                        <th scope=\"col\" class=\"padding-left-20px\">Hours</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody formArrayName=\"projTimeLogs\">\r\n                    <tr *ngFor=\"let project of projTimeLogsArray.controls;let i=index\">\r\n                        <th scope=\"row\">\r\n                            <ngx-avatar name={{projectLogArray[i].taskName}} [round]=\"true\" size=\"40\"></ngx-avatar>\r\n                        </th>\r\n                        <td>{{projectLogArray[i].taskName}}</td>\r\n                        <td>{{projectLogArray[i].startDate | date:\"dd/MM/yyyy\"}}</td>\r\n                        <td></td>\r\n                        <td> <input matInput placeholder=\"Log hrs\" type=\"number\" [formControlName]=\"i\" class=\"loghour\" min=\"0\" max=\"8\">\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        \r\n        <h2 [hidden]=\"programLogArray.length<1\">Programmes&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"badge bg-success\">Active</span></h2>\r\n        <div class=\"table-container\">\r\n            <table class=\"table table-striped\" [hidden]=\"programLogArray.length<1\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\"></th>\r\n                        <th scope=\"col\">Program Name</th>\r\n                        <th scope=\"col\">Start Date</th>\r\n                        <th scope=\"col\">\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        </th>\r\n                        <th scope=\"col\" class=\"padding-left-20px\">Hours</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody formArrayName=\"progTimeLogs\">\r\n                    <tr *ngFor=\"let project of progTimeLogsArray.controls;let i=index\">\r\n                        <th scope=\"row\">\r\n                            <ngx-avatar name={{programLogArray[i].taskName}} size=\"40\"></ngx-avatar>\r\n                        </th>\r\n                        <td>{{programLogArray[i]?.taskName}}</td>\r\n                        <td>{{programLogArray[i]?.startDate| date:\"dd/MM/yyyy\"}}</td>\r\n                        <td></td>\r\n                        <td> <input matInput placeholder=\"Log hrs\" type=\"number\" [formControlName]=\"i\" class=\"loghour\" min=\"0\" max=\"8\">\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <h2>SelfLearning</h2>\r\n        <div class=\"table-container\">\r\n            <table class=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\"></th>\r\n                        <th scope=\"col\"></th>\r\n                        <th scope=\"col\"></th>\r\n                        <th scope=\"col\"></th>\r\n                        <th scope=\"col\" class=\"padding-left-30px\">Hours</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr >\r\n                        <th scope=\"row\">\r\n                            <ngx-avatar name=\"Self Learning\" size=\"40\"></ngx-avatar>\r\n                        </th>\r\n                        <td>Self-Learning</td>\r\n                        <td><input matInput placeholder=\"What did you learn\" value=\"0\" type=\"text\"\r\n                                formControlName=\"slDetails\" class=\"SLDetails\" disabled=\"isFulldayApplied()\"></td>\r\n                        <td></td>\r\n                        <td> <input matInput placeholder=\"Log hrs\" value=\"0\" type=\"number\" formControlName=\"slHours\"\r\n                                class=\"loghour\" min=\"0\" max=\"8\"></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div class=\"example-form-remarks\">\r\n            <mat-form-field class=\"example-full-width-remarks\" appearance=\"fill\">\r\n                <mat-label>Remarks</mat-label>\r\n                <input matInput #message maxlength=\"256\" placeholder=\"Any additional information for the day.\"\r\n                    formControlName=\"remarks\" >\r\n                <mat-hint align=\"start\"><strong>*Not Mandatory</strong> </mat-hint>\r\n                <mat-hint align=\"end\">{{message.value.length}} / 256</mat-hint>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n    </div>\r\n    <button id=\"save\" mat-raised-button (click)=\"submitDailyTracker(alert,container)\" color=\"primary\" >SAVE</button>\r\n    <div class=\"alert alert-dark\" role=\"alert\" #alert  >\r\n        {{logMsg}}\r\n    </div>\r\n\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ProgramService } from 'src/app/service/program.service';\r\nimport { AddProjectMembersComponent } from '../add-project-members/add-project-members.component';\r\nimport { ViewProjectCardComponent } from '../view-project-card/view-project-card.component';\r\n\r\n@Component({\r\n  selector: 'app-project-card',\r\n  templateUrl: './project-card.component.html',\r\n  styleUrls: ['./project-card.component.css'],\r\n})\r\nexport class ProjectCardComponent implements OnInit {\r\n\r\n  role: string;\r\n  imageURL: any;\r\n\r\n  constructor(\r\n    private sanitizer: DomSanitizer,\r\n    public dialog: MatDialog,\r\n    private programService: ProgramService\r\n  ) {\r\n    this.role = '';\r\n  }\r\n\r\n  @Input() public projectData: any;\r\n\r\n  showProjectDetails(projectName: any): void {\r\n    console.log(projectName);\r\n\r\n    this.programService.getProjectDetails(projectName).subscribe((response) => {\r\n      console.log(response);\r\n      this.dialog.open(ViewProjectCardComponent, {\r\n        width: '600px',\r\n        data: response,\r\n      });\r\n    });\r\n  }\r\n\r\n  addProjectMembers(event: any, projectName: string): void {\r\n    event.stopPropagation();\r\n    this.dialog.open(AddProjectMembersComponent, {\r\n      width: '600px',\r\n      data: projectName,\r\n    });\r\n    console.log(projectName);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.role = window.localStorage.getItem('role');\r\n\r\n    this.imageURL = this.sanitizer.bypassSecurityTrustResourceUrl(\r\n      'data:image/jpg;base64,' + this.projectData.organizationBrandLogo\r\n    );\r\n  }\r\n}\r\n","<mat-card\r\n  class=\"example-card\"\r\n  [ngClass]=\"{\r\n    'active-project': projectData?.projectStatus === 'ACTIVE',\r\n    'inactive-project': projectData?.projectStatus === 'INACTIVE'\r\n  }\"\r\n  projectData\r\n  (click)=\"showProjectDetails(projectData?.projectName)\"\r\n>\r\n  <img mat-card-image [src]=\"imageURL\" [alt]=\"projectData?.organizationName\" />\r\n  <mat-card-header>\r\n    <mat-card-title>{{ projectData?.projectName }} </mat-card-title>\r\n    <!-- <mat-card-subtitle>{{ projectData?.organizationName }}</mat-card-subtitle> -->\r\n  </mat-card-header>\r\n\r\n  <mat-card-content>\r\n    <mat-icon\r\n      inline=\"true\"\r\n      (click)=\"addProjectMembers($event, projectData?.projectName)\"\r\n      *ngIf=\"role === 'MANAGER'\"\r\n    >\r\n      group_add</mat-icon\r\n    >\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-all-charts',\r\n  templateUrl: './all-charts.component.html',\r\n  styleUrls: ['./all-charts.component.css']\r\n})\r\nexport class AllChartsComponent implements OnInit {\r\n\r\n  public role: any;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.role = window.localStorage.getItem('role');\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"secondary-container\">\r\n    <div class=\"title\">\r\n      DASHBOARDS\r\n    </div><br><br>\r\n    <div class=\"chart-div\">\r\n      <ul class=\"nav nav-tabs\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/home/analytics/external-programs\">External Programs</a>\r\n        </li>\r\n        <li  class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/home/analytics/internal-projects\">Internal Projects</a>\r\n        </li>\r\n        <li  *ngIf=\"role==='OPERATIONS'\" class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/home/analytics/employee-distribution-in-external-programs\">Employee Distribution (Programs)</a>\r\n        </li>\r\n        <li  *ngIf=\"role==='OPERATIONS'\" class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/home/analytics/employee-distribution-in-internal-projects\">Employee Distribution (Projects)</a>\r\n        </li>\r\n        <!-- <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/home/analytics/pie-chart\">Pie Chart</a>\r\n        </li> -->\r\n      </ul>\r\n    </div>\r\n    <div>\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<script src=\"../../../../node_modules\\chart.js\\dist\\chart.js\"></script>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { EmployeeService } from 'src/app/service/employee.service';\r\nimport { ProgramService } from 'src/app/service/program.service';\r\n\r\n@Component({\r\n  selector: 'app-add-project',\r\n  templateUrl: './add-project.component.html',\r\n  styleUrls: ['./add-project.component.css'],\r\n})\r\nexport class AddProjectComponent implements OnInit {\r\n  addProjectForm: FormGroup;\r\n  file: File;\r\n  managersArray = [];\r\n\r\n  constructor(\r\n    formBuilder: FormBuilder,\r\n    private programService: ProgramService,\r\n    private snackBar: MatSnackBar,\r\n    private employeeService: EmployeeService\r\n  ) {\r\n    this.addProjectForm = formBuilder.group({\r\n      projectName: new FormControl('', Validators.required),\r\n      projectCode: new FormControl('', [Validators.required]),\r\n      costCode: new FormControl('', Validators.required),\r\n      customerId: new FormControl('', Validators.required),\r\n      managerEmailId: new FormControl('', Validators.required),\r\n      startDate: new FormControl('', Validators.required),\r\n      endDate: new FormControl('', Validators.required),\r\n      image: new FormControl('', Validators.required),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllManagers();\r\n  }\r\n\r\n  onFileUpload(event: any): void {\r\n    this.file = event.target.files[0];\r\n  }\r\n\r\n  saveProject(): void {\r\n    this.addProjectForm.patchValue({\r\n      startDate: this.addProjectForm.value.startDate.getTime(),\r\n      endDate: this.addProjectForm.value.endDate.getTime()\r\n    })\r\n\r\n    const projectData: FormData = new FormData();\r\n\r\n    projectData.append('image', this.file, this.file.name);\r\n    projectData.append('project', JSON.stringify(this.addProjectForm.value));\r\n\r\n    this.programService.addProject(projectData).subscribe(\r\n      (response) => {\r\n        this.snackBar.open('Project Created Successfully.', '', {\r\n          duration: 5000,\r\n          horizontalPosition: 'center',\r\n          verticalPosition: 'top',\r\n          panelClass: ['mat-toolbar', 'mat-primary']\r\n        });\r\n\r\n        this.addProjectForm.reset();\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        this.snackBar.open('Some error occured while adding Program.', '', {\r\n          duration: 5000,\r\n          horizontalPosition: 'center',\r\n          verticalPosition: 'top',\r\n          panelClass: ['mat-toolbar', 'mat-warn']\r\n        });\r\n\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  getAllManagers(): void {\r\n    this.employeeService.getEmployeesByRole('MANAGER').subscribe((response) => {\r\n      // console.log(response);\r\n      response.forEach((manager) => {\r\n        console.log(manager.emailId);\r\n        this.managersArray.push(manager.emailId);\r\n      });\r\n    });\r\n  }\r\n}\r\n","<div mat-dialog-title class=\"flex-container\">\r\n  <h1 mat-dialog-title>Create New Project</h1>\r\n  <span class=\"example-spacer\"></span>\r\n  <mat-icon [mat-dialog-close]=\"true\" matTooltip=\"Close\">close</mat-icon>\r\n</div>\r\n\r\n<mat-dialog-content class=\"mat-typography\">\r\n  <form [formGroup]=\"addProjectForm\" class=\"example-form\">\r\n    <div fxFlex=\"100%\" fxLayout=\"column\">\r\n      <div fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutGap=\"2%\">\r\n        <mat-form-field\r\n          appearance=\"outline\"\r\n          class=\"example-full-width\"\r\n          fxFlex=\"50%\"\r\n        >\r\n          <mat-label>Project Name</mat-label>\r\n          <input\r\n            formControlName=\"projectName\"\r\n            #projectName\r\n            matInput\r\n            maxlength=\"20\"\r\n            required\r\n          />\r\n          <mat-hint align=\"end\"\r\n            >{{ projectName.value?.length || 0 }}/20</mat-hint\r\n          >\r\n        </mat-form-field>\r\n        <div fxFlex=\"50%\">\r\n          <label>Project Logo </label>\r\n          <br />\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            formControlName=\"image\"\r\n            (change)=\"onFileUpload($event)\"\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutGap=\"2%\">\r\n        <mat-form-field\r\n          appearance=\"outline\"\r\n          class=\"example-full-width\"\r\n          fxFlex=\"50%\"\r\n        >\r\n          <mat-label>Manager Email Id</mat-label>\r\n          <mat-select formControlName=\"managerEmailId\" required>\r\n            <mat-option\r\n              *ngFor=\"let manager of managersArray\"\r\n              [value]=\"manager\"\r\n              >{{ manager }}</mat-option\r\n            >\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field\r\n          appearance=\"outline\"\r\n          class=\"example-full-width\"\r\n          fxFlex=\"50%\"\r\n        >\r\n          <mat-label>Enter Date Range for Project</mat-label>\r\n          <mat-date-range-input [rangePicker]=\"picker\">\r\n            <input\r\n              formControlName=\"startDate\"\r\n              matStartDate\r\n              placeholder=\"Start date\"\r\n              required\r\n            />\r\n            <input\r\n              formControlName=\"endDate\"\r\n              matEndDate\r\n              placeholder=\"End date\"\r\n              required\r\n            />\r\n          </mat-date-range-input>\r\n          <mat-hint>MM/DD/YYYY – MM/DD/YYYY</mat-hint>\r\n          <mat-datepicker-toggle\r\n            [for]=\"picker\"\r\n            matSuffix\r\n          ></mat-datepicker-toggle>\r\n          <mat-date-range-picker #picker></mat-date-range-picker>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutGap=\"2%\">\r\n        <mat-form-field\r\n          appearance=\"outline\"\r\n          class=\"example-full-width\"\r\n          fxFlex=\"33%\"\r\n        >\r\n          <mat-label>Project Code</mat-label>\r\n          <input\r\n            formControlName=\"projectCode\"\r\n            matInput\r\n            required\r\n            type=\"number\"\r\n          />\r\n        </mat-form-field>\r\n        <mat-form-field\r\n          appearance=\"outline\"\r\n          class=\"example-full-width\"\r\n          fxFlex=\"33%\"\r\n        >\r\n          <mat-label>Cost Code</mat-label>\r\n          <input formControlName=\"costCode\" matInput required type=\"number\" />\r\n        </mat-form-field>\r\n        <mat-form-field\r\n          appearance=\"outline\"\r\n          class=\"example-full-width\"\r\n          fxFlex=\"33%\"\r\n        >\r\n          <mat-label>Customer Code</mat-label>\r\n          <input formControlName=\"customerId\" matInput required type=\"number\" />\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions align=\"end\">\r\n  <button (click)=\"addProjectForm.reset()\" mat-raised-button>Reset</button>\r\n  <button\r\n    [mat-dialog-close]=\"true\"\r\n    (click)=\"saveProject()\"\r\n    [disabled]=\"!addProjectForm.valid\"\r\n    color=\"primary\"\r\n    mat-raised-button\r\n  >\r\n    Create\r\n  </button>\r\n</mat-dialog-actions>\r\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { LoginData } from '../component/register-login/login-data';\r\nimport { RegisterData } from '../component/register-login/register-data';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class EmployeeService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  userAuthenticationBaseUrl = 'https://nouveautracker.stackroute.io/authentication-service/api/v1/account';    // for register/login in mySql\r\n  userEmployeeServiceBaseUrl = 'https://nouveautracker.stackroute.io/employee-service/api/v1/employee';       // for updation of employee in mongoDB\r\n\r\n  // userAuthenticationBaseUrl = 'http://localhost:8080/authentication-service/api/v1/account';    // for register/login in mySql\r\n  // userEmployeeServiceBaseUrl = 'http://localhost:8080/employee-service/api/v1/employee';       // for updation of employee in mongoDB\r\n\r\n  register(registerData: RegisterData): any {\r\n    return this.httpClient.post<any>(this.userAuthenticationBaseUrl + '/register', registerData);\r\n  }\r\n\r\n\r\n  login(loginData: LoginData): any{\r\n    return this.httpClient.post<any>(this.userAuthenticationBaseUrl + '/login', loginData);\r\n  }\r\n\r\n  getEmployee(emailId: string): any{\r\n    const reqHeader = new HttpHeaders().set('Authorization', 'Bearer ' + window.localStorage.getItem('tgt'));\r\n    return this.httpClient.get<any>(this.userEmployeeServiceBaseUrl + '/employee?emailid=' + emailId, {headers: reqHeader});\r\n  }\r\n\r\n  getEmployeesByRole(role: string): any {\r\n    const reqHeader = new HttpHeaders().set('Authorization', 'Bearer ' + window.localStorage.getItem('tgt'));\r\n    return this.httpClient.get<any>(this.userEmployeeServiceBaseUrl + '/byrole?role=' + role, {headers: reqHeader});\r\n  }\r\n\r\n  getEmployeesWorkingForAParticularManager(managerEmailId: string): any {\r\n    const reqHeader = new HttpHeaders().set('Authorization', 'Bearer ' + window.localStorage.getItem('tgt'));\r\n    return this.httpClient.get<any>(\r\n      this.userEmployeeServiceBaseUrl + '/bymanageremailid?manageremailid=' + managerEmailId,\r\n      {headers: reqHeader});\r\n  }\r\n\r\n  public updateUserProfileImage(formData: FormData): any {\r\n    const reqHeader = new HttpHeaders().set('Authorization', 'Bearer ' + window.localStorage.getItem('tgt'));\r\n    return this.httpClient.put<any>(\r\n      this.userEmployeeServiceBaseUrl + '/profileimage', formData, {headers: reqHeader}).subscribe(\r\n        (res) => console.log(res),\r\n        (err) => console.log(err)\r\n      );\r\n  }\r\n  getAllEmployees(){\r\n    return this.httpClient.get(this.userEmployeeServiceBaseUrl+\"/employees\");\r\n  }\r\n\r\n}\r\n","\r\nexport class MonthlyTracker {\r\n\r\n    monthlyTrackerId: string;\r\n    employeeEmail: string;\r\n    status: string;\r\n    year: number;\r\n    monthName: string;\r\n    startDate: number;\r\n    endDate: number;\r\n    remarks: string;\r\n    \r\n    constructor(id:string,email:string,status:string,year:number,month:string,startDate:number,endDate:number,remarks:string){\r\n        this.monthlyTrackerId=id;\r\n        this.employeeEmail=email;\r\n        this.status=status;\r\n        this.year=year;\r\n        this.startDate=startDate;\r\n        this.endDate=endDate;\r\n        this.remarks=remarks;\r\n        this.monthName=month;\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-snackbar',\r\n  templateUrl: './snackbar.component.html',\r\n  styleUrls: ['./snackbar.component.css']\r\n})\r\nexport class SnackbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"alert\">\r\n    <div class=\"container\">\r\n  <mat-icon>warning</mat-icon><span>Log Hours Incomplete. Fill 8hr log ASAP.</span>\r\n  </div>\r\n</div >\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, FormGroupDirective } from '@angular/forms';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { EmployeeService } from 'src/app/service/employee.service';\r\nimport { LoginData } from './login-data';\r\nimport { RegisterData } from './register-data';\r\n\r\n@Component({\r\n  selector: 'app-register-login',\r\n  templateUrl: './register-login.component.html',\r\n  styleUrls: ['./register-login.component.css']\r\n})\r\nexport class RegisterLoginComponent implements OnInit {\r\n\r\n\r\n  constructor(private employeeService: EmployeeService,\r\n              private router: Router,\r\n              private snackBar: MatSnackBar,\r\n              private matIconRegistry: MatIconRegistry,\r\n              private domSanitizer: DomSanitizer ) {\r\n                    this.matIconRegistry.addSvgIcon('logo', this.domSanitizer.bypassSecurityTrustResourceUrl(this.googleLogoURL));\r\n  }\r\n\r\n  googleLogoURL = 'https://raw.githubusercontent.com/fireflysemantics/logo/master/Google.svg';\r\n  indexOfSelectedTab: number;\r\n\r\n  loginData: LoginData;\r\n  registerData: RegisterData;\r\n\r\n  hideLoginPassword = true;\r\n  hideRegisterPassword = true;\r\n\r\n\r\n  // definining formgroup shape to capture while logging in.\r\n  loginFormGroup = new FormGroup ({\r\n    emailId: new FormControl('', Validators.pattern(\"([!#-'*+/-9=?A-Z^-~-]+(\\.[!#-'*+/-9=?A-Z^-~-]+)*|\\\"\\(\\[\\]!#-[^-~ \\t]|(\\\\[\\t -~]))+\\\")@([!#-'*+/-9=?A-Z^-~-]+(\\.[!#-'*+/-9=?A-Z^-~-]+)*|\\[[\\t -Z^-~]*])\")),\r\n    password: new FormControl('', Validators.pattern(\"(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{7,20}\")),\r\n  });\r\n\r\n  // definining formgroup shape to capture while registering.\r\n  registerFormGroup = new FormGroup ({\r\n    employeeName: new FormControl(''),\r\n    emailId: new FormControl('', Validators.pattern(\"([!#-'*+/-9=?A-Z^-~-]+(\\.[!#-'*+/-9=?A-Z^-~-]+)*|\\\"\\(\\[\\]!#-[^-~ \\t]|(\\\\[\\t -~]))+\\\")@([!#-'*+/-9=?A-Z^-~-]+(\\.[!#-'*+/-9=?A-Z^-~-]+)*|\\[[\\t -Z^-~]*])\")),\r\n    password: new FormControl('', Validators.pattern(\"(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{7,20}\") ),\r\n  });\r\n\r\n  onLogin(): void {\r\n    this.loginData = this.loginFormGroup.value;\r\n    this.employeeService.login(this.loginData).subscribe(\r\n      response => {\r\n        console.log('User login success : ');\r\n        console.log(response);\r\n        window.localStorage.setItem('tgt', response.token);\r\n        window.localStorage.setItem('tgt_email', response.emailId);\r\n        this.getEmployee(window.localStorage.getItem('tgt_email'));\r\n        // this.loginFormGroup.reset();\r\n       \r\n      },\r\n      error => {\r\n        console.log('error message : ');\r\n        console.log(error);\r\n        this.snackBar.open('Invalid credentials. Please try again.', '', {\r\n          duration: 5000,\r\n          horizontalPosition: 'center',\r\n          verticalPosition: 'top',\r\n          panelClass: ['mat-toolbar', 'mat-warn']\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  getEmployee(emailId: string): void{\r\n    this.employeeService.getEmployee(emailId).subscribe(\r\n      response => {\r\n        console.log('Employee data retrieved : ');\r\n        console.log(response);\r\n        // this.employee = response;\r\n        window.localStorage.setItem('role', response.role);\r\n        if(response.role=='EMPLOYEE') {\r\n          this.router.navigate(['/home/calendar']).then(() => {\r\n          });\r\n        }\r\n        else {\r\n          this.router.navigate(['/home/view-program-manager']).then(() => {\r\n          });\r\n        }\r\n        \r\n        // console.log(\"employee object : \");\r\n        // console.log(this.employee);\r\n      },\r\n      error => {\r\n        console.log('error message : ');\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  onRegister(formGroupDirective: FormGroupDirective): void {\r\n    this.registerData = this.registerFormGroup.value;\r\n    this.employeeService.register(this.registerData).subscribe(\r\n      response => {\r\n        console.log('User registration success : ');\r\n        console.log(response);\r\n        this.indexOfSelectedTab = 0;     // to redirect to login tab\r\n        formGroupDirective.resetForm();  // formdirective is used only to reset this form.\r\n        this.snackBar.open('Your account has been created. Please log in.', '', {\r\n          duration: 5000,\r\n          horizontalPosition: 'center',\r\n          verticalPosition: 'top',\r\n          panelClass: ['mat-toolbar', 'mat-primary']\r\n        });\r\n      },\r\n      error => {\r\n        console.log('error message : ');\r\n        console.log(error);\r\n        this.snackBar.open('User already exists! Please log in', '', {\r\n          duration: 5000,\r\n          horizontalPosition: 'center',\r\n          verticalPosition: 'top',\r\n          panelClass: ['mat-toolbar', 'mat-warn']\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ////////////////////////////////\r\n  // loginUsingGoogle(): void {\r\n  //   this.securityService.login();\r\n  // }\r\n\r\n}\r\n","<div class=\"maindiv\">\r\n  <div style=\"display: flex; flex-wrap: wrap; justify-content: space-around;\">\r\n      <div><br><br>\r\n        <h1>NouveauTracker</h1><br><br><br>\r\n        <h2>No more hassles!</h2>\r\n        <h2>Track time directly to Agile projects</h2><br>\r\n        <div class=\"logo-holder\">\r\n          <div class=\"bar fill2\"></div>\r\n          <div class=\"bar fill4\"></div>\r\n          <div class=\"bar fill5\"></div>\r\n          <div class=\"bar fill6\"></div>\r\n          <div class=\"bar\"></div>\r\n          <div class=\"bar fill1\"></div>\r\n          <div class=\"bar fill3\"></div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <mat-card class=\"mat-elevation-z5\">\r\n          <!-- <mat-card-title style=\"text-align:center;\">Login / Register</mat-card-title> -->\r\n          <mat-tab-group mat-stretch-tabs class=\"example-stretched-tabs\" animationDuration=\"1000ms\" dynamicHeight [(selectedIndex)]=\"indexOfSelectedTab\">\r\n            <mat-tab label=\"Login\" id=\"logintab\">\r\n                <mat-card-content>\r\n                  <form [formGroup]=\"loginFormGroup\" (ngSubmit)=\"onLogin()\">\r\n                    <mat-form-field>\r\n                      <input\r\n                        matInput\r\n                        placeholder=\"Email\"\r\n                        required\r\n                        formControlName=\"emailId\">\r\n                        <mat-error>Email must be valid</mat-error>\r\n                      <mat-icon matSuffix>email</mat-icon>\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                      <input\r\n                        matInput\r\n                        placeholder=\"Password\"\r\n                        [type]=\"hideLoginPassword ? 'password' : 'text'\"\r\n                        formControlName=\"password\"\r\n                        required\r\n                        minlength=\"8\">\r\n                        <mat-error>\r\n                          Password must contain atleast 8 characters (one uppercase, one lowercase, a digit between 0-9 and a special character)\r\n                        </mat-error>               \r\n                      <mat-icon matSuffix (click)=\"hideLoginPassword = !hideLoginPassword\">{{hideLoginPassword ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                    </mat-form-field>\r\n                    <mat-checkbox style=\"margin-bottom: 35px;\">Remember Me!</mat-checkbox>\r\n                    <button\r\n                        mat-raised-button\r\n                        type=\"submit\"  [disabled]=\"loginFormGroup.invalid\"\r\n                        color=\"primary\"\r\n                        class=\"login-button\">\r\n                        <span>Login</span> \r\n                    </button>\r\n                    <!-- <button (click)=\"loginUsingGoogle()\" mat-raised-button type=\"button\" class=\"login-button\">\r\n                       <a style=\"color: black;\">\r\n                        <mat-icon svgIcon=\"logo\" style=\"padding-right: 5px; width: 20px; margin-bottom: 13px;\"></mat-icon> \r\n                        <span> &nbsp; Login with Google</span> \r\n                       </a> \r\n                    </button> -->\r\n                  </form>\r\n                </mat-card-content>\r\n            </mat-tab>\r\n            <mat-tab label=\"Register\">\r\n              <mat-card-content>\r\n                <form [formGroup]=\"registerFormGroup\" #formGroupDirective=\"ngForm\" (ngSubmit)=\"onRegister(formGroupDirective)\">\r\n                  <mat-form-field>\r\n                    <input matInput required placeholder=\"Employee Name\" formControlName=\"employeeName\">\r\n                    <mat-icon matSuffix>perm_identity</mat-icon>\r\n                    <mat-error>\r\n                      What's your name?\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                  <mat-form-field>\r\n                    <input\r\n                      matInput\r\n                      required\r\n                      placeholder=\"Email\"\r\n                      formControlName=\"emailId\">\r\n                      <mat-error>Email must be valid</mat-error>\r\n                    <mat-icon matSuffix>email</mat-icon>\r\n                  </mat-form-field>\r\n                  <mat-form-field>\r\n                    <input\r\n                      matInput\r\n                      required\r\n                      placeholder=\"Password\"\r\n                      [type]=\"hideRegisterPassword ? 'password' : 'text'\"\r\n                      minlength=\"8\"\r\n                      formControlName=\"password\">\r\n                      <mat-error>\r\n                        Password must contain atleast 8 characters (one uppercase, one lowercase, a digit between 0-9 and a special character)\r\n                      </mat-error>\r\n                    <mat-icon matSuffix (click)=\"hideRegisterPassword = !hideRegisterPassword\">{{hideRegisterPassword ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n    \r\n                  </mat-form-field>\r\n                  <button\r\n                    mat-raised-button\r\n                    type=\"submit\" [disabled]=\"registerFormGroup.invalid\"\r\n                    color=\"primary\"\r\n                    class=\"login-button\">\r\n                   <span>Register</span> \r\n                  </button>\r\n                </form>\r\n              </mat-card-content>\r\n            </mat-tab>\r\n          </mat-tab-group>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n</div>\r\n  <!-- ///////////////////////////////////// -->\r\n<div  class=\"features-div\">\r\n  <div class=\"features-head\">\r\n    <h1>Time Management Features</h1>\r\n    <h2>Across Devices</h2>\r\n  \r\n    <p>Track productivity, attendance, and \r\n      performance with a simple time tracker and calendar.\r\n    </p>\r\n  </div>\r\n  <div class=\"cards\">\r\n    <div class=\"col\">\r\n      <div class=\"card aqua\">\r\n        <h2>Time Tracker</h2>\r\n        <p>Update your daily tracker in less than 30 seconds manually</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"col\">\r\n      <div class=\"card red\">\r\n        <h2>Program/Project</h2>\r\n        <p>Operations team adds new program/project and assign it to a manager</p>\r\n      </div>\r\n    \r\n      <div class=\"card orange\">\r\n        <h2>Reports</h2>\r\n        <p>Consolidated reports, approval sheets and final reports, and export the data</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"col\">\r\n      <div class=\"card blue\">\r\n        <h2>Dashboard</h2>\r\n        <p>Visual dashboards to see where you spend time and what your team is working on.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- ///////////////////////////////////// -->\r\n<div class=\"why-nouveautracker\">\r\n  <div class=\"features-head\">\r\n    <h1 style=\"color: rgb(226, 223, 223)\">Why track time with NouveauTracker</h1>\r\n  </div>\r\n  <div class=\"why-container\" >\r\n    <div class=\"why-features\" >\r\n      <img src=\"../../../assets/productivity.jpg\" alt=\"\">\r\n      <h2>Boost Productivity</h2>\r\n      <p>Track time you spend on activities, see where your time goes, and improve your time management skills. </p>\r\n    </div>\r\n    <div class=\"why-features\">\r\n      <img src=\"../../../assets/billing.jpg\" alt=\"\">\r\n      <h2>Bill Clients</h2>\r\n      <p>Track billable time, show clients how much you've worked, see how much money you've earned, and create invoices.</p>\r\n    </div>\r\n    <div class=\"why-features\">\r\n      <img src=\"../../../assets/business-intelligence.jpg\" alt=\"\">\r\n      <h2>Business Intelligence</h2>\r\n      <p>Measure time spent on daily activities to find opportunities for improvements, understand time spent on ad-hoc requests and workload distribution, and improve project efficiency and cost capitalisation.</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- ////////////////////////////////////////// -->\r\n<div class=\"email-24\">\r\n  <div class=\"leaf-body\">\r\n    <div class=\"leaf-container\">\r\n      <div>\r\n        <div class=\"leafs\">\r\n          <img class=\"leaf1\" src=\"https://assets.codepen.io/2621168/leaf1.png\" alt=\"leaf\">\r\n          <img class=\"leaf2\" src=\"https://assets.codepen.io/2621168/leaf2.png\" alt=\"leaf\">\r\n          <img class=\"leaf3\" src=\"https://assets.codepen.io/2621168/leaf3.png\" alt=\"leaf\">\r\n        </div>\r\n        \r\n        <svg viewBox=\"0 0 1 1\"  width=\"250.0px\" height=\"100.0px\" overflow=\"visible\">\r\n          <defs >\r\n              <clipPath  clipPathUnits=\"objectBoundingBox\" id=\"deermask\">\r\n                  <path d=\"M303.49,371.1l-.2-.511a.145.145,0,0,0-.188-.082l-.511.2a.145.145,0,0,0-.082.188l.2.511a.145.145,0,0,0,.188.082l.511-.2A.145.145,0,0,0,303.49,371.1Zm-.547.166a.079.079,0,0,1-.1-.045l-.109-.281a.079.079,0,0,1,.045-.1l.281-.109a.079.079,0,0,1,.1.045l.109.281a.079.079,0,0,1-.045.1Z\" transform=\"translate(-302.5 -370.5)\" fill=\"#fff\"/>\r\n              </clipPath>\r\n          </defs>\r\n        </svg> \r\n      </div>\r\n      <div >\r\n        <h2> &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; Get emails and stay updated ! </h2>\r\n        <!-- <h3>Gmail</h3> -->\r\n            \r\n      </div>\r\n    </div>  \r\n  </div>\r\n  <div class=\"leaf-body\">\r\n    <div class=\"leaf-container\">\r\n      <div >\r\n        <h2>24/7 service for our customers &nbsp;&nbsp;</h2>\r\n      </div>\r\n      <div>\r\n        <div class=\"loop-wrapper\">\r\n          <div class=\"mountain\"></div>\r\n          <div class=\"hill\"></div>\r\n          <div class=\"tree\"></div>\r\n          <div class=\"tree\"></div>\r\n          <div class=\"tree\"></div>\r\n          <div class=\"rock\"></div>\r\n          <div class=\"truck\"></div>\r\n          <div class=\"wheels\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- ////////////////////////////////////////////////// -->\r\n<footer>\r\n  <ul class=\"social-icon\">\r\n    <li><a href=\"#\"><img src=\"../../../assets/facebook white.ico\" alt=\"\"></a></li>\r\n    <li><a href=\"#\"><img src=\"../../../assets/twitter white.ico\" alt=\"\"></a></li>\r\n    <li><a href=\"#\"><img src=\"../../../assets/gmail white.ico\" alt=\"\"></a></li>\r\n    <li><a href=\"#\"><img src=\"../../../assets/linkedin white.ico\" alt=\"\"></a></li>\r\n  </ul>\r\n  <ul class=\"menu\">\r\n    <li><a href=\"\">Home</a></li>\r\n    <li><a href=\"\">Team</a></li>\r\n    <li><a href=\"\">Feedback</a></li>\r\n  </ul>\r\n  <!-- <p>©2022 NouveauTracker | All Rights Reserved</p>   -->\r\n</footer>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport * as moment from 'moment';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { TimeTrackerComponent } from '../time-tracker/time-tracker.component';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { DailyTracker, LeaveType } from 'src/app/model/daily-tracker';\r\nimport { Program, ProgramType } from 'src/app/model/program';\r\nimport { Log, LogType } from 'src/app/model/log';\r\nimport { templateJitUrl } from '@angular/compiler';\r\nimport { DailyTrackerService } from 'src/app/service/daily-tracker.service';\r\nimport { DailyTrackerModel } from 'src/app/model/daily-tracker-model';\r\nimport { MissingTrackersComponent } from '../missing-trackers/missing-trackers.component';\r\nimport { MonthlyTrackerService } from 'src/app/service/monthly-tracker.service';\r\nimport { MonthlyTracker } from 'src/app/model/monthly-tracker';\r\n\r\n@Component({\r\n  selector: 'app-calendar',\r\n  templateUrl: './calendar.component.html',\r\n  styleUrls: ['./calendar.component.css']\r\n})\r\nexport class CalendarComponent implements OnInit {\r\n  // all data variables\r\n  trackerListMonth: DailyTracker[] = []; // list of DailyTracker objects for a month displayed\r\n  daysInMonth = 0; // captures total number of days in a monmth being displayed\r\n  firstDay = 0; // for capturing the weekday from which month starts\r\n  month = 0; // use to create tracker object array for a month\r\n  year = 0; // used to create tracked object array for a month\r\n  employeeEmail = '';\r\n  todaysDate = moment(); // keeps current date throughout the program\r\n  date = moment(); // used to navigate and show different month tracker object in calendar\r\n  desiredDate: Date = new Date(); // ngModel variable to pick date from nav calendar\r\n  dailyTrackerForm: FormGroup;\r\n  projectArray: Program[];\r\n  programArray: Program[];\r\n  firstDayOfMonth: Date;\r\n  lastDayOfMonth: Date;\r\n  mSD: number = 21;           //monthly submission date on which monthly tracker submit button gets active every month, set to 21st of every month currently\r\n  monthlySubmissionActive: boolean = false;\r\n  allMonths: string[] = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];//array to convert an index into month name\r\n  allTrackersComplete:boolean; //used in monthlySubmission() to check if all logs are complete, to proceed with saving with api in backend\r\n  mtToDate: moment.Moment;   //end date of monthly tracker report\r\n  mtFromDate: moment.Moment;//start date of monthly tracker report\r\n  monthlyTrackerMadeAlready: boolean;\r\n\r\n\r\n  constructor(public _fb: FormBuilder, public dialog: MatDialog, private apiService: DailyTrackerService, private monthlyService: MonthlyTrackerService) {\r\n    this.dailyTrackerForm = this._fb.group({\r\n      calendarDays: this._fb.array([])\r\n    });\r\n\r\n  }\r\n\r\n  // ON-INIT METHOD\r\n  ngOnInit(): void {\r\n\r\n\r\n    this.createMonthTrackers();\r\n    this.checkIfMonthlySubmissionActive();\r\n\r\n\r\n  }\r\n\r\n  // method to load a picked month\r\n\r\n  loadMonth() {\r\n    this.date = moment(this.desiredDate);\r\n    this.createMonthTrackers();\r\n    this.checkIfMonthlySubmissionActive();\r\n  }\r\n\r\n  // method to Create DailyTracker objects for a month\r\n  createMonthTrackers() {\r\n\r\n    this.trackerListMonth = [];\r\n    this.daysInMonth = moment(this.date).daysInMonth();\r\n    this.firstDay = moment(this.date).startOf('M').weekday(); // gives weekday for first day of month in number e.g 5 for friday\r\n    this.month = this.date.month() + 1; // month() returns 6 for July, we need to have 7 for july\r\n    this.year = this.date.year();\r\n    for (let j = 0; j < this.firstDay; j++)// loop to make state=false for inserting null trackers to shift first day of month to correct weekday in calendar\r\n    {\r\n      const temp = new DailyTracker(new Date(), false);\r\n      this.trackerListMonth.unshift(temp);\r\n    }\r\n    for (let i = 1; i <= this.daysInMonth; i++) {\r\n\r\n      const dateStr = this.year + '-' + this.month + '-' + i;\r\n      if (i == 1) {\r\n        this.firstDayOfMonth = new Date(dateStr); // capture first DATE of month\r\n      }\r\n      if (i == this.daysInMonth) {\r\n        this.lastDayOfMonth = new Date(dateStr); // capture last DATE of month\r\n      }\r\n      const temp = new DailyTracker(new Date(dateStr), true);\r\n      temp.employeeEmail = this.employeeEmail;\r\n      this.trackerListMonth.push(temp);\r\n    }\r\n    this.showCurrentDay();\r\n    console.table(this.trackerListMonth);\r\n    //get tracker data from backend and update in frontend tracker objects of calendar\r\n    this.getAllTrackersFromDB().subscribe((result: any) => {\r\n      console.log(\"tracker for whole month from backend\", result);\r\n      let trackerListFromDB = result;\r\n      for (let i = 0; i < trackerListFromDB.length; i++) {\r\n        for (let j = 0; j < this.trackerListMonth.length; j++) {\r\n          if (trackerListFromDB[i].date == this.trackerListMonth[j].date.getTime())// if dates match\r\n          {\r\n            this.trackerListMonth[j].leaveType = trackerListFromDB[i].leaveType;\r\n            this.trackerListMonth[j].logs = trackerListFromDB[i].logs;\r\n            this.trackerListMonth[j].remarks = trackerListFromDB[i].remarks;\r\n            this.trackerListMonth[j].trackerId = trackerListFromDB[i].dailyTrackerID;\r\n            this.trackerListMonth[j].employeeEmail = trackerListFromDB[i].employeeEmail;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n  // method for API call to get all dailyTrackers for a month\r\n  getAllTrackersFromDB() {\r\n    return this.apiService.getTrackersForPeriod(localStorage.getItem('tgt_email'), this.firstDayOfMonth.getTime(), this.lastDayOfMonth.getTime());\r\n  }\r\n\r\n  // Method to open dailytracker UI for a date\r\n  openDialog(tracker: any) {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.disableClose = true;\r\n\r\n    console.log('data sent from calendar:', tracker);\r\n    dialogConfig.data = tracker;\r\n    const dialogRef = this.dialog.open(TimeTrackerComponent, dialogConfig);\r\n\r\n    dialogRef.afterClosed().subscribe((result: any) => {\r\n      console.log('Dialog result', result);\r\n      // update the dailyTracker data for this Date\r\n      for (const tracker of this.trackerListMonth) {\r\n        if (result.logs.length > 0) {\r\n          console.log(\"copying logs back to calendar\");\r\n          tracker.logs = result.logs;;\r\n          console.log(\"tracker object after copying logs\", tracker)\r\n          break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n  // this Method sets attribut currentDay of a Daily Tracker object to TRUE\r\n  showCurrentDay() {\r\n    for (const tracker of this.trackerListMonth) {\r\n      if (this.todaysDate.date() == tracker.date.getDate() && this.todaysDate.month() == tracker.date.getMonth() && this.todaysDate.year() == tracker.date.getFullYear()) { tracker.currentDay = true; }\r\n      else { tracker.currentDay = false; }\r\n    }\r\n  }\r\n  // methods to navigate and show next and previous months\r\n  showNextMonth() {\r\n    this.date.add(1, 'M');\r\n    this.createMonthTrackers();\r\n    this.checkIfMonthlySubmissionActive();\r\n  }\r\n  showPreviousMonth() {\r\n    this.date.subtract(1, 'M');\r\n    this.createMonthTrackers();\r\n    this.checkIfMonthlySubmissionActive();\r\n\r\n  }\r\n  // this method identifies saturdays and sundays and sets them as holiday in calendar. this method is called through ngFor from HTML\r\n  isWeekend(tracker: DailyTracker) {\r\n\r\n    if (tracker.date.getDay() == 0 || tracker.date.getDay() == 6) {\r\n      tracker.leaveType = LeaveType.NONE;\r\n      tracker.state = false;\r\n      return true;\r\n    }\r\n    else { return false; }\r\n  }\r\n  // this method disbales all future dates for editing\r\n  isFutureDate(tracker: DailyTracker): boolean {\r\n    const trackerMomemnt = moment(tracker.date);\r\n    const currentMoment = moment(this.todaysDate);\r\n    if (trackerMomemnt.isSameOrBefore(currentMoment)) {// if tracker date is earlier than current date\r\n      return false;                                 // do not disable\r\n    }\r\n    else { return true; }                                  // disable\r\n  }\r\n\r\n\r\n\r\n  getTotalLoggedHours(tracker: DailyTracker): number {\r\n    let sum = 0;\r\n    for (const log of tracker.logs) {\r\n      sum += log.logHours;\r\n    }\r\n    return sum;\r\n  }\r\n  getTotalLoggedHoursModel(tracker: DailyTrackerModel): number {\r\n    let sum = 0;\r\n    for (const log of tracker.logs) {\r\n      sum += log.logHours;\r\n    }\r\n    return sum;\r\n  }\r\n  isFullDayLeave(tracker: DailyTracker) {\r\n    if (tracker.leaveType == LeaveType.FULL_DAY) { return true; }\r\n    else { return false; }\r\n  }\r\n  isHalfdayLeave(tracker: DailyTracker) {\r\n    if (tracker.leaveType == LeaveType.HALF_DAY) { return true; }\r\n    else { return false; }\r\n  }\r\n  monthlySubmission() {\r\n    if (this.monthlySubmissionActive)//if monthlySubmission is ACTIVE i.e its true\r\n    {\r\n      //pass both dates as moment objects,check is all logs are present and filled for 8 hours\r\n      this.checkTrackersLogStatus(this.mtFromDate, this.mtToDate);//returns boolean\r\n      // console.log(\"boolean alltrackerscompleted:\",this.allTrackersComplete);\r\n      // if (this.allTrackersComplete)\r\n      //  { //create a new monthly tracker ( either to save or to submit again)\r\n      //   let newMonthlyId = localStorage.getItem('tgt_email') + \"-\" + this.allMonths[this.firstDayOfMonth.getMonth()] + \"-\" + this.firstDayOfMonth.getFullYear();\r\n      //   var monthlyTracker = new MonthlyTracker(newMonthlyId, localStorage.getItem(\"tgt_email\"), \"SUBMITTED\", this.firstDayOfMonth.getFullYear(), this.allMonths[this.firstDayOfMonth.getMonth()], this.mtFromDate.toDate().getTime(), this.mtToDate.toDate().getTime(), \"\");\r\n       \r\n      //   //if monthly tracker is already made, it was reverted, and now we are submitting it again\r\n      //   if (this.monthlyTrackerMadeAlready) {\r\n      //       console.log(\"ReSUBMITTING monthly tracker\",monthlyTracker);\r\n      //       this.monthlyService.SubmitMonthlyTracker(monthlyTracker).subscribe(res=>console.log(\"Result after Resubmitting MT:\",res));\r\n      //       this.monthlySubmissionActive=false;\r\n      //   }\r\n      //   else {\r\n      //  //save fresh MT\r\n      //  console.log(\"SAVING fresh monthly tracker\",monthlyTracker);\r\n      //  this.monthlyService.saveMonthlyTracker(monthlyTracker);\r\n      //  this.monthlySubmissionActive=false;\r\n\r\n      //   }\r\n      // }\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n  //check whether 8 hour log for each day has been submitted for the month( 21st to 20th)\r\n  //checks first if all daily trackers exist, then checks if 8 hours are logged or full day leave is logged\r\n  checkTrackersLogStatus(fromDate: moment.Moment, toDate: moment.Moment){\r\n\r\n    //get all trackers that exist between fromDate and toDate from backend\r\n    var missingTrackerArray = [];\r\n    var incompleteTrackerArray = [];\r\n    this.apiService.getTrackersForPeriod(localStorage.getItem('tgt_email'), fromDate.toDate().getTime(), toDate.toDate().getTime()).subscribe(result => {\r\n      console.log(\"trackers in given period are:\", result);\r\n      let iterator = moment(fromDate);\r\n\r\n\r\n      while (iterator.isSameOrBefore(toDate)) {\r\n\r\n\r\n        if (iterator.toDate().getDay() > 0 && iterator.toDate().getDay() < 6)//if its a weekday\r\n        {\r\n          \r\n          if (!this.logExists(iterator.toDate().getTime(), result))//if the date does not exists in the trackerlist\r\n          {\r\n            \r\n            missingTrackerArray.push(iterator.toDate());//push the Date into list of missing tracker dates array\r\n          }\r\n          else  //date exists in the trackerlist, then check if 8 hours have been logged(leave+log should=8)\r\n          {\r\n            if (!this.logHoursEquals8(iterator.toDate().getTime(), result)) {\r\n              incompleteTrackerArray.push(iterator.toDate());\r\n            }\r\n          }\r\n        }\r\n        iterator.add(1, 'd');//increment iterator by 1 day\r\n      }\r\n\r\n      const dialogConf = new MatDialogConfig();\r\n      dialogConf.data = { missing: missingTrackerArray, incomplete: incompleteTrackerArray };//\r\n      this.dialog.open(MissingTrackersComponent, dialogConf);\r\n      //if all trackers filled and logs complete\r\n      if (incompleteTrackerArray.length == 0 && missingTrackerArray.length == 0) {\r\n        console.log(\"inside if condition to return TRUE. inctrkarray:\",incompleteTrackerArray,\"length:\",incompleteTrackerArray.length,\"missingtrkarr:\",missingTrackerArray,\"length:\",missingTrackerArray.length);\r\n         this.allTrackersComplete=true;\r\n       }\r\n       else {\r\n         this.allTrackersComplete= false;\r\n       }\r\n       //\r\n       console.log(\"boolean alltrackerscompleted:\",this.allTrackersComplete);\r\n      if (this.allTrackersComplete)\r\n       { //create a new monthly tracker ( either to save or to submit again)\r\n        let newMonthlyId = localStorage.getItem('tgt_email') + \"-\" + this.allMonths[this.firstDayOfMonth.getMonth()] + \"-\" + this.firstDayOfMonth.getFullYear();\r\n        var monthlyTracker = new MonthlyTracker(newMonthlyId, localStorage.getItem(\"tgt_email\"), \"SUBMITTED\", this.firstDayOfMonth.getFullYear(), this.allMonths[this.firstDayOfMonth.getMonth()], this.mtFromDate.toDate().getTime(), this.mtToDate.toDate().getTime(), \"\");\r\n       \r\n        //if monthly tracker is already made, it was reverted, and now we are submitting it again\r\n        if (this.monthlyTrackerMadeAlready) {\r\n            console.log(\"ReSUBMITTING monthly tracker\",monthlyTracker);\r\n            this.monthlyService.SubmitMonthlyTracker(monthlyTracker).subscribe(res=>console.log(\"Result after Resubmitting MT:\",res));\r\n            this.monthlySubmissionActive=false;\r\n        }\r\n        else {\r\n       //save fresh MT\r\n       console.log(\"SAVING fresh monthly tracker\",monthlyTracker);\r\n       this.monthlyService.saveMonthlyTracker(monthlyTracker);\r\n       this.monthlySubmissionActive=false;\r\n\r\n        }\r\n      }\r\n    })\r\n    \r\n  }\r\n  //method returns true if dailyTracker corresponding the date parameter exists in tracker array passed as parameter\r\n  logExists(date: number, trackerList: any): boolean {\r\n    for (var tracker of trackerList) {\r\n      if (tracker.date == date) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;//if date not found in trackerlist\r\n  }\r\n\r\n  //method takes a date and searches for dailyTracker in array for that date and return true if leave+log=8, returns false if leave+loghrs<8\r\n  logHoursEquals8(date: number, trackerList: any): boolean {\r\n\r\n    for (var tracker of trackerList) {\r\n      if (tracker.date == date) {\r\n        if (tracker.leaveHours + this.getTotalLoggedHoursModel(tracker) == 8) {\r\n          console.log(\"Leave+log==8, actual sum:\", tracker.leaveHours, this.getTotalLoggedHoursModel(tracker));\r\n          return true;\r\n        }\r\n\r\n        else {\r\n          console.log(\"Leave+log!=8, actual sum:\", tracker.leaveHours, this.getTotalLoggedHoursModel(tracker))\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  //this methods sets variable monthlySubmissionActive as TRUE or FALSE on checking 3 conitions, date of submission, if Monthly tracker exists, if it exists, its status id REVERTED or anything else\r\n  checkIfMonthlySubmissionActive() {\r\n    //assuming monthly tracker is not made by default. condition check will make it true if its already existing in backend.\r\n    this.monthlyTrackerMadeAlready = false;\r\n\r\n    //reset to false every time a check is done\r\n    this.monthlySubmissionActive = false;\r\n\r\n    //make a date string get month & year from firstDayOfMonth(date) and date is 1day before monthly submission gets active +1 is required with getMonth() as it returns months from 0-11 jan-dec\r\n    let toDateStr = (this.firstDayOfMonth.getMonth() + 1) + \"-\" + (this.mSD - 1) + \"-\" + this.firstDayOfMonth.getFullYear();\r\n\r\n    this.mtToDate = moment(new Date(toDateStr));\r\n    this.mtFromDate = moment(this.mtToDate);\r\n    this.mtFromDate.subtract(1, 'M');\r\n    this.mtFromDate.add(1, 'd');\r\n    console.log(\"from:\", this.mtFromDate.toDate(), \"to:\", this.mtToDate.toDate());\r\n\r\n    //make a date string get month & year from firstDayOfMonth(date) and date is when monthly submission gets active , +1 is required with getMonth() as it returns months from 0-11 jan-dec\r\n    let mSubDateStr = (this.firstDayOfMonth.getMonth() + 1) + \"-\" + (this.mSD) + \"-\" + this.firstDayOfMonth.getFullYear();\r\n    \r\n    let subDate = moment(new Date(mSubDateStr));\r\n    if (this.todaysDate.isSameOrAfter(subDate))//if todays date is equal or has passed monthly submission date\r\n    {\r\n      let searchId = localStorage.getItem('tgt_email') + \"-\" + this.allMonths[this.firstDayOfMonth.getMonth()] + \"-\" + this.firstDayOfMonth.getFullYear();// create a monthly trackerId to search for in DB\r\n\r\n      //check if monthly tracker already exists by searchin for ID of MT in DB\r\n      this.monthlyService.findMonthlyTrackerById(searchId).subscribe((result: any) => {\r\n        console.log(\"result for monthly trackerId\",searchId,\" search:\", result.data);\r\n       \r\n          if (result.monthlyTrackerId == searchId)//monthly tracker is found, then check its status\r\n          {\r\n            this.monthlyTrackerMadeAlready = true;\r\n            if (result.status == \"REVERTED\") {\r\n              console.log(\"this month tracker found with status REVERTED\");\r\n              this.monthlySubmissionActive = true;    //if reverted, activate button for submission again\r\n            }\r\n            else {\r\n              console.log(\"this month tracker found with status not as REVERTED\")\r\n              this.monthlySubmissionActive = false;   //if any other status , deactivate button for submission\r\n            }\r\n          }\r\n        // }\r\n\r\n      },error=>{\r\n        \r\n          console.log(\"this month Monthly tracker not found(submission date has passed) error msg is:\",error);\r\n          this.monthlyTrackerMadeAlready = false;\r\n          this.monthlySubmissionActive = true;// submission date has passed and monthly tracker is not created yet\r\n        \r\n\r\n      })\r\n\r\n    }\r\n\r\n  }\r\n}\r\n","<div class=\"main-container\">\r\n  <div class=\"container1\" >\r\n    <mat-toolbar class=\"nav\">\r\n      <div class=\"flexbox-row\">\r\n        <img id=\"logo\" src=\"../../../assets/submit.png\" [ngClass]=\"{'month-submission-open':monthlySubmissionActive}\" (click)=\"monthlySubmission()\" matTooltip=\"MONTHLY SUBMISSION\" [hidden]=\"!monthlySubmissionActive\">\r\n        &nbsp;&nbsp;<span [hidden]=\"!monthlySubmissionActive\" id=\"submitMonthReport\" data-text=\"Submit Month's Report\">Submit Month's Report</span ><span class=\"font-40px\" [hidden]=\"monthlySubmissionActive\">CALENDAR</span>\r\n      </div>\r\n  \r\n      <div class=\"font-30px width-30per\">\r\n  \r\n        <mat-icon class=\"font-50px clickable\" (click)=\"showPreviousMonth()\">keyboard_arrow_left</mat-icon>\r\n        <mat-icon class=\"font-50px clickable \" (click)=\"showNextMonth()\">\r\n          keyboard_arrow_right</mat-icon>\r\n   <span class=\"margin-top\">{{date.format('MMMM')}} {{date.format('YYYY')}}</span>\r\n      </div>\r\n      <div id=\"datepicker\">\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Choose a date</mat-label>\r\n          <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"desiredDate\">\r\n          <mat-hint>MM/DD/YYYY</mat-hint>\r\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n          <mat-datepicker #picker></mat-datepicker>\r\n        </mat-form-field>\r\n        <mat-icon class=\"color-green\" (click)=\"loadMonth()\">search</mat-icon>\r\n      </div>\r\n    </mat-toolbar>\r\n    <mat-grid-list id=\"weekdays\" cols=\"7\" rowHeight=\"2.5:1\">\r\n      <mat-grid-tile class=\"font-30px color-header-calendar\">Sun</mat-grid-tile>\r\n      <mat-grid-tile class=\"font-30px color-header-calendar\">Mon</mat-grid-tile>\r\n      <mat-grid-tile class=\"font-30px color-header-calendar\">Tue</mat-grid-tile>\r\n      <mat-grid-tile class=\"font-30px color-header-calendar\">Wed</mat-grid-tile>\r\n      <mat-grid-tile class=\"font-30px color-header-calendar\">Thu</mat-grid-tile>\r\n      <mat-grid-tile class=\"font-30px color-header-calendar\">Fri</mat-grid-tile>\r\n      <mat-grid-tile class=\"font-30px color-header-calendar\">Sat</mat-grid-tile>\r\n    </mat-grid-list>\r\n  \r\n    <form [formGroup]=\"dailyTrackerForm\">\r\n      <mat-grid-list cols=\"7\" rowHeight=\"2.5:1\" formArrayName=\"calendarDays\">\r\n        \r\n        <mat-grid-tile [ngClass]=\"{'zoom':tracker.state&&!isFutureDate(tracker),'currentDay':tracker.currentDay&&tracker.state,'holiday':isWeekend(tracker),'disable':isFutureDate(tracker)&&!isWeekend(tracker),'bgRed':getTotalLoggedHours(tracker)==0 &&!isWeekend(tracker)&&!isFutureDate(tracker),'bgGreen':getTotalLoggedHours(tracker)==8 ||(getTotalLoggedHours(tracker)==4 && isHalfdayLeave(tracker)),'bgPurple':isFullDayLeave(tracker),'bgYellow':isHalfdayLeave(tracker) && getTotalLoggedHours(tracker)<4}\" *ngFor=\"let tracker of trackerListMonth\">\r\n          <span matBadge={{getTotalLoggedHours(tracker)}} matBadgeOverlap=false [hidden]=\"getTotalLoggedHours(tracker)==8 || isWeekend(tracker)|| isFutureDate(tracker) ||isFullDayLeave(tracker)\" matTooltip=\"Hrs Logged\" matBadgeColor=\"warn\"></span>\r\n          \r\n            <mat-icon class=\"openDialogue\" (click)=\"openDialog(tracker)\" [hidden]=\"!tracker.state||isFutureDate(tracker)\" >expand_more</mat-icon>\r\n            <div class=\"flexbox\">\r\n              <p style=\"font-size:30px\">{{tracker.dayOfMonth}}</p>\r\n\r\n            </div>\r\n     \r\n      \r\n        </mat-grid-tile>\r\n  \r\n      </mat-grid-list> \r\n      \r\n    </form>\r\n    <div class=\"color-index\">\r\n      <div>\r\n        <div id=\"red\"></div>\r\n        <span> No Logs Found</span>\r\n      </div>\r\n      <div>\r\n        <div id=\"green\"></div>\r\n        <span> 8 hr Log Complete</span>\r\n      </div>\r\n      <div>\r\n        <div id=\"yellow\"></div>\r\n        <span> Half Day with incomplete log</span>\r\n      </div>\r\n      </div>\r\n      <div class=\"color-index1\">\r\n      <div>\r\n        <div id=\"purple\"></div>\r\n        <span> Full Day Leave</span>\r\n      </div>\r\n      <div>\r\n        <div id=\"no-fill\"></div>\r\n        <span> Logged Hours < 8 </span>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { DailyTracker } from '../model/daily-tracker';\r\nimport { DailyTrackerModel } from '../model/daily-tracker-model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DailyTrackerService {\r\n  baseUrl='https://nouveautracker.stackroute.io/time-tracker-service/api/v1/';\r\n  //  baseUrl='http://localhost:8080/time-tracker-service/api/v1/';\r\n  //  baseUrl='http://localhost:8082/api/v1/';\r\n\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n\r\n  saveTracker(tracker: DailyTrackerModel): Observable<DailyTrackerModel> {\r\n    console.log('Sending tracker to backend:', tracker);\r\n    return this.http.post<DailyTrackerModel>(\r\n     this.baseUrl+`dailytracker`,\r\n      tracker\r\n    );\r\n  }\r\n  getDailyTrackersForPeriod(start:number,end:number){\r\n    return this.http.get(this.baseUrl+\"dailytrackers/daterange?from=\"+start+\"&to=\"+end);\r\n  }\r\n\r\n  getTrackersForPeriod(email: string, fromDate: number, toDate: number): Observable<DailyTracker[]> {\r\n    console.log(\r\n      'inside get trackers service:',\r\n      'email:',\r\n      email,\r\n      'fromDate:',\r\n      fromDate,\r\n      'toDate:',\r\n      toDate\r\n    );\r\n    const paramObject = {\r\n      employeeEmail: email,\r\n      fromDate,\r\n      toDate,\r\n    };\r\n    return this.http.get<DailyTracker[]>(\r\n      this.baseUrl+`employee/dailytrackers/period?employeeEmail=` +\r\n        email +\r\n        `&fromDate=` +\r\n        fromDate +\r\n        `&toDate=` +\r\n        toDate\r\n    );\r\n  }\r\n  updateTracker(tracker: DailyTrackerModel): Observable<object> {\r\n    return this.http.put(\r\n      this.baseUrl+`dailytracker`,\r\n      tracker\r\n    );\r\n  }\r\n\r\n  //For Reports\r\n\r\n  getAllPendingDailyTrackers(): Observable<object> {\r\n    return this.http.get(\r\n     this.baseUrl+'dailytrackers/pending'\r\n    );\r\n  }\r\n\r\n  getAllProgramHoursByEmployee(employeeEmail: string): Observable<object> {\r\n    return this.http.get(\r\n      this.baseUrl+'allprograms/hours?email=' +\r\n        employeeEmail\r\n    );\r\n  }\r\n\r\n  getAllProjectHoursByEmployee(employeeEmail: string): Observable<object> {\r\n    return this.http.get(\r\n      this.baseUrl+'allprojects/hours?email=' +\r\n        employeeEmail\r\n    );\r\n  }\r\n\r\n  getAllProjectHours(): Observable<object> {\r\n    return this.http.get(\r\n      this.baseUrl+'project/hours'\r\n    );\r\n  }\r\n\r\n  getAllProgramHours(): Observable<object> {\r\n    return this.http.get(\r\n     this.baseUrl+'program/hours'\r\n    );\r\n  }\r\n\r\n  getAllProgramsHoursForManager(managerEmail: string): Observable<object>{\r\n    return this.http.get(\r\n      this.baseUrl+'manager/allprograms/hours?email='+managerEmail\r\n    );\r\n  }\r\n\r\n  getAllProjectsHoursForManager(managerEmail: string): Observable<object>{\r\n    return this.http.get(\r\n      this.baseUrl+'manager/allprojects/hours?email='+managerEmail\r\n    );\r\n  }\r\n  getAllDailyTrackers(month:number,year:number){\r\n    return this.http.get<DailyTracker[]>(this.baseUrl+\"dailytrackers/monthly?month=\"+month+\"&year=\"+year);\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-leaves',\r\n  templateUrl: './leaves.component.html',\r\n  styleUrls: ['./leaves.component.css']\r\n})\r\nexport class LeavesComponent implements OnInit {\r\nhalfDayList:number[];\r\nfullDayList:number[];\r\n  constructor(@Inject(MAT_DIALOG_DATA)public _data:any) { }\r\n\r\n  ngOnInit(): void {\r\n    this.halfDayList=this._data.halfDayList;\r\n    this.fullDayList=this._data.fullDayList;\r\n    this.fullDayList.sort((a,b)=>a-b);\r\n    this.halfDayList.sort((a,b)=>a-b);\r\n    console.log(\"leave arrays in new comp,\",this.halfDayList,this.fullDayList)\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <h3>Full Day Leaves </h3>\r\n    <mat-grid-list cols=\"12\" rowHeight=\"1:1\">\r\n        \r\n        <mat-grid-tile *ngFor=\"let date of fullDayList\" class=\"fullDayLeave\">{{date | date:'EEEE, MMMM d,y'}}</mat-grid-tile> \r\n      \r\n      </mat-grid-list> \r\n    \r\n      <h3>Half Day Leaves</h3>\r\n      <mat-grid-list cols=\"12\" rowHeight=\"1:1\" >\r\n          \r\n          <mat-grid-tile *ngFor=\"let date of halfDayList\" class=\"halfDayLeave\">{{date | date:'EEEE, MMMM d,y'}}</mat-grid-tile> \r\n        </mat-grid-list> \r\n</div>","import { ListKeyManager } from '@angular/cdk/a11y';\r\nimport { ThrowStmt } from '@angular/compiler';\r\nimport { LeaveType } from './daily-tracker';\r\nimport { Log } from './log';\r\n\r\nexport class DailyTrackerModel {\r\n    dailyTrackerID: string;\r\n    date: number;\r\n    employeeEmail: string;\r\n    employeeName = 'not available in frontend';\r\n    logs: Log[];\r\n    leaveType: LeaveType;\r\n    leaveHours: number;\r\n    remarks: string;\r\n\r\n    constructor(id: string, date: number, email: string, logs: Log[], leaveType: LeaveType, remarks: string){\r\n        this.dailyTrackerID = id;\r\n        this.date = date;\r\n        this.employeeEmail = email;\r\n        this.logs = logs;\r\n        this.leaveType = leaveType;\r\n        switch (this.leaveType){\r\n            case LeaveType.NONE: this.leaveHours = 0;\r\n                                 break;\r\n            case LeaveType.HALF_DAY: this.leaveHours = 4;\r\n                                     break;\r\n            case LeaveType.FULL_DAY: this.leaveHours = 8;\r\n                                    break;\r\n            default: this.leaveHours = 100; // faulty input value\r\n        }\r\n        this.remarks = remarks;\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\r\nimport { MatChipInputEvent } from '@angular/material/chips';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ProgramService } from 'src/app/service/program.service';\r\nimport { EmployeeService } from 'src/app/service/employee.service';\r\n\r\n@Component({\r\n  selector: 'app-add-program-members',\r\n  templateUrl: './add-program-members.component.html',\r\n  styleUrls: ['./add-program-members.component.css'],\r\n})\r\nexport class AddProgramMembersComponent implements OnInit {\r\n  separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  memberCtrl = new FormControl('');\r\n  filteredMembers: Observable<string[]>;\r\n  members = new Set();\r\n  allMembers = [];\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public programName: any,\r\n    private programService: ProgramService,\r\n    private snackBar: MatSnackBar,\r\n    private employeeService: EmployeeService\r\n  ) {\r\n    this.filteredMembers = this.memberCtrl.valueChanges.pipe(\r\n      startWith(null),\r\n      map((member: string | null) => (member ? this._filter(member) : this.allMembers.slice())),\r\n    );\r\n  }\r\n\r\n\r\n  add(event: MatChipInputEvent): void {\r\n    const value = (event.value || '').trim();\r\n\r\n    const index = this.allMembers.indexOf(value);\r\n\r\n    if (index >= 0) {\r\n      this.members.add(value);\r\n    }\r\n\r\n    event.input.value = '';\r\n\r\n    this.memberCtrl.setValue(null);\r\n  }\r\n\r\n  remove(member: string): void {\r\n    this.members.delete(member);\r\n  }\r\n\r\n  selected(event: MatAutocompleteSelectedEvent): void {\r\n    this.members.add(event.option.viewValue);\r\n    this.memberCtrl.setValue(null);\r\n  }\r\n\r\n  private _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n\r\n    return this.allMembers.filter(member => member.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  addMembersToProgram(): void {\r\n    console.log(this.members);\r\n\r\n    const membersArray = Array.from(this.members);\r\n    console.log(membersArray);\r\n    this.programService\r\n      .addMembersToProgram(membersArray, this.programName)\r\n      .subscribe(\r\n        (response) => {\r\n          console.log(response);\r\n\r\n          this.snackBar.open('Members Added Successfully.', '', {\r\n            duration: 5000,\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'top',\r\n            panelClass: ['mat-toolbar', 'mat-primary']\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n\r\n          this.snackBar.open('Some problem occured.', '', {\r\n            duration: 5000,\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'top',\r\n            panelClass: ['mat-toolbar', 'mat-warn']\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  getAllEmployees(managerEmail: string): void {\r\n    this.employeeService.getEmployeesWorkingForAParticularManager(managerEmail).subscribe((response) => {\r\n      console.log(response);\r\n      response.forEach(employee => {\r\n        this.allMembers.push(employee.emailId);\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const email = window.localStorage.getItem('tgt_email');\r\n    this.getAllEmployees(email);\r\n  }\r\n}\r\n","<h2 mat-dialog-title>Add Members for {{ programName }}</h2>\r\n\r\n<mat-dialog-content class=\"mat-typography\">\r\n  <mat-form-field class=\"example-chip-list\" appearance=\"outline\">\r\n    <mat-label>Add Members</mat-label>\r\n    <mat-chip-list #chipList>\r\n      <mat-chip *ngFor=\"let member of members\" (removed)=\"remove(member)\">\r\n        {{ member }}\r\n        <mat-icon matChipRemove>cancel</mat-icon>\r\n      </mat-chip>\r\n      <input\r\n        placeholder=\"New Member...\"\r\n        [formControl]=\"memberCtrl\"\r\n        [matAutocomplete]=\"auto\"\r\n        [matChipInputFor]=\"chipList\"\r\n        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n        (matChipInputTokenEnd)=\"add($event)\"\r\n      />\r\n    </mat-chip-list>\r\n    <mat-autocomplete\r\n      #auto=\"matAutocomplete\"\r\n      (optionSelected)=\"selected($event)\"\r\n    >\r\n      <mat-option\r\n        *ngFor=\"let member of filteredMembers | async\"\r\n        [value]=\"member\"\r\n      >\r\n        {{ member }}\r\n      </mat-option>\r\n    </mat-autocomplete>\r\n  </mat-form-field>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button mat-dialog-close>Cancel</button>\r\n  <button\r\n    mat-button\r\n    [mat-dialog-close]=\"true\"\r\n    (click)=\"addMembersToProgram()\"\r\n    color=\"primary\"\r\n    mat-flat-button\r\n  >\r\n    Add\r\n  </button>\r\n</mat-dialog-actions>\r\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'NouveauTracker';\r\n}\r\n","<router-outlet></router-outlet>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-consolidated-analytics',\r\n  templateUrl: './consolidated-analytics.component.html',\r\n  styleUrls: ['./consolidated-analytics.component.css']\r\n})\r\nexport class ConsolidatedAnalyticsComponent implements OnInit {\r\npieChartHeader=\"dummyPieChart\";\r\nbarChartHeader=\"dummyBarChart\";\r\n\r\npublic barChartOptions={\r\n  scaleShowVerticalLines:false,\r\n  responsive:true\r\n}\r\n\r\npublic pieChartLabels=[\"nitin\",\"akhil\",\"manan\",\"yogesh\"];\r\npublic pieChartData=[\r\n  {data:[10,20,30,40]}\r\n \r\n];\r\npublic pieChartLegend=true;\r\npublic pieChartType=\"pie\";\r\n\r\npublic barChartLabels=[\"nitin\",\"akhil\",\"manan\",\"yogesh\"];\r\npublic barChartLegend=true;\r\npublic barChartData=[\r\n  {data:[10,20,30,40],label:\"maths\"},\r\n  {data:[40,20,100,50],label:\"science\"}\r\n];\r\npublic barChartType=\"bar\";\r\n  constructor(@Inject(MAT_DIALOG_DATA)public _data:any) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"bar graph data recieved\",this._data);\r\n    this.barChartData=this._data.barChartData;\r\n    this.barChartLabels=this._data.barChartLabels;\r\n    this.pieChartLabels=this._data.pieChartLabels;\r\n    this.pieChartData=this._data.pieChartData;\r\n    this.barChartHeader=this._data.barChartHeader;\r\n    this.pieChartHeader=this._data.pieChartHeader;\r\n  }\r\n\r\n}\r\n","<h1>{{barChartHeader}}</h1>\r\n<div id=\"barchart\">\r\n    <canvas baseChart\r\n    [datasets]=\"barChartData\"\r\n    [labels]=\"barChartLabels\"\r\n    [options]=\"barChartOptions\"\r\n    [legend]=\"barChartLegend\"\r\n    [chartType]=\"barChartType\"></canvas>\r\n</div>\r\n<h1>{{pieChartHeader}}</h1>\r\n<div id=\"piechart\">\r\n    <canvas baseChart\r\n    [datasets]=\"pieChartData\"\r\n    [labels]=\"pieChartLabels\"\r\n    [legend]=\"pieChartLegend\"\r\n    [chartType]=\"pieChartType\"></canvas>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ProgramService } from 'src/app/service/program.service';\r\n\r\n@Component({\r\n  selector: 'app-view-project-card',\r\n  templateUrl: './view-project-card.component.html',\r\n  styleUrls: ['./view-project-card.component.css']\r\n})\r\nexport class ViewProjectCardComponent implements OnInit {\r\n  projectDetails: any;\r\n  role: string;\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any, private programService: ProgramService, private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n    this.projectDetails = this.data;\r\n    this.role = window.localStorage.getItem('role');\r\n  }\r\n\r\n  remove(projectName: string, memberEmail: string): void {\r\n\r\n    this.programService.removeMembersFromProject(projectName, memberEmail).subscribe((response) => {\r\n      console.log(response);\r\n\r\n      this.snackBar.open('Member Removed Successfully.', '', {\r\n        duration: 5000,\r\n        horizontalPosition: 'center',\r\n        verticalPosition: 'top',\r\n        panelClass: ['mat-toolbar', 'mat-primary']\r\n      });\r\n      \r\n    }, (error) => {\r\n      console.log(error);\r\n      this.snackBar.open('Some problem occured.', '', {\r\n        duration: 5000,\r\n        horizontalPosition: 'center',\r\n        verticalPosition: 'top',\r\n        panelClass: ['mat-toolbar', 'mat-warn']\r\n      });\r\n    }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n","<div projectDetails>\r\n  <div mat-dialog-title class=\"flex-container\">\r\n    <h1 mat-dialog-title>{{ projectDetails?.projectName }}</h1>\r\n    <span class=\"example-spacer\"></span>\r\n    <mat-icon [mat-dialog-close]=\"true\" matTooltip=\"Close\">close</mat-icon>\r\n  </div>\r\n\r\n  <mat-dialog-content class=\"mat-typography\">\r\n    <div fxLayout=\"row\" fxLayoutGap=\"2%\" fxLayout.xs=\"column\">\r\n      <mat-icon>calendar_today</mat-icon>\r\n      <h3 fxFlex=\"50%\" matTooltip=\"Project Duration\">\r\n        {{ projectDetails?.startDate | date: \"dd/MM/yyyy\" }} -\r\n        {{ projectDetails?.endDate | date: \"dd/MM/yyyy\" }}\r\n      </h3>\r\n      <mat-icon>person</mat-icon>\r\n      <h3 fxFlex=\"50%\" matTooltip=\"Manager's Email Id\">\r\n        {{ projectDetails?.managerEmailId }}\r\n      </h3>\r\n    </div>\r\n\r\n    <div fxLayout=\"column\">\r\n      <div>\r\n        <mat-icon>group</mat-icon>\r\n      </div>\r\n\r\n      <mat-form-field class=\"example-chip-list\" appearance=\"outline\">\r\n        <mat-label>Members</mat-label>\r\n        <h1 *ngIf=\"projectDetails?.membersList == null\">No Members to show.</h1>\r\n        <mat-chip-list *ngIf=\"projectDetails?.membersList.length > 0\" #chipList>\r\n          <mat-chip\r\n            *ngFor=\"let member of projectDetails?.membersList\"\r\n            (removed)=\"\r\n              remove(projectDetails?.projectName, member.memberEmailId)\r\n            \"\r\n          >\r\n            {{ member.memberEmailId }}\r\n            <mat-icon\r\n              *ngIf=\"role === 'MANAGER'\"\r\n              [mat-dialog-close]=\"true\"\r\n              matTooltip=\"Remove member\"\r\n              matChipRemove\r\n              >cancel</mat-icon\r\n            >\r\n          </mat-chip>\r\n        </mat-chip-list>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-dialog-content>\r\n</div>\r\n","export enum LogType {\r\n  PROGRAM = 'PROGRAM',\r\n  PROJECT = 'PROJECT',\r\n  SELF_LEARNING = 'SELF_LEARNING',\r\n}\r\n\r\nexport class Log {\r\n  logType: LogType;\r\n  logHours: number;\r\n  taskName: string; // name of project or program\r\n  startDate: number; // date on which program or project was started\r\n  selfStudyDetails: string;\r\n\r\n  constructor(\r\n    logType: LogType,\r\n    logHours: number,\r\n    taskName: string,\r\n    startDate:number,\r\n    selfStudyDetails:string\r\n  ) {\r\n    this.logType = logType;\r\n    this.logHours = logHours;\r\n    this.taskName = taskName;\r\n    this.startDate = startDate;\r\n    this.selfStudyDetails = selfStudyDetails;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport * as Chart from 'chart.js';\r\nimport { DailyTrackerService } from 'src/app/service/daily-tracker.service';\r\nimport { ProgramService } from 'src/app/service/program.service';\r\n\r\n@Component({\r\n  selector: 'app-bar-chart2',\r\n  templateUrl: './bar-chart2.component.html',\r\n  styleUrls: ['./bar-chart2.component.css']\r\n})\r\nexport class BarChart2Component implements OnInit {\r\n\r\n  public role: string;\r\n  public loggedEmail: string;\r\n  public projectsArray = [];\r\n  public projectChartLabel: any;\r\n  public projectChartData = [];\r\n  public projectChartDataHours: any;\r\n  constructor(private projectService: ProgramService,\r\n              private dailyTrackerService: DailyTrackerService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.role = window.localStorage.getItem('role');\r\n    this.loggedEmail = window.localStorage.getItem('tgt_email');\r\n    switch(this.role) {\r\n      case 'OPERATIONS': {\r\n        this.getAllprojectHours();\r\n        break;\r\n      }\r\n      case 'MANAGER': {\r\n        this.getAllProjectsHoursForManager();\r\n        break;\r\n      }\r\n      case 'EMPLOYEE': {                      \r\n        this.getAllProjectHoursByEmployee();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  myChart(): void{\r\n    const myChart = new Chart('myChart', {\r\n      type: 'bar',\r\n      data: {\r\n          labels: this.projectChartLabel,\r\n          datasets: [{\r\n              label: 'Number of employees',\r\n              data: this.projectChartData,\r\n              backgroundColor: 'lightpink',\r\n              borderWidth: 1,\r\n              borderColor: '#777',\r\n              hoverBorderWidth: 1,\r\n              hoverBorderColor: '#000'\r\n            },\r\n            {\r\n              label: 'Total working hours',\r\n              // data: this.projectChartData,\r\n              data: this.projectChartDataHours,\r\n              backgroundColor: 'cornflowerblue',\r\n              borderWidth: 1,\r\n              borderColor: '#777',\r\n              hoverBorderWidth: 1,\r\n              hoverBorderColor: '#000'\r\n            }\r\n          ]\r\n      },\r\n      options: {\r\n        scales: {\r\n          yAxes: [{\r\n              ticks: {\r\n                  beginAtZero: true\r\n              }\r\n          }]\r\n        },\r\n        // scaleShowVerticalLines: false,\r\n        responsive: true,\r\n        title: {\r\n          display: true,\r\n          text: 'External projects (active)',\r\n          padding: 20,\r\n          fontSize: 22,\r\n        },\r\n        legend: {\r\n          position: 'top',                  // comment and show\r\n          labels: {\r\n            fontColor: '#777',\r\n            fontSize: 13\r\n          }\r\n        },\r\n        layout: {\r\n          padding: {\r\n            left: 50\r\n          }\r\n        },\r\n        tooltips: {\r\n          displayColors: false\r\n        }\r\n      }\r\n  });\r\n  }\r\n\r\n  getAllActiveprojects(): void {\r\n    this.projectService.getAllActiveProjects('ACTIVE').subscribe(\r\n      response => {\r\n        console.log(response);\r\n        this.projectsArray = response;\r\n        this.projectChartLabel.forEach(labelName => {\r\n          this.projectsArray.forEach(project => {\r\n            if(labelName===project.projectName) {\r\n                this.projectChartData.push(project.membersList.length);\r\n            }\r\n          })\r\n        });\r\n        this.myChart();\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  ///////////////////////////////////////////\r\n\r\n  getAllprojectHours(): void {\r\n    this.dailyTrackerService.getAllProjectHours().subscribe(\r\n      response => {\r\n        console.log(\"All project with hours\");\r\n        console.log(response);\r\n        this.projectChartLabel = Object.keys(response);\r\n        this.projectChartDataHours = Object.values(response);\r\n        this.getAllActiveprojects();\r\n        // this.myChart();\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  //////////////////////////////////////////////\r\n\r\n  getAllProjectHoursByEmployee(): void {\r\n    this.dailyTrackerService.getAllProjectHoursByEmployee(this.loggedEmail).subscribe(\r\n      response => {\r\n        console.log(\"All program with hours\");\r\n        console.log(response);\r\n        this.projectChartLabel = Object.keys(response);\r\n        this.projectChartDataHours = Object.values(response);\r\n        this.getAllActiveprojects();\r\n        // this.myChart();\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  \r\n  //////////////////////////////////////////////\r\n\r\n  getAllProjectsHoursForManager(): void {\r\n    this.dailyTrackerService.getAllProjectsHoursForManager(this.loggedEmail).subscribe(\r\n      response => {\r\n        console.log(\"All projects with hours\");\r\n        console.log(response);\r\n        this.projectChartLabel = Object.keys(response);\r\n        this.projectChartDataHours = Object.values(response);\r\n        this.getAllActiveprojects();\r\n        // this.myChart();\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div style=\"display: block; \">\r\n    <div id=\"divChart\">\r\n        <canvas id=\"myChart\"></canvas>\r\n    </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { GenericListFilterModule } from 'generic-list-filter';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AddProgramComponent } from './component/add-program/add-program.component';\r\nimport { AddProjectComponent } from './component/add-project/add-project.component';\r\nimport { NavBarComponent } from './component/nav-bar/nav-bar.component';\r\nimport { TimeTrackerComponent } from './component/time-tracker/time-tracker.component';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { SnackbarComponent } from './component/snackbar/snackbar.component';\r\nimport { CalendarComponent } from './component/calendar/calendar.component';\r\nimport { AvatarModule } from 'ngx-avatar';\r\nimport { ProgramCardComponent } from './component/program-card/program-card.component';\r\nimport { ProjectCardComponent } from './component/project-card/project-card.component';\r\nimport { RegisterLoginComponent } from './component/register-login/register-login.component';\r\nimport { ViewProgramCardComponent } from './component/view-program-card/view-program-card.component';\r\nimport { ViewProgramManagerComponent } from './component/view-program-manager/view-program-manager.component';\r\nimport { ProgramService } from './service/program.service';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { SideNavComponent } from './component/side-nav/side-nav.component';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MonthlyTrackerComponent } from './component/monthly-tracker/monthly-tracker.component';\r\nimport { AddProgramMembersComponent } from './component/add-program-members/add-program-members.component';\r\nimport { AddProjectMembersComponent } from './component/add-project-members/add-project-members.component';\r\nimport { ViewProjectCardComponent } from './component/view-project-card/view-project-card.component';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { DialogContentExampleDialog, MonthlyTrackerDetailsComponent } from './component/monthly-tracker-details/monthly-tracker-details.component';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { AllChartsComponent } from './component/all-charts/all-charts.component';\r\nimport { BarChartComponent } from './component/charts-folder/bar-chart/bar-chart.component';\r\nimport { DoughnutChartComponent } from './component/charts-folder/doughnut-chart/doughnut-chart.component';\r\nimport { PieChartComponent } from './component/charts-folder/pie-chart/pie-chart.component';\r\nimport { ProfileComponent } from './component/profile/profile.component';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport { DialogComponent } from './component/monthly-tracker/dialog/dialog.component';\r\nimport { MissingTrackersComponent } from './component/missing-trackers/missing-trackers.component';\r\nimport { DoughnutChart2Component } from './component/charts-folder/doughnut-chart2/doughnut-chart2.component';\r\nimport { BarChart2Component } from './component/charts-folder/bar-chart2/bar-chart2.component';\r\nimport { ConsolidatedViewComponent } from './component/consolidated-view/consolidated-view.component';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport { ConsolidatedAnalyticsComponent } from './component/consolidated-analytics/consolidated-analytics.component';\r\nimport { LeavesComponent } from './component/leaves/leaves.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ViewProgramManagerComponent,\r\n    RegisterLoginComponent,\r\n    ViewProgramCardComponent,\r\n    NavBarComponent,\r\n    RegisterLoginComponent,\r\n    AddProgramComponent,\r\n    AddProjectComponent,\r\n    ProgramCardComponent,\r\n    ProjectCardComponent,\r\n    CalendarComponent,\r\n    SnackbarComponent,\r\n    TimeTrackerComponent,\r\n    MonthlyTrackerComponent,\r\n    SideNavComponent,\r\n    AddProgramMembersComponent,\r\n    AddProjectMembersComponent,\r\n    ViewProjectCardComponent,\r\n    MonthlyTrackerDetailsComponent,\r\n    AllChartsComponent,\r\n    BarChartComponent,\r\n    DoughnutChartComponent,\r\n    PieChartComponent,\r\n    ProfileComponent,\r\n    DialogComponent,\r\n    ProfileComponent,\r\n    MissingTrackersComponent,\r\n    DoughnutChart2Component,\r\n    ConsolidatedViewComponent,\r\n    BarChart2Component,\r\n    ConsolidatedAnalyticsComponent,\r\n    LeavesComponent,\r\n    DialogContentExampleDialog,\r\n  \r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FlexLayoutModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    HttpClientModule,\r\n    MatTabsModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    MatPaginatorModule,\r\n    GenericListFilterModule,\r\n    NgxPaginationModule,\r\n    MatGridListModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatChipsModule,\r\n    MatSelectModule,\r\n    MatToolbarModule,\r\n    FlexLayoutModule,\r\n    MatBadgeModule,\r\n    MatExpansionModule,\r\n    MatTooltipModule,\r\n    MatRippleModule,\r\n    MatMenuModule,\r\n    MatSlideToggleModule,\r\n    AvatarModule,\r\n    GenericListFilterModule,\r\n    MatRadioModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatAutocompleteModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    ChartsModule,\r\n    MatProgressSpinnerModule,\r\n    MatTableModule\r\n  ],\r\n  providers: [ProgramService],\r\n  bootstrap: [AppComponent],\r\n  schemas: [\r\n    CUSTOM_ELEMENTS_SCHEMA\r\n  ],\r\n  entryComponents: [ViewProgramCardComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-missing-trackers',\r\n  templateUrl: './missing-trackers.component.html',\r\n  styleUrls: ['./missing-trackers.component.css']\r\n})\r\nexport class MissingTrackersComponent implements OnInit {\r\n  missingDayList:any;\r\n  incompleteDayList:any;\r\n  missingCount:number;\r\n  incompleteCount:number;\r\n  constructor(@Inject(MAT_DIALOG_DATA) public _data: any) {\r\n    this.missingDayList=_data.missing;\r\n    this.incompleteDayList=_data.incomplete;\r\n    this.missingCount=_data.missing.length;\r\n    this.incompleteCount=_data.incomplete.length\r\n   }\r\n\r\n  ngOnInit(): void {\r\nconsole.log(\"DATA\",this._data);\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div id=\"inner-container\">\r\n    <div id=\"first\">\r\n      <h2 [hidden]=\"missingCount<1\">Missing Daily Trackers!!</h2>\r\n      <div id=\"head\">\r\n        <h4 id=\"count\" [hidden]=\"missingCount<1\">{{missingCount}} </h4>\r\n        <h4 [hidden]=\"missingCount<1\">Daily Trackers Not Filled</h4>\r\n      </div>\r\n      <table class=\"table table-danger table-striped table-hover\" [hidden]=\"missingCount<1\">\r\n        <tbody>\r\n          <tr *ngFor=\"let day of missingDayList\">\r\n            <td>{{day}}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <div id=\"second\">\r\n      <h2 [hidden]=\"incompleteCount<1\">Incomplete Daily Trackers!!</h2>\r\n      <div id=\"head\">\r\n        <h4 id=\"count\" [hidden]=\"incompleteCount<1\">{{incompleteCount}} </h4>\r\n        <h4 [hidden]=\"incompleteCount<1\">Daily Tracker Hours Incomplete</h4>\r\n      </div>\r\n      <table class=\"table table-warning table-striped table-hover\" [hidden]=\"incompleteCount<1\">\r\n        <tbody>\r\n          <tr *ngFor=\"let day of incompleteDayList\">\r\n            <td>{{day}}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n  <h1 [hidden]=\"incompleteCount>0 || missingCount>0\">All Logs Complete!!</h1>\r\n  <h1 [hidden]=\"incompleteCount>0 || missingCount>0\">Monthly Tracker Submitted!!</h1>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { EmployeeService } from 'src/app/service/employee.service';\r\n\r\n@Component({\r\n  selector: 'app-side-nav',\r\n  templateUrl: './side-nav.component.html',\r\n  styleUrls: ['./side-nav.component.css']\r\n})\r\nexport class SideNavComponent implements OnInit {\r\n\r\n  employee: any;\r\n  constructor(private employeeService: EmployeeService) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getEmployee(window.localStorage.getItem('tgt_email'));\r\n  }\r\n\r\n\r\n  getEmployee(emailId: string): void{\r\n    this.employeeService.getEmployee(emailId).subscribe(\r\n      response => {\r\n        // console.log('Employee data retrieved : ');\r\n        // console.log(response);\r\n        this.employee = response;\r\n        window.localStorage.setItem('role', this.employee.role);\r\n        // console.log(\"employee object : \");\r\n        // console.log(this.employee);\r\n      },\r\n      error => {\r\n        console.log('error message : ');\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"sidenav\">\r\n    <div class=\"logo\">\r\n        <hr style=\"color: white\">\r\n        <a class=\"simple-text logo-mini\">\r\n            <div class=\"logo-img\">\r\n                <img src=\"../../../assets/trackerNewLogo.png\" alt=\"\">\r\n            </div>\r\n        </a>\r\n        <a class=\"simple-text logo-normal\">\r\n            <!-- {{employee.role}} -->\r\n            <br>\r\n        </a>\r\n        <hr style=\"color: white\">\r\n    </div>\r\n    <ul class=\"nav\" >\r\n        <li *ngIf=\"employee?.role === 'OPERATIONS'\" routerLinkActive=\"active\"><a routerLink=\"monthly-tracker\"><i  class=\"fa fa-clock-o\"></i>Monthly Tracker</a></li>\r\n        <li routerLinkActive=\"active\"><a routerLink=\"view-program-manager\"><i  class=\"fa fa-thumb-tack\"></i>All Programs</a></li>\r\n        <li routerLinkActive=\"active\"><a routerLink=\"calendar\"><i  class=\"fa fa-calendar-check-o\"></i>Calendar</a></li>\r\n        <!-- <li routerLinkActive=\"active\"><a routerLink=\"#\"><i  class=\"fa-solid fa-people-group\"></i>Teams</a></li> -->\r\n        <li *ngIf=\"employee?.role === 'OPERATIONS'\" routerLinkActive=\"active\"><a routerLink=\"cv\"><i  class=\"fa fa-file-text-o\"></i>Reports</a></li>\r\n        <li routerLinkActive=\"active\"><a routerLink=\"analytics\"><i  class=\"fa fa-file-text-o\"></i>Analytics</a></li>\r\n        <!-- <li routerLinkActive=\"active\"><a routerLink=\"#\"><i  class=\"fas fa-cogs\"></i>Settings</a></li> -->\r\n    </ul>\r\n\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n// import { SecurityService } from '../service/security.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private router: Router) {\r\n  }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    if (this.isLoggedInWithJwt()) {\r\n      console.log('jwt token is there');\r\n      return true;\r\n    }\r\n    this.router.navigate(['']);\r\n    return false;\r\n  }\r\n\r\n    isLoggedInWithJwt() {\r\n    const token = window.localStorage.getItem('tgt');\r\n    return token != null;\r\n  }\r\n}\r\n","export class ProgramData {\r\n    organizationBrandLogo:string;\r\n    programName:string;\r\n    organizationName:string;\r\n    programType:string;\r\n    createdOn:number;\r\n    startDate:number;\r\n    endDate:number;\r\n    managerEmailId:string;\r\n    programStatus:string;\r\n    memberList:MemberHour[];\r\n    totalHours:number;\r\n\r\n    constructor(organizationBrandLogo:string,programName:string,organizationName:string,programType:string,createdOn:number,startDate:number,endDate:number,managerEmailId:string,programStatus:string){\r\n     this.organizationBrandLogo= organizationBrandLogo;\r\n    this.programName= programName;\r\n    this.organizationName= organizationName;\r\n    this.programType=programType;\r\n    this.createdOn=createdOn;\r\n    this.startDate=startDate;\r\n    this.endDate=endDate;\r\n    this.managerEmailId=managerEmailId;\r\n    this.programStatus=programStatus;\r\n    this.memberList=[]\r\n    this.totalHours=0;\r\n    }\r\n}\r\nexport class MemberHour{\r\n    member:string;//emailid of employee working on the program\r\n    hours: number;//total hours given to program by this employee\r\n    constructor(member:string,hours:number){\r\n        this.member=member;\r\n        this.hours=hours;\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pie-chart',\r\n  templateUrl: './pie-chart.component.html',\r\n  styleUrls: ['./pie-chart.component.css']\r\n})\r\nexport class PieChartComponent implements OnInit {\r\n\r\n\r\n  public pieChartLabels = ['Google Wave 2', 'IBM X1', 'Wipro B5', 'Infosys M2'];\r\n  public pieChartData = [120, 150, 180, 90];\r\n  public pieChartType = 'pie';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div style=\"display: block;\">\r\n    <canvas baseChart\r\n            [data]=\"pieChartData\"\r\n            [labels]=\"pieChartLabels\"\r\n            [chartType]=\"pieChartType\">\r\n    </canvas>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Observable } from 'rxjs';\r\nimport { EmployeeService } from 'src/app/service/employee.service';\r\n\r\n@Component({\r\n  selector: 'app-nav-bar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.css']\r\n})\r\n\r\nexport class NavBarComponent implements OnInit {\r\n\r\n  // name;\r\n\r\n  public employee: any;\r\n  constructor(private employeeService: EmployeeService,\r\n              private snackBar: MatSnackBar,\r\n              private http: HttpClient\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getEmployee(window.localStorage.getItem('tgt_email'));\r\n    // this.getUserInfo().subscribe(data => this.name = data.name);\r\n  }\r\n\r\n  // getUserInfo(): Observable<any> {\r\n  //   return this.http.get('http://localhost:8084/api/v1/home');\r\n  // }\r\n\r\n  getEmployee(emailId: string): void{\r\n    this.employeeService.getEmployee(emailId).subscribe(\r\n      response => {\r\n        console.log('Employee data retrieved : ');\r\n        console.log(response);\r\n        this.employee = response;\r\n        // window.localStorage.setItem('role', this.employee.role);\r\n        // console.log(\"employee object : \");\r\n        // console.log(this.employee);\r\n      },\r\n      error => {\r\n        console.log('error message : ');\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  // onUpdateProfileImage() {\r\n\r\n  // }\r\n\r\n  logout(): void {\r\n    window.localStorage.clear();\r\n    this.snackBar.open('You have been successfully logged out.', '', {\r\n      duration: 3000,\r\n      horizontalPosition: 'center',\r\n      verticalPosition: 'top',\r\n      panelClass: ['mat-toolbar', 'mat-primary']\r\n    });\r\n  }\r\n\r\n}\r\n","<!-- Hello {{name}} !! Welcome to the Nav, you are logged in through google -->\r\n<div class=\"container-fluid main\">\r\n     <mat-toolbar class=\"navbar navbar-expand-lg navbar-dark \" >\r\n        <div>\r\n            <a class=\"sidenav-button\"><i class=\"fas fa-bars fa-xls\" aria-hidden=\"true\" (click)=\"sideNav.toggle()\"></i></a>\r\n            <a class=\"navbar-brand\">NouveauTracker</a>\r\n        </div>\r\n        <div>\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n                <ul class=\"navbar-nav ml-auto\">\r\n                    <!-- <li><a><i class=\"fa-solid fa-bell\"></i></a></li> -->\r\n                    <li class=\"nav-item dropdown\">\r\n                        <a *ngIf=\"true\" [matMenuTriggerFor]=\"menu\" class=\"nav-link dropdown-toggle username\"  id=\"navbarDropdownMenuLink\">\r\n                            <div class=\"photo\">\r\n                                <img *ngIf=\"!employee?.profileImage\" src=\"../../../assets/noProfileImage.jpg\" alt=\"Profile photo\">\r\n                                <img *ngIf=\"employee?.profileImage\" src=\"data:image/jpeg;base64,{{employee.profileImage}}\" alt=\"Profile photo\">\r\n                            </div>\r\n                            {{employee?.employeeName}}\r\n                        </a>\r\n                        <mat-menu #menu=\"matMenu\">\r\n                            <!-- update profile image feature here -->\r\n                            <button mat-menu-item routerLink=\"/home/profile\">    \r\n                                Profile\r\n                            </button>\r\n                            <button mat-menu-item routerLink=\"/\" (click)=\"logout()\">\r\n                                Logout\r\n                            </button>\r\n                          </mat-menu>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>  \r\n    </mat-toolbar>\r\n\r\n    <mat-sidenav-container >\r\n        <mat-sidenav #sideNav opened mode=\"side\" [fixedInViewport]=\"true\" >\r\n            <app-side-nav></app-side-nav>\r\n        </mat-sidenav>\r\n        <mat-sidenav-content >\r\n            <router-outlet></router-outlet>\r\n        </mat-sidenav-content>\r\n    </mat-sidenav-container>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ProgramService } from 'src/app/service/program.service';\r\nimport { Chart} from '../../../../../node_modules/chart.js';\r\n\r\n@Component({\r\n  selector: 'app-doughnut-chart',\r\n  templateUrl: './doughnut-chart.component.html',\r\n  styleUrls: ['./doughnut-chart.component.css']\r\n})\r\nexport class DoughnutChartComponent implements OnInit {\r\n\r\n  public role: any;\r\n  public programsArray = [];\r\n  public doughnutChartLabel = [];\r\n  public doughnutChartData = [];\r\n  constructor(private programService: ProgramService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.role = window.localStorage.getItem('role');\r\n    this.getAllActivePrograms();\r\n  }\r\n\r\n  myChart(): void{\r\n    const myChart = new Chart('myChart', {\r\n      type: 'doughnut',\r\n      data: {\r\n          labels: this.doughnutChartLabel,\r\n          datasets: [{\r\n              label: 'No. of employees',\r\n              data: this.doughnutChartData,\r\n              backgroundColor: [\r\n                'cornflowerblue',\r\n                'olivedrab',\r\n                'orange',\r\n                'tomato',\r\n                'crimson',\r\n                'purple',\r\n                'turquoise',\r\n                'forestgreen',\r\n                'navy',\r\n                '#455a64',\r\n                'rgba(255, 220, 129, 0.2)',\r\n                'rgba(200, 181, 199, 0.2)',\r\n                'rgba(193, 226, 206, 0.2)',\r\n                'rgba(201, 193, 226, 0.2)',\r\n                'rgba(175, 201, 195, 0.2)',\r\n                'rgba(253, 222, 166, 0.2)',\r\n                'rgba(216, 156, 218, 0.2)',\r\n                'rgba(154, 215, 209, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(216, 181, 173, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(154, 198, 215, 0.2)',\r\n                'rgba(208, 232, 191, 0.2)'\r\n              ],\r\n              // hoverOffset: 4,\r\n              borderWidth: 1,\r\n              borderColor: '#fff',\r\n              hoverBorderWidth: 2,\r\n              hoverBorderColor: '#fff'\r\n          }]\r\n      },\r\n      options: {\r\n        title: {\r\n          display: true,\r\n          text: 'Employee Distribution (Active Programs)',\r\n          padding: 20,\r\n          fontSize: 25,\r\n        },\r\n        legend: {\r\n          position: 'right',                  // comment and show\r\n          labels: {\r\n            fontColor: '#000',\r\n          }\r\n        },\r\n        layout: {\r\n          padding: {\r\n            left: 100\r\n          }\r\n        },\r\n        tooltips: {\r\n          displayColors: false\r\n        }\r\n      }\r\n  });\r\n  }\r\n\r\n  getAllActivePrograms(): void {\r\n    this.programService.getAllActivePrograms('ACTIVE').subscribe(\r\n      response => {\r\n        this.programsArray = response;\r\n        console.log(response);\r\n        this.programsArray.forEach(program => {\r\n          this.doughnutChartLabel.push(program.programName);\r\n          this.doughnutChartData.push(program.membersList.length);\r\n        });\r\n        this.myChart();\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div style=\"display: block; \">\r\n    <div id=\"divChart\">\r\n        <canvas id=\"myChart\"></canvas>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { EmployeeService } from 'src/app/service/employee.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  public employee: any;\r\n  uploadForm: FormGroup;\r\n  constructor(private formBuilder: FormBuilder, private employeeService: EmployeeService, private router: Router) {}\r\n\r\n  getEmployee(emailId: string): void{\r\n    this.employeeService.getEmployee(emailId).subscribe(\r\n      response => {\r\n        console.log('Employee data retrieved : ');\r\n        console.log(response);\r\n        this.employee = response;\r\n        window.localStorage.setItem('role', this.employee.role);\r\n        // console.log(\"employee object : \");\r\n        // console.log(this.employee);\r\n      },\r\n      error => {\r\n        console.log('error message : ');\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.employee = this.getEmployee(window.localStorage.getItem('tgt_email'));\r\n    this.uploadForm = this.formBuilder.group({\r\n      emailid: '',\r\n      file: ['']\r\n    });\r\n  }\r\n\r\n  onFileSelect(event: any): void {\r\n    if (event.target.files.length > 0) {\r\n      const file = event.target.files[0];\r\n      this.uploadForm.get('file').setValue(file);\r\n    }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    const formData = new FormData();\r\n    this.uploadForm.get('emailid').setValue(this.employee.emailId);\r\n    formData.append('emailid', this.uploadForm.get('emailid').value);\r\n    formData.append('file', this.uploadForm.get('file').value);\r\n    this.employeeService.updateUserProfileImage(formData);\r\n    // window.location.href = 'http://localhost:4200/#/home/profile';\r\n    window.location.reload();\r\n    // this.router.navigateByUrl('home/calendar');\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"main-container\" style=\"display: flex;\">\r\n    <section>\r\n        <span class=\"profile-head\">Employee Profile</span><br><br><br>\r\n        <table width=\"50%\" cellspacing=\"0\" class=\"table-class\">\r\n            <br>\r\n            <!-- <thead>\r\n            <th width=\"700\"></th>\r\n            </thead> -->\r\n            <tbody>\r\n            <tr>\r\n                <td>Name</td>\r\n                <td>{{employee.employeeName}}</td>\r\n            </tr>\r\n            <!-- <tr>\r\n                <td>Role</td>\r\n                <td>{{employee.role}}</td>\r\n            </tr> -->\r\n            <tr>\r\n                <td>Email-id</td>\r\n                <td>{{employee.emailId}}</td>\r\n            </tr>\r\n            <tr *ngIf=\"employee.managerEmailId\">\r\n                <td>Manager's Email-id</td>\r\n                <td>{{employee.managerEmailId}}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Upload Profile Photo</td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    <form [formGroup]=\"uploadForm\" (ngSubmit)=\"onSubmit()\">\r\n                        <div>\r\n                            <!-- <label for=\"file\">Profile picture </label> -->\r\n                            <input type=\"file\" accept=\"image/*\" name=\"file\" (change)=\"onFileSelect($event)\" />\r\n                            <button type=\"submit\" class=\"btn btn-primary\">Upload</button>\r\n                        </div>\r\n                    </form>\r\n                </td>\r\n            </tr>\r\n            </tbody>\r\n        </table>     \r\n    </section>   \r\n    <section>\r\n        <aside class=\"profile-card\">\r\n            <header>\r\n                <a>\r\n                    <img *ngIf=\"!employee.profileImage\" src=\"../../../assets/noProfileImage.jpg\" class=\"hoverZoomLink\">\r\n                    <img *ngIf=\"employee.profileImage\" src=\"data:image/jpeg;base64,{{employee.profileImage}}\" class=\"hoverZoomLink\">\r\n                </a>\r\n                <h1>{{employee.employeeName}}</h1>\r\n                <h2>Thank you!</h2>\r\n            </header>\r\n            <div class=\"profile-bio\">\r\n               <p>Clients do not come first. Employees come first. If you take care of your employees, they will take care of the clients.</p>\r\n            </div>\r\n        </aside>    \r\n    </section> \r\n</div>\r\n\r\n","import { DialogComponent } from './dialog/dialog.component';\r\nimport { EmailService } from './../../service/email.service';\r\nimport { MonthlyTrackerService } from './../../service/monthly-tracker.service';\r\nimport { Router } from '@angular/router';\r\nimport { Component, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs/tab-group';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\nexport interface MonthlyTracker {\r\n  monthlyTrackerId: string;\r\n  employeeEmail: string;\r\n  status: string;\r\n  year: number;\r\n  monthName: string;\r\n  startDate: number;\r\n  endDate: number;\r\n  remarks: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-monthly-tracker',\r\n  templateUrl: './monthly-tracker.component.html',\r\n  styleUrls: ['./monthly-tracker.component.css'],\r\n})\r\nexport class MonthlyTrackerComponent implements AfterViewInit {\r\n  month: string;\r\n  year: number;\r\n  startDate: number;\r\n  endDate: number;\r\n  records: number;\r\n  showSpinner = false;\r\n\r\n  allmonths = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n\r\n  thisMonth: string = this.allmonths[new Date().getMonth() - 1];\r\n  thisYear: number = new Date().getFullYear();\r\n  yearFilter = new FormControl(new Date().getFullYear(), [\r\n    Validators.min(2000),\r\n    Validators.max(new Date().getFullYear()),\r\n  ]);\r\n  monthFilter = new FormControl(this.allmonths[new Date().getMonth() - 1]);\r\n\r\n  // Tabs\r\n  @ViewChild('tabGroup') tabGroup: { selectedIndex: number };\r\n\r\n  // ALL RECORDS\r\n  allTrackers: MonthlyTracker[] = [];\r\n\r\n  // SUBMITTED RECORDS\r\n  submittedTrackers: MonthlyTracker[] = [];\r\n\r\n  // APPROVED RECORDS\r\n  approvedTrackers: MonthlyTracker[] = [];\r\n\r\n  // REVERTED RECORDS\r\n  revertedTrackers: MonthlyTracker[] = [];\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private monthlyTrackerService: MonthlyTrackerService,\r\n    private emailService: EmailService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n\r\n  // Overview Populate on View Initialization\r\n  ngAfterViewInit(): void {\r\n    // Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\r\n    // Add 'implements AfterViewInit' to the class.\r\n    this.updateRecords();\r\n  }\r\n\r\n  // Tab Change Event Handler\r\n  tabChanged(tabChangeEvent: MatTabChangeEvent): void {\r\n    if (tabChangeEvent.index === 0) {\r\n      this.updateOverview(this.allTrackers);\r\n    } else if (tabChangeEvent.index === 1) {\r\n      this.updateOverview(this.submittedTrackers);\r\n    } else if (tabChangeEvent.index === 2) {\r\n      this.updateOverview(this.approvedTrackers);\r\n    } else if (tabChangeEvent.index === 3) {\r\n      this.updateOverview(this.revertedTrackers);\r\n    }\r\n  }\r\n\r\n  // Long to Date String Convertor\r\n  date(milliseconds: number): string {\r\n    return new Date(milliseconds).toDateString();\r\n  }\r\n\r\n  viewDetails(monthlyTracker: MonthlyTracker): void {\r\n    console.log(\"email:\",monthlyTracker.employeeEmail,\"month:\",this.allmonths.indexOf(this.monthFilter.value) + 1,\"year:\",this.yearFilter.value)\r\n    this.router.navigate([\r\n      '/home/mtd',\r\n      monthlyTracker.employeeEmail,\r\n      this.allmonths.indexOf(this.monthFilter.value) + 1,\r\n      this.yearFilter.value,\r\n    ]);\r\n  }\r\n  approve(monthlyTracker: MonthlyTracker): void {\r\n    this.monthlyTrackerService\r\n      .ApproveMonthlyTracker(monthlyTracker)\r\n      .subscribe((Response) => {\r\n        this.updateRecords();\r\n      });\r\n  }\r\n  revert(monthlyTracker: MonthlyTracker): void {\r\n    this.openDialog(monthlyTracker);\r\n    this.dialog.afterAllClosed.subscribe(() => {\r\n      this.updateRecords();\r\n    });\r\n    this.updateRecords();\r\n  }\r\n\r\n  updateRecords(): void {\r\n    this.thisMonth = this.allmonths[new Date().getMonth()];\r\n    this.thisYear = new Date().getFullYear();\r\n    this.showSpinner = true;\r\n    this.monthlyTrackerService\r\n      .getAllMonthlyTrackers(this.monthFilter.value, this.yearFilter.value)\r\n      .subscribe(\r\n        (response) => {\r\n          this.allTrackers = response;\r\n          this.showSpinner = false;\r\n          this.submittedTrackers = this.allTrackers.filter(\r\n            (s) => s.status === 'SUBMITTED'\r\n          );\r\n          this.approvedTrackers = this.allTrackers.filter(\r\n            (s) => s.status === 'COMPLETED'\r\n          );\r\n          this.revertedTrackers = this.allTrackers.filter(\r\n            (s) => s.status === 'REVERTED'\r\n          );\r\n          if (this.tabGroup.selectedIndex === 0) {\r\n            this.updateOverview(this.allTrackers);\r\n          } else if (this.tabGroup.selectedIndex === 1) {\r\n            this.updateOverview(this.submittedTrackers);\r\n          } else if (this.tabGroup.selectedIndex === 2) {\r\n            this.updateOverview(this.approvedTrackers);\r\n          } else if (this.tabGroup.selectedIndex === 3) {\r\n            this.updateOverview(this.revertedTrackers);\r\n          } else {\r\n            this.updateOverview(this.allTrackers);\r\n          }\r\n        },\r\n        (error) => {\r\n          this.showSpinner = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  updateOverview(monthlyTrackers: MonthlyTracker[]): void {\r\n    this.records = monthlyTrackers.length;\r\n    if (this.records === 0 && this.allTrackers.length === 0) {\r\n      this.month = this.monthFilter.value;\r\n      this.year = this.yearFilter.value;\r\n      this.startDate = null;\r\n      this.endDate = null;\r\n    } else {\r\n      this.month = monthlyTrackers.reduce((s) => s).monthName.toLowerCase();\r\n      this.year = monthlyTrackers.reduce((s) => s).year;\r\n      this.startDate = monthlyTrackers[0].startDate;\r\n      this.endDate = monthlyTrackers[0].endDate;\r\n    }\r\n  }\r\n\r\n  openDialog(monthlyTracker: MonthlyTracker): void {\r\n    this.dialog.open(DialogComponent, {\r\n      data: monthlyTracker,\r\n    });\r\n  }\r\n}\r\n","<div class=\"spinner\" *ngIf=\"showSpinner\">\r\n  <mat-progress-spinner [mode]=\"'indeterminate'\"> </mat-progress-spinner>\r\n</div>\r\n\r\n<div class=\"background\">\r\n  <!-- Overview -->\r\n  <div class=\"overview\">\r\n    <span class=\"side-header\">OVERVIEW</span>\r\n    <br /><br />\r\n    <div class=\"side-info\">\r\n      No.of Monthly Trackers\r\n      <br />\r\n      <h1>{{ records }}</h1>\r\n    </div>\r\n    &nbsp; &nbsp;\r\n    <div class=\"side-info\">\r\n      Month\r\n      <br />\r\n      <h1>{{ month }}</h1>\r\n    </div>\r\n    &nbsp; &nbsp;\r\n    <div class=\"side-info\">\r\n      Year\r\n      <br />\r\n      <h1>{{ year }}</h1>\r\n    </div>\r\n    <br />\r\n    <div class=\"side-sub-info\" *ngIf=\"startDate !== null\">\r\n      Start Date\r\n      <br />\r\n      <h1>{{ startDate | date: \"dd MMM yyyy\" }}</h1>\r\n    </div>\r\n    &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n    <div class=\"side-sub-info\" *ngIf=\"endDate !== null\">\r\n      End Date\r\n      <br />\r\n      <h1>{{ endDate | date: \"dd MMM yyyy\" }}</h1>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Title  -->\r\n  <div class=\"title\">&nbsp; &nbsp; MONTHLY TRACKER</div>\r\n  <br />\r\n  <!-- Filter -->\r\n  <div class=\"filter\">\r\n    <span class=\"side-header\">Filter</span>\r\n    <br />\r\n    <br />\r\n    <mat-form-field appearance=\"outline\">\r\n      <mat-label>Month</mat-label>\r\n      <mat-select\r\n        [(value)]=\"thisMonth\"\r\n        [formControl]=\"monthFilter\"\r\n        (selectionChange)=\"updateRecords()\"\r\n      >\r\n        <mat-option>None</mat-option>\r\n        <mat-option *ngFor=\"let month of allmonths\" [value]=\"month\">\r\n          {{ month }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    &nbsp;\r\n    <mat-form-field appearance=\"outline\">\r\n      <mat-label>Year</mat-label>\r\n      <input\r\n        matInput\r\n        type=\"number\"\r\n        placeholder=\"Year\"\r\n        (input)=\"updateRecords()\"\r\n        [formControl]=\"yearFilter\"\r\n        min=\"2000\"\r\n        [max]=\"thisYear\"\r\n      />\r\n      <mat-error *ngIf=\"yearFilter.invalid\">\"Enter a Valid Year</mat-error>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <!-- Tabs -->\r\n\r\n  <mat-tab-group\r\n    animationDuration=\"0ms\"\r\n    #tabGroup\r\n    (selectedTabChange)=\"tabChanged($event)\"\r\n  >\r\n    <!-- All Records -->\r\n    <mat-tab>\r\n      <ng-template mat-tab-label>\r\n        All &nbsp;\r\n        <a mat-mini-fab color=\"primary\">\r\n          <mat-icon class=\"mat-18\">all_inclusive</mat-icon>\r\n        </a>\r\n      </ng-template>\r\n      <!-- Data -->\r\n      <div\r\n        class=\"list\"\r\n        *ngIf=\"allTrackers.length > 0 || showSpinner; else noAllTrackers\"\r\n      >\r\n        <mat-card class=\"heading\">\r\n          <div>EMPLOYEE EMAIL</div>\r\n          <div>STATUS</div>\r\n          <div>REMARKS</div>\r\n          <div>ACTION</div>\r\n          <div></div>\r\n        </mat-card>\r\n        <mat-card class=\"data\" *ngFor=\"let tracker of allTrackers\">\r\n          <div class=\"record\">\r\n            <mat-icon class=\"mat-18\" [style.color]=\"'#d27a4f'\">mail</mat-icon>\r\n            {{ tracker.employeeEmail }}\r\n          </div>\r\n          <div>\r\n            <mat-icon\r\n              [style.color]=\"\r\n                tracker.status == 'COMPLETED'\r\n                  ? '#8cc73c'\r\n                  : tracker.status == 'REVERTED'\r\n                  ? '#f66178'\r\n                  : '#f2b551'\r\n              \"\r\n              >fiber_manual_record</mat-icon\r\n            >\r\n            {{ tracker.status.toUpperCase() }}\r\n          </div>\r\n          <div>{{ tracker.remarks }}</div>\r\n          <div [style.textAlign]=\"left\">\r\n            <span *ngIf=\"tracker.status == 'SUBMITTED'\">\r\n              &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            </span>\r\n            <button\r\n              mat-mini-fab\r\n              matTooltip=\"Approve\"\r\n              [style.backgroundColor]=\"'#8cc73c'\"\r\n              *ngIf=\"tracker.status == 'SUBMITTED'\"\r\n            >\r\n              <mat-icon (click)=\"approve(tracker)\" class=\"mat-18\"\r\n                >done_outline</mat-icon\r\n              >\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              mat-mini-fab\r\n              matTooltip=\"Revert\"\r\n              (click)=\"revert(tracker)\"\r\n              [style.backgroundColor]=\"'#f66178'\"\r\n              *ngIf=\"tracker.status == 'SUBMITTED'\"\r\n            >\r\n              <mat-icon class=\"mat-18\">north_east</mat-icon>\r\n            </button>\r\n            <button\r\n              mat-flat-button\r\n              disabled\r\n              class=\"no-action\"\r\n              *ngIf=\"\r\n                tracker.status == 'COMPLETED' || tracker.status == 'REVERTED'\r\n              \"\r\n              [style.color]=\"'#55557b'\"\r\n            >\r\n              <strong>No Action Allowed</strong>\r\n            </button>\r\n          </div>\r\n          <div>\r\n            <button\r\n              mat-stroked-button\r\n              class=\"view-details\"\r\n              (click)=\"viewDetails(tracker)\"\r\n              color=\"primary\"\r\n            >\r\n              View Details\r\n            </button>\r\n          </div>\r\n        </mat-card>\r\n      </div>\r\n      <ng-template #noAllTrackers>\r\n        <div class=\"not-available\">\r\n          <img\r\n            class=\"oops\"\r\n            src=\"assets/images/minion-oops.png\"\r\n            alt=\"\"\r\n            srcset=\"\"\r\n          />\r\n          Oops! No Available Trackers as of Now!\r\n        </div>\r\n      </ng-template>\r\n    </mat-tab>\r\n\r\n    <!-- SUBMITTED Records -->\r\n    <mat-tab>\r\n      <ng-template mat-tab-label>\r\n        SUBMITTED &nbsp;\r\n        <a mat-mini-fab [style.backgroundColor]=\"'#f2b551'\">\r\n          <mat-icon class=\"mat-18\">checklist</mat-icon>\r\n        </a>\r\n      </ng-template>\r\n      <!-- Data -->\r\n      <div\r\n        class=\"list\"\r\n        *ngIf=\"\r\n          submittedTrackers.length > 0 || showSpinner;\r\n          else noSubmittedTrackers\r\n        \"\r\n      >\r\n        <mat-card class=\"heading\">\r\n          <div>EMPLOYEE EMAIL</div>\r\n          <div>STATUS</div>\r\n          <div>REMARKS</div>\r\n          <div>ACTION</div>\r\n          <div></div>\r\n        </mat-card>\r\n        <mat-card class=\"data\" *ngFor=\"let tracker of submittedTrackers\">\r\n          <div>\r\n            <mat-icon class=\"mat-18\" [style.color]=\"'#d27a4f'\">mail</mat-icon>\r\n            {{ tracker.employeeEmail }}\r\n          </div>\r\n          <div>\r\n            <mat-icon\r\n              [style.color]=\"\r\n                tracker.status == 'COMPLETED'\r\n                  ? '#8cc73c'\r\n                  : tracker.status == 'REVERTED'\r\n                  ? '#f66178'\r\n                  : '#f2b551'\r\n              \"\r\n              >fiber_manual_record</mat-icon\r\n            >\r\n            {{ tracker.status.toUpperCase() }}\r\n          </div>\r\n          <div>{{ tracker.remarks }}</div>\r\n          <div [style.textAlign]=\"left\">\r\n            <span *ngIf=\"tracker.status == 'SUBMITTED'\"> </span>\r\n            <button\r\n              mat-mini-fab\r\n              matTooltip=\"Approve\"\r\n              (click)=\"approve(tracker)\"\r\n              [style.backgroundColor]=\"'#8cc73c'\"\r\n              *ngIf=\"tracker.status == 'SUBMITTED'\"\r\n            >\r\n              <mat-icon class=\"mat-18\">done_outline</mat-icon>\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              mat-mini-fab\r\n              matTooltip=\"Revert\"\r\n              (click)=\"revert(tracker)\"\r\n              [style.backgroundColor]=\"'#f66178'\"\r\n              *ngIf=\"tracker.status == 'SUBMITTED'\"\r\n            >\r\n              <mat-icon class=\"mat-18\">north_east</mat-icon>\r\n            </button>\r\n          </div>\r\n          <div>\r\n            <button\r\n              mat-stroked-button\r\n              class=\"view-details\"\r\n              (click)=\"viewDetails(tracker)\"\r\n              color=\"primary\"\r\n            >\r\n              View Details\r\n            </button>\r\n          </div>\r\n        </mat-card>\r\n      </div>\r\n      <ng-template #noSubmittedTrackers>\r\n        <div class=\"not-available\">\r\n          <img\r\n            class=\"oops\"\r\n            src=\"assets/images/minion-oops.png\"\r\n            alt=\"\"\r\n            srcset=\"\"\r\n          />\r\n          Oops! No Available Trackers as of Now!\r\n        </div>\r\n      </ng-template>\r\n    </mat-tab>\r\n\r\n    <!-- Approved Records -->\r\n    <mat-tab>\r\n      <ng-template mat-tab-label>\r\n        Approved &nbsp;\r\n        <a mat-mini-fab [style.backgroundColor]=\"'#8cc73c'\">\r\n          <mat-icon class=\"mat-18\">done_outline</mat-icon>\r\n        </a>\r\n      </ng-template>\r\n      <!-- Data -->\r\n      <div\r\n        class=\"list\"\r\n        *ngIf=\"\r\n          approvedTrackers.length > 0 || showSpinner;\r\n          else noApprovedTrackers\r\n        \"\r\n      >\r\n        <mat-card class=\"heading\">\r\n          <div>EMPLOYEE EMAIL</div>\r\n          <div>STATUS</div>\r\n          <div>REMARKS</div>\r\n          <div></div>\r\n        </mat-card>\r\n        <mat-card class=\"data\" *ngFor=\"let tracker of approvedTrackers\">\r\n          <div>\r\n            <mat-icon class=\"mat-18\" [style.color]=\"'#d27a4f'\">mail</mat-icon>\r\n            {{ tracker.employeeEmail }}\r\n          </div>\r\n          <div>\r\n            <mat-icon\r\n              [style.color]=\"\r\n                tracker.status == 'COMPLETED'\r\n                  ? '#8cc73c'\r\n                  : tracker.status == 'REVERTED'\r\n                  ? '#f66178'\r\n                  : '#f2b551'\r\n              \"\r\n              >fiber_manual_record</mat-icon\r\n            >\r\n            {{ tracker.status.toUpperCase() }}\r\n          </div>\r\n          <div>{{ tracker.remarks }}</div>\r\n          <div>\r\n            <button\r\n              mat-stroked-button\r\n              class=\"view-details\"\r\n              (click)=\"viewDetails(tracker)\"\r\n              color=\"primary\"\r\n            >\r\n              View Details\r\n            </button>\r\n          </div>\r\n        </mat-card>\r\n      </div>\r\n\r\n      <ng-template #noApprovedTrackers>\r\n        <div class=\"not-available\">\r\n          <img\r\n            class=\"oops\"\r\n            src=\"assets/images/minion-oops.png\"\r\n            alt=\"\"\r\n            srcset=\"\"\r\n          />\r\n          Oops! No Available Trackers as of Now!\r\n        </div>\r\n      </ng-template>\r\n    </mat-tab>\r\n\r\n    <!-- Reverted Records -->\r\n    <mat-tab>\r\n      <ng-template mat-tab-label>\r\n        Reverted &nbsp;\r\n        <a mat-mini-fab [style.backgroundColor]=\"'#f66178'\">\r\n          <mat-icon class=\"mat-18\">north_east</mat-icon>\r\n        </a>\r\n      </ng-template>\r\n      <!-- Data -->\r\n      <div\r\n        class=\"list\"\r\n        *ngIf=\"\r\n          revertedTrackers.length > 0 || showSpinner;\r\n          else noRevertedTrackers\r\n        \"\r\n      >\r\n        <mat-card class=\"heading\">\r\n          <div>EMPLOYEE EMAIL</div>\r\n          <div>STATUS</div>\r\n          <div>REMARKS</div>\r\n          <div></div>\r\n        </mat-card>\r\n        <mat-card class=\"data\" *ngFor=\"let tracker of revertedTrackers\">\r\n          <div>\r\n            <mat-icon class=\"mat-18\" [style.color]=\"'#d27a4f'\">mail</mat-icon>\r\n            {{ tracker.employeeEmail }}\r\n          </div>\r\n          <div>\r\n            <mat-icon\r\n              [style.color]=\"\r\n                tracker.status == 'COMPLETED'\r\n                  ? '#8cc73c'\r\n                  : tracker.status == 'REVERTED'\r\n                  ? '#f66178'\r\n                  : '#f2b551'\r\n              \"\r\n              >fiber_manual_record</mat-icon\r\n            >\r\n            {{ tracker.status.toUpperCase() }}\r\n          </div>\r\n          <div>{{ tracker.remarks }}</div>\r\n          <div>\r\n            <button\r\n              mat-stroked-button\r\n              class=\"view-details\"\r\n              (click)=\"viewDetails(tracker)\"\r\n              color=\"primary\"\r\n            >\r\n              View Details\r\n            </button>\r\n          </div>\r\n        </mat-card>\r\n      </div>\r\n\r\n      <ng-template #noRevertedTrackers>\r\n        <div class=\"not-available\">\r\n          <img\r\n            class=\"oops\"\r\n            src=\"assets/images/minion-oops.png\"\r\n            alt=\"\"\r\n            srcset=\"\"\r\n          />\r\n          Oops! No Available Trackers as of Now!\r\n        </div>\r\n      </ng-template>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ProgramService } from 'src/app/service/program.service';\r\nimport { AddProgramMembersComponent } from '../add-program-members/add-program-members.component';\r\nimport { ViewProgramCardComponent } from '../view-program-card/view-program-card.component';\r\n\r\n@Component({\r\n  selector: 'app-program-card',\r\n  templateUrl: './program-card.component.html',\r\n  styleUrls: ['./program-card.component.css'],\r\n})\r\nexport class ProgramCardComponent implements OnInit {\r\n\r\n  role: string;\r\n  imageURL: any;\r\n\r\n  constructor(\r\n    private sanitizer: DomSanitizer,\r\n    public dialog: MatDialog,\r\n    private programService: ProgramService\r\n  ) {\r\n    this.role = '';\r\n  }\r\n\r\n\r\n  @Input() public programData: any;\r\n\r\n  showProgramDetails(programName: string): void {\r\n    this.programService.getProgramDetails(programName).subscribe((response) => {\r\n      this.dialog.open(ViewProgramCardComponent, {\r\n        width: '600px',\r\n        data: response,\r\n      });\r\n    });\r\n  }\r\n\r\n  addProgramMembers(event: any, programName: string): void {\r\n    event.stopPropagation();\r\n    this.dialog.open(AddProgramMembersComponent, {\r\n      width: '600px',\r\n      data: programName,\r\n    });\r\n    console.log('Add Members to ' + programName);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.role = window.localStorage.getItem('role');\r\n\r\n    this.imageURL = this.sanitizer.bypassSecurityTrustResourceUrl(\r\n      'data:image/jpg;base64,' + this.programData.organizationBrandLogo\r\n    );\r\n\r\n  }\r\n\r\n\r\n}\r\n","<mat-card\r\n  class=\"example-card\"\r\n  [ngClass]=\"{\r\n    'active-program': programData?.programStatus === 'ACTIVE',\r\n    'inactive-program': programData?.programStatus === 'INACTIVE'\r\n  }\"\r\n  programData\r\n  (click)=\"showProgramDetails(programData?.programName)\"\r\n>\r\n  <img mat-card-image [src]=\"imageURL\" [alt]=\"programData?.organizationName\" />\r\n  <mat-card-header>\r\n    <mat-card-title>{{ programData?.programName }} </mat-card-title>\r\n    <mat-card-subtitle>{{ programData?.organizationName }}</mat-card-subtitle>\r\n  </mat-card-header>\r\n\r\n  <mat-card-content>\r\n    <mat-icon\r\n      inline=\"true\"\r\n      (click)=\"addProgramMembers($event, programData?.programName)\"\r\n      *ngIf=\"role === 'MANAGER'\"\r\n    >\r\n      group_add</mat-icon\r\n    >\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { Component, Inject, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\r\nimport { MatChipInputEvent } from '@angular/material/chips';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ProgramService } from 'src/app/service/program.service';\r\nimport { EmployeeService } from 'src/app/service/employee.service';\r\n\r\n@Component({\r\n  selector: 'app-add-project-members',\r\n  templateUrl: './add-project-members.component.html',\r\n  styleUrls: ['./add-project-members.component.css'],\r\n})\r\n\r\nexport class AddProjectMembersComponent implements OnInit {\r\n  separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  memberCtrl = new FormControl('');\r\n  filteredMembers: Observable<string[]>;\r\n  members = new Set();\r\n  allMembers = [];\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public projectName: any,\r\n    private programService: ProgramService,\r\n    private snackBar: MatSnackBar,\r\n    private employeeService: EmployeeService\r\n  ) {\r\n    this.filteredMembers = this.memberCtrl.valueChanges.pipe(\r\n      startWith(null),\r\n      map((member: string | null) => (member ? this._filter(member) : this.allMembers.slice())),\r\n    );\r\n  }\r\n\r\n  add(event: MatChipInputEvent): void {\r\n    const value = (event.value || '').trim();\r\n\r\n    const index = this.allMembers.indexOf(value);\r\n    console.log(index);\r\n\r\n    if (index >= 0) {\r\n      this.members.add(value);\r\n    }\r\n\r\n    event.input.value = '';\r\n\r\n    this.memberCtrl.setValue(null);\r\n  }\r\n\r\n  remove(member: string): void {\r\n    this.members.delete(member);\r\n  }\r\n\r\n  selected(event: MatAutocompleteSelectedEvent): void {\r\n    this.members.add(event.option.viewValue);\r\n    this.memberCtrl.setValue(null);\r\n  }\r\n\r\n  private _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n\r\n    return this.allMembers.filter(member => member.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  addMembersToProject(): void {\r\n    console.log(this.members);\r\n\r\n    const membersArray = Array.from(this.members);\r\n\r\n    this.programService\r\n      .addMembersToProject(membersArray, this.projectName)\r\n      .subscribe(\r\n        (response) => {\r\n          console.log(response);\r\n\r\n          this.snackBar.open('Members Added Successfully.', '', {\r\n            duration: 5000,\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'top',\r\n            panelClass: ['mat-toolbar', 'mat-primary']\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n\r\n          this.snackBar.open('Some problem occured.', '', {\r\n            duration: 5000,\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'top',\r\n            panelClass: ['mat-toolbar', 'mat-warn']\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  getAllEmployees(managerEmail: string): void {\r\n    this.employeeService.getEmployeesWorkingForAParticularManager(managerEmail).subscribe((response) => {\r\n      console.log(response);\r\n      response.forEach(employee => {\r\n        this.allMembers.push(employee.emailId);\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const email = window.localStorage.getItem('tgt_email');\r\n    this.getAllEmployees(email);\r\n  }\r\n}\r\n","<h2 mat-dialog-title>Add Members for {{ projectName }}</h2>\r\n\r\n<mat-dialog-content class=\"mat-typography\">\r\n  <mat-form-field class=\"example-chip-list\" appearance=\"outline\">\r\n    <mat-label>Add Members</mat-label>\r\n    <mat-chip-list #chipList>\r\n      <mat-chip *ngFor=\"let member of members\" (removed)=\"remove(member)\">\r\n        {{ member }}\r\n        <mat-icon matChipRemove>cancel</mat-icon>\r\n      </mat-chip>\r\n      <input\r\n        placeholder=\"New Member...\"\r\n        [formControl]=\"memberCtrl\"\r\n        [matAutocomplete]=\"auto\"\r\n        [matChipInputFor]=\"chipList\"\r\n        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n        (matChipInputTokenEnd)=\"add($event)\"\r\n      />\r\n    </mat-chip-list>\r\n    <mat-autocomplete\r\n      #auto=\"matAutocomplete\"\r\n      (optionSelected)=\"selected($event)\"\r\n    >\r\n      <mat-option\r\n        *ngFor=\"let member of filteredMembers | async\"\r\n        [value]=\"member\"\r\n      >\r\n        {{ member }}\r\n      </mat-option>\r\n    </mat-autocomplete>\r\n  </mat-form-field>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button mat-dialog-close>Cancel</button>\r\n  <button\r\n    mat-button\r\n    [mat-dialog-close]=\"true\"\r\n    (click)=\"addMembersToProject()\"\r\n    color=\"primary\"\r\n    mat-flat-button\r\n  >\r\n    Add\r\n  </button>\r\n</mat-dialog-actions>\r\n","import { ProgramTime } from \"./program-time\";\r\nimport { ProjectTime } from \"./project-time\";\r\n\r\nexport class EmployeeData {\r\n    image: string;\r\n  email: string;\r\n  name: string;\r\n  projects:ProjectTime[];\r\n  programs:ProgramTime[];\r\n  totalProgHrs:number;\r\n  totalProjHrs:number;\r\n  self_Learning_Hrs:number;\r\n  leaves:number;\r\n  manager:string;\r\n  fullDayLeavesList:number[]=[]\r\n  halfDayLeavesList:number[]=[]\r\n\r\n  constructor(image:string,email:string,name:string,projects:ProjectTime[],programs:ProgramTime[],totalProgHrs:number,totalProjHrs:number,self_Learning_Hrs:number,leaves:number,manager:string,fulldayLeaveList:number[],halfdayLeaveList:number[]){\r\n    this.image=image;\r\n    this.email=email;\r\n    this.name=name;\r\n    this.projects=projects;\r\n    this.programs=programs;\r\n    this.totalProgHrs=totalProgHrs;\r\n    this.totalProjHrs=totalProjHrs;\r\n    this.self_Learning_Hrs=self_Learning_Hrs;\r\n    this.leaves=leaves;\r\n    this.manager=manager;\r\n    this.fullDayLeavesList=fulldayLeaveList;\r\n    this.halfDayLeavesList=halfdayLeaveList;\r\n  }\r\n}\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NavBarComponent } from './component/nav-bar/nav-bar.component';\r\nimport { RegisterLoginComponent } from './component/register-login/register-login.component';\r\nimport { ViewProgramCardComponent } from './component/view-program-card/view-program-card.component';\r\nimport { ViewProgramManagerComponent } from './component/view-program-manager/view-program-manager.component';\r\n// import { AddMemberCardComponent } from './component/add-member-card/add-member-card.component';\r\nimport { CalendarComponent } from './component/calendar/calendar.component';\r\nimport { TimeTrackerComponent } from './component/time-tracker/time-tracker.component';\r\nimport { MonthlyTrackerComponent } from './component/monthly-tracker/monthly-tracker.component';\r\nimport { MonthlyTrackerDetailsComponent } from './component/monthly-tracker-details/monthly-tracker-details.component';\r\nimport { AllChartsComponent } from './component/all-charts/all-charts.component';\r\nimport { BarChartComponent } from './component/charts-folder/bar-chart/bar-chart.component';\r\nimport { PieChartComponent } from './component/charts-folder/pie-chart/pie-chart.component';\r\nimport { DoughnutChartComponent } from './component/charts-folder/doughnut-chart/doughnut-chart.component';\r\nimport { ProfileComponent } from './component/profile/profile.component';\r\nimport { DoughnutChart2Component } from './component/charts-folder/doughnut-chart2/doughnut-chart2.component';\r\nimport { ConsolidatedViewComponent } from './component/consolidated-view/consolidated-view.component';\r\nimport { BarChart2Component } from './component/charts-folder/bar-chart2/bar-chart2.component';\r\nimport { AuthGuard } from './guard/auth.guard';\r\nimport { ConsolidatedAnalyticsComponent } from './component/consolidated-analytics/consolidated-analytics.component';\r\nimport { LeavesComponent } from './component/leaves/leaves.component';\r\n\r\nconst routes: Routes = [\r\n\r\n  {\r\n    path: '',\r\n    component: RegisterLoginComponent\r\n  },\r\n  // {\r\n  //   path: 'calendar',\r\n  //   component: CalendarComponent\r\n  // },\r\n  // {\r\n  //   path: 'cv',\r\n  //   component: ConsolidatedViewComponent\r\n  // },\r\n  // {\r\n  //   path: 'mtd',\r\n  //   component: MonthlyTrackerDetailsComponent\r\n  // },\r\n  {\r\n    path: 'home',\r\n    component: NavBarComponent,\r\n    canActivate:[AuthGuard],\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: ViewProgramManagerComponent\r\n      },\r\n      {\r\n        path: 'profile',\r\n        component: ProfileComponent\r\n      },\r\n      {\r\n        path: 'view-program-manager',\r\n        component: ViewProgramManagerComponent\r\n      },\r\n      {\r\n        path: 'monthly-tracker',\r\n        component: MonthlyTrackerComponent\r\n      },\r\n      {\r\n        path: 'view-program-card',\r\n        component: ViewProgramCardComponent\r\n      },\r\n      // {\r\n      //   path: 'add-member-card',\r\n      //   component: AddMemberCardComponent,\r\n      // },\r\n      {\r\n        path: 'monthly-tracker',\r\n        component: MonthlyTrackerComponent\r\n      },\r\n      {\r\n        path: 'timetracker',\r\n        component: TimeTrackerComponent\r\n      },\r\n      {\r\n        path: 'lc',\r\n        component: LeavesComponent\r\n      },\r\n      {\r\n        path: 'can',\r\n        component: ConsolidatedAnalyticsComponent\r\n      },\r\n      {\r\n        path: 'calendar',\r\n        component: CalendarComponent\r\n      },\r\n      {\r\n        path: 'cv',\r\n        component: ConsolidatedViewComponent\r\n      },\r\n      {\r\n        path: 'calendar/:email/:month/:year',\r\n        component: CalendarComponent\r\n      },\r\n      {\r\n        path: 'mtd/:email/:month/:year',\r\n        component: MonthlyTrackerDetailsComponent\r\n      },\r\n      {\r\n        path: 'analytics',\r\n        component: AllChartsComponent,\r\n        children: [\r\n          { path: 'employee-distribution-in-external-programs', component: DoughnutChartComponent },\r\n          { path: 'employee-distribution-in-internal-projects', component: DoughnutChart2Component },\r\n          { path: 'external-programs', component: BarChartComponent },\r\n          { path: 'internal-projects', component: BarChart2Component },\r\n          { path: 'pie-chart', component: PieChartComponent },\r\n          { path: '', component: BarChartComponent }\r\n        ]\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    path: 'view-program-manager',\r\n    component: ViewProgramManagerComponent,\r\n  },\r\n  {\r\n    path: 'view-program-card',\r\n    component: ViewProgramCardComponent,\r\n  },\r\n  // {\r\n  //   path: 'add-member-card',\r\n  //   component: AddMemberCardComponent,\r\n  // },\r\n  {\r\n    path: 'monthly-tracker',\r\n    component: MonthlyTrackerComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {\r\n    useHash: true\r\n  })],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule { }\r\n","import { MemberHour } from \"./program-data\";\r\n\r\nexport class ProjectData {\r\n    organizationBrandLogo:string;\r\n    projectName:string;\r\n    organizationName:string;\r\n    \r\n    createdOn:number;\r\n    startDate:number;\r\n    endDate:number;\r\n    managerEmailId:string;\r\n    projectStatus:string;\r\n    memberList:MemberHour[];\r\n    totalHours:number;\r\n\r\n    constructor(organizationBrandLogo:string,projectName:string,organizationName:string,createdOn:number,startDate:number,endDate:number,managerEmailId:string,projectStatus:string){\r\n     this.organizationBrandLogo= organizationBrandLogo;\r\n    this.projectName= projectName;\r\n    this.organizationName= organizationName;\r\n    this.createdOn=createdOn;\r\n    this.startDate=startDate;\r\n    this.endDate=endDate;\r\n    this.managerEmailId=managerEmailId;\r\n    this.projectStatus=projectStatus;\r\n    this.memberList=[]\r\n    this.totalHours=0;\r\n    }\r\n}\r\n\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ProgramService } from '../../service/program.service';\r\n\r\n@Component({\r\n  selector: 'app-view-program-card',\r\n  templateUrl: './view-program-card.component.html',\r\n  styleUrls: ['./view-program-card.component.css'],\r\n})\r\nexport class ViewProgramCardComponent implements OnInit {\r\n  programDetails: any;\r\n  role: string;\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any, private programService: ProgramService, private snackBar: MatSnackBar) { }\r\n\r\n  remove(programName: string, memberEmail: string): void {\r\n\r\n    this.programService.removeMembersFromProgram(programName, memberEmail).subscribe((response) => {\r\n      console.log(response);\r\n\r\n      this.snackBar.open('Member Removed Successfully.', '', {\r\n        duration: 5000,\r\n        horizontalPosition: 'center',\r\n        verticalPosition: 'top',\r\n        panelClass: ['mat-toolbar', 'mat-primary']\r\n      });\r\n    }, (error) => {\r\n      console.log(error);\r\n      this.snackBar.open('Some problem occured.', '', {\r\n        duration: 5000,\r\n        horizontalPosition: 'center',\r\n        verticalPosition: 'top',\r\n        panelClass: ['mat-toolbar', 'mat-warn']\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.programDetails = this.data;\r\n    this.role = window.localStorage.getItem('role');\r\n  }\r\n}\r\n","<div programDetails>\r\n  <div mat-dialog-title class=\"flex-container\">\r\n    <h1 mat-dialog-title>{{ programDetails?.programName }}</h1>\r\n    <span class=\"example-spacer\"></span>\r\n    <mat-icon [mat-dialog-close]=\"true\" matTooltip=\"Close\">close</mat-icon>\r\n  </div>\r\n\r\n  <mat-dialog-content class=\"mat-typography\">\r\n    <div fxLayout=\"row\" fxLayoutGap=\"2%\" fxLayout.xs=\"column\">\r\n      <mat-icon>domain</mat-icon>\r\n      <h3 fxFlex=\"50%\" matTooltip=\"Organization Name\">\r\n        {{ programDetails?.organizationName }}\r\n      </h3>\r\n      <mat-icon>task</mat-icon>\r\n      <h3 fxFlex=\"50%\" matTooltip=\"Program Type\">\r\n        {{ programDetails?.programType }}\r\n      </h3>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutGap=\"2%\" fxLayout.xs=\"column\">\r\n      <mat-icon>calendar_today</mat-icon>\r\n      <h3 fxFlex=\"50%\" matTooltip=\"Program Duration\">\r\n        {{ programDetails?.startDate | date: \"dd/MM/yyyy\" }} -\r\n        {{ programDetails?.endDate | date: \"dd/MM/yyyy\" }}\r\n      </h3>\r\n      <mat-icon>person</mat-icon>\r\n      <h3 fxFlex=\"50%\" matTooltip=\"Manager's Email Id\">\r\n        {{ programDetails?.managerEmailId }}\r\n      </h3>\r\n    </div>\r\n\r\n    <div fxLayout=\"column\">\r\n      <div>\r\n        <mat-icon>group</mat-icon>\r\n      </div>\r\n\r\n      <mat-form-field class=\"example-chip-list\" appearance=\"outline\">\r\n        <mat-label>Members</mat-label>\r\n        <h1 *ngIf=\"programDetails?.membersList == null\">No Members to show.</h1>\r\n        <mat-chip-list *ngIf=\"programDetails?.membersList.length > 0\" #chipList>\r\n          <mat-chip\r\n            *ngFor=\"let member of programDetails?.membersList\"\r\n            (removed)=\"\r\n              remove(programDetails?.programName, member.memberEmailId)\r\n            \"\r\n          >\r\n            {{ member.memberEmailId }}\r\n\r\n            <mat-icon\r\n              *ngIf=\"role === 'MANAGER'\"\r\n              [mat-dialog-close]=\"true\"\r\n              matTooltip=\"Remove member\"\r\n              matChipRemove\r\n              >cancel</mat-icon\r\n            >\r\n          </mat-chip>\r\n        </mat-chip-list>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-dialog-content>\r\n</div>\r\n","import { EmailService } from './../../../service/email.service';\r\nimport { MonthlyTrackerService } from './../../../service/monthly-tracker.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { MonthlyTracker } from './../../../model/monthly-tracker';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n@Component({\r\n  selector: 'app-dialog',\r\n  templateUrl: './dialog.component.html',\r\n  styleUrls: ['./dialog.component.css'],\r\n})\r\nexport class DialogComponent implements OnInit {\r\n  emailId: string;\r\n  id: string;\r\n\r\n  showSpinner = false;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private data: MonthlyTracker,\r\n    private monthlyTrackerService: MonthlyTrackerService,\r\n    private matDialogRef: MatDialogRef<DialogComponent>,\r\n    private emailService: EmailService\r\n  ) {\r\n    this.emailId = data.employeeEmail;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n  onSubmit(form: NgForm): void {\r\n    this.showSpinner = true;\r\n    this.monthlyTrackerService\r\n      .RemarkMonthlyTracker(\r\n        this.data.monthlyTrackerId,\r\n        form.control.get('remarks').value\r\n      )\r\n      .subscribe((response) => {\r\n        this.data.remarks = form.control.get('remarks').value;\r\n        this.monthlyTrackerService\r\n          .RevertMonthlyTracker(this.data)\r\n          .subscribe(() => {\r\n            this.emailService.revertMonthlyTracker(this.data).subscribe(\r\n              (response) => {\r\n                if (response === 'Email was Sent Successfully') {\r\n                  console.log('Sent email to ' + this.data.employeeEmail);\r\n                  this.showSpinner = false;\r\n                  this.matDialogRef.close();\r\n                }\r\n              },\r\n              (error) => {\r\n                console.log('Failed');\r\n                console.log(error);\r\n                this.showSpinner = false;\r\n                this.matDialogRef.close();\r\n              }\r\n            );\r\n          });\r\n      });\r\n  }\r\n}\r\n","<div class=\"spinner\" *ngIf=\"showSpinner\">\r\n    <mat-progress-spinner\r\n  [mode]=\"'indeterminate'\">\r\n  </mat-progress-spinner>   \r\n  </div>\r\n  \r\n<div class=\"dialog\">\r\n    <h2 mat-dialog-title>\r\n        Revert Monthly Tracker\r\n        \r\n    </h2>\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <p>\r\n            <mat-form-field appearance=\"outline\" class=\"email\">\r\n              <mat-label>Email</mat-label>\r\n              <input matInput placeholder=\"Email\" disabled [value]=\"emailId\">\r\n              <mat-icon matSuffix>mail</mat-icon>\r\n            </mat-form-field>\r\n        </p>\r\n        <form (ngSubmit)=\"onSubmit(form)\" #form=\"ngForm\">\r\n        <mat-icon class=\"mail\">outgoing_mail</mat-icon>\r\n        <p>\r\n            <mat-form-field appearance=\"outline\"  class=\"remarks\" class=\"remarks\">\r\n                <mat-label>Remarks /Body</mat-label>\r\n                <textarea matInput name=\"remarks\" ngModel></textarea>\r\n            </mat-form-field>\r\n        </p>\r\n        <button mat-flat-button color=\"primary\" type=\"submit\" class=\"send\" cdkFocusInitial>\r\n            <mat-icon>send</mat-icon>\r\n                Send Mail\r\n            </button>\r\n        </form>\r\n    \r\n    </mat-dialog-content>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}