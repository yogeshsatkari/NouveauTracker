{"version":3,"sources":["webpack:///src/app/service/email.service.ts","webpack:///src/app/component/add-program/add-program.component.ts","webpack:///src/app/component/add-program/add-program.component.html","webpack:///src/app/service/program.service.ts","webpack:///src/app/service/monthly-tracker.service.ts","webpack:///src/app/model/program-time.ts","webpack:///src/app/model/project-time.ts","webpack:///src/app/component/charts-folder/bar-chart/bar-chart.component.ts","webpack:///src/app/component/charts-folder/bar-chart/bar-chart.component.html","webpack:///src/app/component/charts-folder/doughnut-chart2/doughnut-chart2.component.ts","webpack:///src/app/component/charts-folder/doughnut-chart2/doughnut-chart2.component.html","webpack:///src/app/model/daily-tracker.ts","webpack:///src/app/component/view-program-manager/view-program-manager.component.ts","webpack:///src/app/component/view-program-manager/view-program-manager.component.html","webpack:///src/app/component/monthly-tracker-details/monthly-tracker-details.component.ts","webpack:///src/app/component/monthly-tracker-details/monthly-tracker-details.component.html","webpack:///src/app/component/monthly-tracker-details/dialog-content-example-dialog.html","webpack:///src/app/component/consolidated-view/consolidated-view.component.ts","webpack:///src/app/component/consolidated-view/consolidated-view.component.html","webpack:///src/app/component/time-tracker/time-tracker.component.ts","webpack:///src/app/component/time-tracker/time-tracker.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/component/project-card/project-card.component.ts","webpack:///src/app/component/project-card/project-card.component.html","webpack:///src/app/component/all-charts/all-charts.component.ts","webpack:///src/app/component/all-charts/all-charts.component.html","webpack:///src/app/component/add-project/add-project.component.ts","webpack:///src/app/component/add-project/add-project.component.html","webpack:///src/app/service/employee.service.ts","webpack:///src/app/model/monthly-tracker.ts","webpack:///src/app/component/snackbar/snackbar.component.ts","webpack:///src/app/component/snackbar/snackbar.component.html","webpack:///src/app/component/register-login/register-login.component.ts","webpack:///src/app/component/register-login/register-login.component.html","webpack:///src/app/component/calendar/calendar.component.ts","webpack:///src/app/component/calendar/calendar.component.html","webpack:///src/app/service/daily-tracker.service.ts","webpack:///src/app/component/leaves/leaves.component.ts","webpack:///src/app/component/leaves/leaves.component.html","webpack:///src/app/model/daily-tracker-model.ts","webpack:///src/app/component/add-program-members/add-program-members.component.ts","webpack:///src/app/component/add-program-members/add-program-members.component.html","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/component/consolidated-analytics/consolidated-analytics.component.ts","webpack:///src/app/component/consolidated-analytics/consolidated-analytics.component.html","webpack:///src/app/component/view-project-card/view-project-card.component.ts","webpack:///src/app/component/view-project-card/view-project-card.component.html","webpack:///src/app/model/log.ts","webpack:///src/app/component/charts-folder/bar-chart2/bar-chart2.component.ts","webpack:///src/app/component/charts-folder/bar-chart2/bar-chart2.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/component/missing-trackers/missing-trackers.component.ts","webpack:///src/app/component/missing-trackers/missing-trackers.component.html","webpack:///src/app/component/side-nav/side-nav.component.ts","webpack:///src/app/component/side-nav/side-nav.component.html","webpack:///src/app/guard/auth.guard.ts","webpack:///src/app/model/program-data.ts","webpack:///src/app/component/charts-folder/pie-chart/pie-chart.component.ts","webpack:///src/app/component/charts-folder/pie-chart/pie-chart.component.html","webpack:///src/app/component/nav-bar/nav-bar.component.ts","webpack:///src/app/component/nav-bar/nav-bar.component.html","webpack:///src/app/component/charts-folder/doughnut-chart/doughnut-chart.component.ts","webpack:///src/app/component/charts-folder/doughnut-chart/doughnut-chart.component.html","webpack:///src/app/component/profile/profile.component.ts","webpack:///src/app/component/profile/profile.component.html","webpack:///src/app/component/monthly-tracker/monthly-tracker.component.ts","webpack:///src/app/component/monthly-tracker/monthly-tracker.component.html","webpack:///src/app/component/program-card/program-card.component.ts","webpack:///src/app/component/program-card/program-card.component.html","webpack:///src/app/component/add-project-members/add-project-members.component.ts","webpack:///src/app/component/add-project-members/add-project-members.component.html","webpack:///src/app/model/employee-data.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/model/project-data.ts","webpack:///src/app/component/view-program-card/view-program-card.component.ts","webpack:///src/app/component/view-program-card/view-program-card.component.html","webpack:///src/app/component/monthly-tracker/dialog/dialog.component.ts","webpack:///src/app/component/monthly-tracker/dialog/dialog.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["EmailService","httpClient","requestBody","CustomEmailRequest","BASE_URL","CUSTOM_EMPLOYEE_EMAIL","monthlyTracker","to","employeeEmail","actionToBeTaken","remarks","month","monthName","subject","year","toString","post","responseType","providedIn","AddProgramComponent","formBuilder","programService","snackBar","employeeService","fileAttr","managersArray","addProgramForm","group","organizationName","required","programName","programType","programCode","costCode","customerId","managerEmailId","startDate","endDate","startTime","endTime","image","event","file","target","files","name","getAllProgramType","subscribe","response","patchValue","value","getTime","console","log","programData","FormData","append","JSON","stringify","addProgram","open","duration","horizontalPosition","verticalPosition","panelClass","reset","error","getEmployeesByRole","forEach","manager","emailId","push","getProgramTypes","getAllManagers","onFileUpload","saveProgram","selector","templateUrl","styleUrls","fileInput","ProgramService","http","baseUrl","programUrl","projectUrl","get","url","projectName","program","project","put","memberEmail","dateInMillis","managerEmail","programStatus","projectStatus","MonthlyTrackerService","MONTHLY_TRACKER","MONTHLY_TRACKERS","res","err","monthlyTrackerId","id","ProgramTime","time","ProjectTime","BarChartComponent","dailyTrackerService","programsArray","programChartData","role","window","localStorage","getItem","loggedEmail","getAllProgramHours","getAllProgramHoursByManagers","getAllProgramHoursByEmployee","myChart","type","data","labels","programChartLabel","datasets","label","backgroundColor","borderWidth","borderColor","hoverBorderWidth","hoverBorderColor","programChartDataHours","options","scales","yAxes","ticks","beginAtZero","responsive","title","display","text","padding","fontSize","legend","position","fontColor","layout","left","tooltips","displayColors","getAllActivePrograms","labelName","membersList","length","Object","keys","values","getAllProgramsHoursForManager","DoughnutChart2Component","projectsArray","doughnutChartLabel","doughnutChartData","getAllActiveprojects","getAllActiveProjects","LeaveType","DailyTracker","date","state","trackerId","logs","leaveType","NONE","currentDay","leaveHours","dayOfMonth","String","getDate","ViewProgramManagerComponent","dialog","lowValue","highValue","panelOpenState","showProgramSpinner","showProjectSpinner","organizationNameArray","Set","filterProgramForm","programDate","Date","filterProjectForm","projectDate","dialogForProgram","width","afterClosed","result","getAllPrograms","dialogForProject","getAllProjects","pageIndex","pageSize","programArray","add","getProgramsByManager","getAllActiveProgramsOnParticularDate","email","searchProgramData","searchPrograms","searchProgramDataManager","searchProgramsManager","projectArray","projectPaginatorLength","getProjectsByManager","getAllActiveProjectsOnParticularDate","searchProjectData","searchProjects","searchProjectDataManager","searchProjectManager","today","getAllProgramsByManager","getAllProjectsByManager","getProgramsByDateForEmployee","getProjectsByDateForEmployee","getPaginatorData","MonthlyTrackerDetailsComponent","apiService","api2","route","employeeName","dailyTrackers","snapshot","params","findMonthlyTrackerById","getTrackersForPeriod","dailyTracker","taskName","item","toDate","toDateString","dialogRef","DialogContentExampleDialog","dailog","projects","selflearnings","programs","filter","logType","hours","logHours","closeAll","close","ConsolidatedViewComponent","empService","dtService","progServ","yearlyReport","yearlyReportDownloaded","empData","progData","projData","displayedColumnsEmp","displayedColumnsProg","displayedColumnsProj","selectedValueYear","selectedValueYearProg","selectedValueYearProj","months","years","selectedValueMonth","getMonth","filterValue","dataSourceEmp","trim","toLowerCase","dataSourceProg","dataSourceProj","fetchAllDailyTrackers","getAllEmployees","empList","createEmployeeData","indexOf","getDailyTrackersForYear","getAllDailyTrackers","fetchAllEmployees","fromDateStr","toDateStr","getDailyTrackersForPeriod","emp","totalProgHrs","totalProjHrs","self_Learning_Hrs","uniqueProgList","uniqueProjList","trackersOfThisEmp","leaves","fullDayLeaveList","halfDayLeaveList","tracker","FULL_DAY","PROGRAM","found","i","PROJECT","found1","SELF_LEARNING","prog","proj","profileImage","fetchAllPrograms","fetchAllProjects","projList","dailyTrackersYear2","getProjectsForTheYear","organizationBrandLogo","createdOn","createProjectData","progList","dailyTrackersYear1","getProgramsForTheYear","createProgramData","yearStart","yearEnd","table","totalHours","memberFound","j","memberList","member","list","progName","progHours","employeeOnProgram","analyticsDataProg","barChartLabels","barChartData","barChartHeader","pieChartLabels","pieChartData","pieChartHeader","dialogConf","empName","progHrs","projHrs","slHrs","empObj","compProgHr","compProjHr","compSelfLearnHr","analyticsDataEmp","projName","projHours","employeeOnProject","analyticsDataProj","reportObj","projectHours","programHrs","selfLearningHours","_title","fieldSeparator","quoteStrings","decimalseparator","showLabels","showTitle","useBom","noDownload","headers","empDataObj","fullDayList","fullDayLeavesList","halfDayList","halfDayLeavesList","applyFilterEmp","downloadEmpReport","openAnalyticsEmp","applyFilterProg","downloadProgReport","openAnalyticsProg","applyFilterProj","downloadProjReport","openAnalyticsProj","TimeTrackerComponent","render","elem","_snackBar","_data","trackerApi","currentDate","hdStatus","HALF_DAY","programLogArray","projectLogArray","dayLogs","cardArray2","cardArray3","totalHoursOfDay","centered","disabled","unbounded","radius","color","logMsg","snackbarDurationSec","trackerCreated","slHourInit","slDetailsInit","selfStudyDetails","progTimeLogs","array","projTimeLogs","slDetails","slHours","createFormArray_NewTracker","createFormArray_TrackerExists","calTotalHoursOfDay","openFromComponent","leaveApplied","projTimeLogsArray","progTimeLogsArray","generateDaysLogs","element1","element2","updateLogData_LeaveStatus","totalHoursValid","generateTrackerId","saveTracker","createDailyTrackerForBackend","updateTracker","setStyle","openSnackbar","selfLearningLog","getActivePrograms","getActiveProjects","selfStudyLog","tempLog","temp","closeDialogue","submitDailyTracker","environment","production","ProjectCardComponent","sanitizer","getProjectDetails","stopPropagation","imageURL","bypassSecurityTrustResourceUrl","projectData","showProjectDetails","AllChartsComponent","AddProjectComponent","addProjectForm","projectCode","addProject","saveProject","EmployeeService","userAuthenticationBaseUrl","userEmployeeServiceBaseUrl","registerData","loginData","reqHeader","set","formData","MonthlyTracker","status","SnackbarComponent","RegisterLoginComponent","router","matIconRegistry","domSanitizer","googleLogoURL","hideLoginPassword","hideRegisterPassword","loginFormGroup","pattern","password","registerFormGroup","addSvgIcon","login","setItem","token","getEmployee","navigate","then","formGroupDirective","register","indexOfSelectedTab","resetForm","onLogin","onRegister","CalendarComponent","_fb","monthlyService","trackerListMonth","daysInMonth","firstDay","todaysDate","desiredDate","mSD","monthlySubmissionActive","allMonths","dailyTrackerForm","calendarDays","createMonthTrackers","checkIfMonthlySubmissionActive","startOf","weekday","unshift","dateStr","firstDayOfMonth","lastDayOfMonth","showCurrentDay","getAllTrackersFromDB","trackerListFromDB","dailyTrackerID","dialogConfig","disableClose","getFullYear","subtract","getDay","trackerMomemnt","currentMoment","isSameOrBefore","sum","checkTrackersLogStatus","mtFromDate","mtToDate","fromDate","missingTrackerArray","incompleteTrackerArray","iterator","logExists","logHoursEquals8","missing","incomplete","allTrackersComplete","newMonthlyId","monthlyTrackerMadeAlready","SubmitMonthlyTracker","saveMonthlyTracker","trackerList","getTotalLoggedHoursModel","mSubDateStr","subDate","isSameOrAfter","searchId","monthlySubmission","showPreviousMonth","showNextMonth","loadMonth","DailyTrackerService","start","end","paramObject","LeavesComponent","sort","a","b","DailyTrackerModel","AddProgramMembersComponent","separatorKeysCodes","memberCtrl","members","allMembers","filteredMembers","valueChanges","pipe","_filter","slice","index","input","setValue","option","viewValue","includes","membersArray","Array","from","addMembersToProgram","getEmployeesWorkingForAParticularManager","employee","selected","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","webpackContextKeys","resolve","module","exports","AppComponent","ConsolidatedAnalyticsComponent","barChartOptions","scaleShowVerticalLines","pieChartLegend","pieChartType","barChartLegend","barChartType","ViewProjectCardComponent","projectDetails","removeMembersFromProject","LogType","Log","BarChart2Component","projectService","projectChartData","getAllprojectHours","getAllProjectsHoursForManager","getAllProjectHoursByEmployee","projectChartLabel","projectChartDataHours","getAllProjectHours","AppModule","declarations","imports","providers","bootstrap","schemas","entryComponents","MissingTrackersComponent","missingDayList","incompleteDayList","missingCount","incompleteCount","SideNavComponent","AuthGuard","isLoggedInWithJwt","ProgramData","MemberHour","PieChartComponent","NavBarComponent","clear","logout","DoughnutChartComponent","ProfileComponent","uploadForm","emailid","updateUserProfileImage","location","reload","onSubmit","onFileSelect","MonthlyTrackerComponent","monthlyTrackerService","emailService","showSpinner","allmonths","thisMonth","thisYear","yearFilter","min","max","monthFilter","allTrackers","submittedTrackers","approvedTrackers","revertedTrackers","updateRecords","tabChangeEvent","updateOverview","milliseconds","ApproveMonthlyTracker","Response","openDialog","afterAllClosed","getAllMonthlyTrackers","s","tabGroup","selectedIndex","monthlyTrackers","records","reduce","tabChanged","ProgramCardComponent","getProgramDetails","showProgramDetails","AddProjectMembersComponent","addMembersToProject","EmployeeData","fulldayLeaveList","halfdayLeaveList","routes","path","component","canActivate","children","AppRoutingModule","forRoot","useHash","ProjectData","ViewProgramCardComponent","removeMembersFromProgram","programDetails","DialogComponent","matDialogRef","form","RemarkMonthlyTracker","control","RevertMonthlyTracker","revertMonthlyTracker","bootstrapModule","webpackEmptyAsyncContext","Promise"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Observable } from 'rxjs';\r\nimport { MonthlyTracker } from './../model/monthly-tracker';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EmailService {\r\n  requestBody: CustomEmailRequest = new CustomEmailRequest();\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n  BASE_URL = 'https://nouveautracker.stackroute.io/email-service/';\r\n  // BASE_URL = 'http://localhost:8080/email-service/';\r\n  CUSTOM_EMPLOYEE_EMAIL = 'sendemployeecustomemail/';\r\n\r\n  revertMonthlyTracker(monthlyTracker: MonthlyTracker): Observable<string> {\r\n    this.requestBody.to = monthlyTracker.employeeEmail;\r\n    this.requestBody.actionToBeTaken = monthlyTracker.remarks;\r\n    this.requestBody.month = monthlyTracker.monthName;\r\n    this.requestBody.subject =\r\n      'REVERTED: Monthly Tracker for ' +\r\n      monthlyTracker.monthName +\r\n      ' ' +\r\n      monthlyTracker.year;\r\n    this.requestBody.year = monthlyTracker.year.toString();\r\n    return this.httpClient.post(\r\n      this.BASE_URL + this.CUSTOM_EMPLOYEE_EMAIL,\r\n      this.requestBody,\r\n      { responseType: 'text' }\r\n    );\r\n  }\r\n}\r\nexport class CustomEmailRequest {\r\n  to: string;\r\n  subject: string;\r\n  year: string;\r\n  month: string;\r\n  actionToBeTaken: string;\r\n}\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { EmployeeService } from 'src/app/service/employee.service';\r\nimport { ProgramService } from 'src/app/service/program.service';\r\nimport { ViewProgramManagerComponent } from '../view-program-manager/view-program-manager.component';\r\n\r\n@Component({\r\n  selector: 'app-add-program',\r\n  templateUrl: './add-program.component.html',\r\n  styleUrls: ['./add-program.component.css'],\r\n})\r\nexport class AddProgramComponent implements OnInit {\r\n  addProgramForm: FormGroup;\r\n  file: File;\r\n  viewProgram: ViewProgramManagerComponent;\r\n\r\n  @ViewChild('fileInput') fileInput: ElementRef;\r\n  fileAttr = 'Choose File';\r\n\r\n  programType: any;\r\n\r\n  managersArray = [];\r\n\r\n  constructor(\r\n    formBuilder: FormBuilder,\r\n    private programService: ProgramService,\r\n    private snackBar: MatSnackBar,\r\n    private employeeService: EmployeeService\r\n  ) {\r\n    this.addProgramForm = formBuilder.group({\r\n      organizationName: new FormControl('', Validators.required),\r\n      programName: new FormControl('', Validators.required),\r\n      programType: new FormControl('', Validators.required),\r\n      programCode: new FormControl('', Validators.required),\r\n      costCode: new FormControl('', Validators.required),\r\n      customerId: new FormControl('', Validators.required),\r\n      managerEmailId: new FormControl('', Validators.required),\r\n      startDate: new FormControl(Validators.required),\r\n      endDate: new FormControl(Validators.required),\r\n      startTime: new FormControl('', Validators.required),\r\n      endTime: new FormControl('', Validators.required),\r\n      image: new FormControl('', Validators.required),\r\n    });\r\n  }\r\n\r\n  onFileUpload(event: any): void {\r\n    this.file = event.target.files[0];\r\n    this.fileAttr = event.target.files[0].name;\r\n  }\r\n\r\n  getProgramTypes(): void {\r\n    this.programService.getAllProgramType().subscribe((response) => {\r\n      this.programType = response;\r\n    });\r\n  }\r\n\r\n  saveProgram(): void {\r\n    this.addProgramForm.patchValue({\r\n      startDate: this.addProgramForm.value.startDate.getTime(),\r\n      endDate: this.addProgramForm.value.endDate.getTime()\r\n    })\r\n\r\n    console.log(this.addProgramForm.value);\r\n\r\n    const programData: FormData = new FormData();\r\n\r\n    programData.append('image', this.file, this.file.name);\r\n    programData.append('program', JSON.stringify(this.addProgramForm.value));\r\n\r\n    this.programService.addProgram(programData).subscribe(\r\n      (response) => {\r\n        this.snackBar.open('Program Created Successfully.', '', {\r\n          duration: 5000,\r\n          horizontalPosition: 'center',\r\n          verticalPosition: 'top',\r\n          panelClass: ['mat-toolbar', 'mat-primary']\r\n        });\r\n\r\n        this.addProgramForm.reset();\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        this.snackBar.open('Some error occured while adding Program.', '', {\r\n          duration: 5000,\r\n          horizontalPosition: 'center',\r\n          verticalPosition: 'top',\r\n          panelClass: ['mat-toolbar', 'mat-warn']\r\n        });\r\n\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  getAllManagers(): void {\r\n    this.employeeService.getEmployeesByRole('MANAGER').subscribe((response) => {\r\n      response.forEach(manager => {\r\n        console.log(manager.emailId);\r\n        this.managersArray.push(manager.emailId);\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getProgramTypes();\r\n    this.getAllManagers();\r\n  }\r\n}\r\n","<div mat-dialog-title class=\"flex-container\">\r\n  <h1 mat-dialog-title>Create New Program</h1>\r\n  <span class=\"example-spacer\"></span>\r\n  <mat-icon [mat-dialog-close]=\"true\" matTooltip=\"Close\">close</mat-icon>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <form class=\"example-form\" [formGroup]=\"addProgramForm\">\r\n    <div fxLayout=\"column\" fxFlex=\"100%\">\r\n      <div fxLayout=\"row\" fxLayoutGap=\"2%\" fxLayout.xs=\"column\">\r\n        <mat-form-field\r\n          class=\"example-full-width\"\r\n          fxFlex=\"50%\"\r\n          appearance=\"outline\"\r\n        >\r\n          <mat-label>Program Name</mat-label>\r\n          <input\r\n            matInput\r\n            #programName\r\n            formControlName=\"programName\"\r\n            maxlength=\"20\"\r\n            required\r\n          />\r\n          <mat-hint align=\"end\"\r\n            >{{ programName.value?.length || 0 }}/20</mat-hint\r\n          >\r\n        </mat-form-field>\r\n        <mat-form-field\r\n          class=\"example-full-width\"\r\n          fxFlex=\"50%\"\r\n          appearance=\"outline\"\r\n        >\r\n          <mat-label>Program Type</mat-label>\r\n          <mat-select formControlName=\"programType\" required>\r\n            <mat-option *ngFor=\"let type of programType\" [value]=\"type\">{{\r\n              type\r\n            }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutGap=\"2%\" fxLayout.xs=\"column\">\r\n        <mat-form-field\r\n          class=\"example-full-width\"\r\n          appearance=\"outline\"\r\n          fxFlex=\"50%\"\r\n        >\r\n          <mat-label>Organization Name</mat-label>\r\n          <input\r\n            matInput\r\n            formControlName=\"organizationName\"\r\n            #organizationName\r\n            maxlength=\"15\"\r\n            required\r\n          />\r\n          <mat-hint align=\"end\"\r\n            >{{ organizationName.value?.length || 0 }}/15</mat-hint\r\n          >\r\n        </mat-form-field>\r\n\r\n        <div fxFlex=\"50%\">\r\n          <label>Organization Logo </label>\r\n          <br />\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            formControlName=\"image\"\r\n            (change)=\"onFileUpload($event)\"\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutGap=\"2%\" fxLayout.xs=\"column\">\r\n        <mat-form-field\r\n          class=\"example-full-width\"\r\n          appearance=\"outline\"\r\n          fxFlex=\"50%\"\r\n        >\r\n          <mat-label>Manager Email Id</mat-label>\r\n          <mat-select formControlName=\"managerEmailId\" required>\r\n            <mat-option\r\n              *ngFor=\"let manager of managersArray\"\r\n              [value]=\"manager\"\r\n              >{{ manager }}</mat-option\r\n            >\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field\r\n          class=\"example-full-width\"\r\n          appearance=\"outline\"\r\n          fxFlex=\"50%\"\r\n        >\r\n          <mat-label>Enter Date Range for Program</mat-label>\r\n          <mat-date-range-input [rangePicker]=\"picker\">\r\n            <input\r\n              matStartDate\r\n              placeholder=\"Start date\"\r\n              formControlName=\"startDate\"\r\n              required\r\n            />\r\n            <input\r\n              matEndDate\r\n              placeholder=\"End date\"\r\n              formControlName=\"endDate\"\r\n              required\r\n            />\r\n          </mat-date-range-input>\r\n          <mat-hint>MM/DD/YYYY – MM/DD/YYYY</mat-hint>\r\n          <mat-datepicker-toggle\r\n            matSuffix\r\n            [for]=\"picker\"\r\n          ></mat-datepicker-toggle>\r\n          <mat-date-range-picker #picker></mat-date-range-picker>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutGap=\"2%\" fxLayout.xs=\"column\">\r\n        <mat-form-field\r\n          class=\"example-full-width\"\r\n          appearance=\"outline\"\r\n          fxFlex=\"50%\"\r\n        >\r\n          <mat-label>Daily Start Time</mat-label>\r\n          <input type=\"time\" matInput formControlName=\"startTime\" required />\r\n          <mat-icon matSuffix>alarm</mat-icon>\r\n        </mat-form-field>\r\n        <mat-form-field\r\n          class=\"example-full-width\"\r\n          appearance=\"outline\"\r\n          fxFlex=\"50%\"\r\n        >\r\n          <mat-label>Daily End Time</mat-label>\r\n          <input type=\"time\" matInput formControlName=\"endTime\" required />\r\n          <mat-icon matSuffix>alarm</mat-icon>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutGap=\"2%\" fxLayout.xs=\"column\">\r\n        <mat-form-field\r\n          class=\"example-full-width\"\r\n          appearance=\"outline\"\r\n          fxFlex=\"33%\"\r\n        >\r\n          <mat-label>Customer Code</mat-label>\r\n          <input matInput formControlName=\"customerId\" required type=\"number\" />\r\n        </mat-form-field>\r\n        <mat-form-field\r\n          class=\"example-full-width\"\r\n          appearance=\"outline\"\r\n          fxFlex=\"33%\"\r\n          required\r\n        >\r\n          <mat-label>Cost Code</mat-label>\r\n          <input matInput formControlName=\"costCode\" required type=\"number\" />\r\n        </mat-form-field>\r\n        <mat-form-field\r\n          class=\"example-full-width\"\r\n          appearance=\"outline\"\r\n          fxFlex=\"33%\"\r\n        >\r\n          <mat-label>Program Code</mat-label>\r\n          <input\r\n            matInput\r\n            formControlName=\"programCode\"\r\n            required\r\n            type=\"number\"\r\n          />\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions align=\"end\">\r\n  <button (click)=\"addProgramForm.reset()\" mat-raised-button>Reset</button>\r\n  <button\r\n    (click)=\"saveProgram()\"\r\n    [mat-dialog-close]=\"true\"\r\n    [disabled]=\"!addProgramForm.valid\"\r\n    color=\"primary\"\r\n    mat-flat-button\r\n  >\r\n    Create\r\n  </button>\r\n</mat-dialog-actions>\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProgramService {\r\n\r\n  baseUrl = 'https://nouveautracker.stackroute.io/program-service/api/v1/';\r\n  // baseUrl = 'http://localhost:8080/program-service/api/v1/';\r\n  programUrl = this.baseUrl + 'program';\r\n  projectUrl = this.baseUrl + 'project';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllPrograms(): Observable<any> {\r\n    return this.http.get(this.baseUrl + '/programs');\r\n  }\r\n\r\n  getAllProjects(): Observable<any> {\r\n    return this.http.get(this.baseUrl + '/projects');\r\n  }\r\n\r\n  getProgramDetails(programName: string): Observable<any> {\r\n    const url = this.programUrl + '/' + programName;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getProjectDetails(projectName: string): Observable<any> {\r\n    const url = this.projectUrl + '/' + projectName;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  addProgram(program: any): Observable<any> {\r\n    return this.http.post(this.programUrl, program);\r\n  }\r\n\r\n  addProject(project: any): Observable<any> {\r\n    return this.http.post(this.projectUrl, project);\r\n  }\r\n\r\n  addMembersToProgram(program: any, programName: string): Observable<any> {\r\n    console.log(\"hola\");\r\n    console.log(program);\r\n    const url = this.programUrl + '/member/' + programName;\r\n    return this.http.put(url, program);\r\n  }\r\n\r\n  addMembersToProject(project: any, projectName: string): Observable<any> {\r\n    const url = this.projectUrl + '/member/' + projectName;\r\n    return this.http.put(url, project);\r\n  }\r\n\r\n  getAllActiveProgramsOnParticularDate(memberEmail: string, dateInMillis: number): Observable<any> {\r\n    const url = this.baseUrl + '/programs' + '/member/' + memberEmail + '/' + dateInMillis;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getAllActiveProjectsOnParticularDate(memberEmail: string, dateInMillis: number): Observable<any> {\r\n    const url = this.baseUrl + '/projects' + '/member/' + memberEmail + '/' + dateInMillis;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getProgramsByManager(managerEmail: string): Observable<any> {\r\n    const url = this.baseUrl + '/programs' + '/manager/' + managerEmail;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getProjectsByManager(managerEmail: string): Observable<any> {\r\n    const url = this.baseUrl + '/projects' + '/manager/' + managerEmail;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  removeMembersFromProgram(programName: string, memberEmail: string): Observable<any> {\r\n    const url = this.programUrl + '/member/' + programName + '/' + memberEmail;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  removeMembersFromProject(projectName: string, memberEmail: string): Observable<any> {\r\n    const url = this.projectUrl + '/member/' + projectName + '/' + memberEmail;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getAllProgramType() {\r\n    const url = this.baseUrl + '/programtype';\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getAllActivePrograms(programStatus): Observable<any> {\r\n\r\n    const url = this.programUrl + '/status/' + programStatus;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getAllActiveProjects(projectStatus: string): Observable<any> {\r\n    const url = this.projectUrl + '/status/' + projectStatus;\r\n    return this.http.get(url);\r\n  }\r\n\r\n\r\n  searchPrograms(program: any): Observable<any> {\r\n    const url = this.baseUrl + '/programs/search';\r\n    return this.http.post(url, program);\r\n  }\r\n\r\n  searchProjects(project: any): Observable<any> {\r\n    const url = this.baseUrl + '/projects/search';\r\n    return this.http.post(url, project);\r\n  }\r\n\r\n  searchProgramsManager(program: any): Observable<any> {\r\n    const url = this.baseUrl + '/programs/manager/search';\r\n    return this.http.post(url, program);\r\n  }\r\n\r\n  searchProjectManager(project: any): Observable<any> {\r\n    const url = this.baseUrl + '/projects/manager/search';\r\n    return this.http.post(url, project);\r\n  }\r\n\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { MonthlyTracker } from '../model/monthly-tracker';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MonthlyTrackerService {\r\n  constructor(private httpClient: HttpClient) {}\r\n  BASE_URL = 'https://nouveautracker.stackroute.io/monthly-tracker-service/api/v1/';\r\n  // BASE_URL = 'http://localhost:8080/monthly-tracker-service/api/v1/';\r\n  MONTHLY_TRACKER = 'monthlytracker';\r\n  MONTHLY_TRACKERS = 'filtermonthlytrackers';\r\n\r\n  saveMonthlyTracker(monthlyTracker: MonthlyTracker): void {\r\n    this.httpClient.post<MonthlyTracker>(\r\n      this.BASE_URL + this.MONTHLY_TRACKER,\r\n      monthlyTracker\r\n    ).subscribe(res=>console.log(\"Result of MT save,\",res),err=>console.log(\"error while saving MT\",err));\r\n  }\r\n\r\n  getAllMonthlyTrackers(\r\n    month: string,\r\n    year: number\r\n  ): Observable<MonthlyTracker[]> {\r\n    console.log(month);\r\n\r\n    return this.httpClient.get<MonthlyTracker[]>(\r\n      this.BASE_URL +\r\n        this.MONTHLY_TRACKERS +\r\n        '?month=' +\r\n        month +\r\n        '&year=' +\r\n        year\r\n    );\r\n  }\r\n  ApproveMonthlyTracker(monthlyTracker: MonthlyTracker): Observable<string> {\r\n    return this.httpClient.put(\r\n      this.BASE_URL +\r\n        this.MONTHLY_TRACKER +\r\n        '?id=' +\r\n        monthlyTracker.monthlyTrackerId +\r\n        '&status=' +\r\n        'COMPLETED',\r\n      monthlyTracker,\r\n      { responseType: 'text' }\r\n    );\r\n  }\r\n  RevertMonthlyTracker(monthlyTracker: MonthlyTracker): Observable<string> {\r\n    return this.httpClient.put(\r\n      this.BASE_URL +\r\n        this.MONTHLY_TRACKER +\r\n        '?id=' +\r\n        monthlyTracker.monthlyTrackerId +\r\n        '&status=' +\r\n        'REVERTED',\r\n      monthlyTracker,\r\n      { responseType: 'text' }\r\n    );\r\n  }\r\n\r\n  SubmitMonthlyTracker(monthlyTracker: MonthlyTracker): Observable<string> {\r\n    return this.httpClient.put(\r\n      this.BASE_URL +\r\n        this.MONTHLY_TRACKER +\r\n        '?id=' +\r\n        monthlyTracker.monthlyTrackerId +\r\n        '&status=' +\r\n        'SUBMITTED',\r\n      monthlyTracker,\r\n      { responseType: 'text' }\r\n    );\r\n  }\r\n  findMonthlyTrackerById(id: string): Observable<MonthlyTracker> {\r\n    return this.httpClient.get<MonthlyTracker>(\r\n      this.BASE_URL + this.MONTHLY_TRACKER + '?monthlyTrackerID=' + id\r\n    );\r\n  }\r\n\r\n  RemarkMonthlyTracker(\r\n    monthlyTrackerId: string,\r\n    remarks: string\r\n  ): Observable<string> {\r\n    return this.httpClient.put(\r\n      this.BASE_URL +\r\n        this.MONTHLY_TRACKER +\r\n        '/revert' +\r\n        '?id=' +\r\n        monthlyTrackerId +\r\n        '&remarks=' +\r\n        remarks,\r\n      null,\r\n      { responseType: 'text' }\r\n    );\r\n  }\r\n}\r\n","export class ProgramTime {\r\n    program:string;\r\n    time:number;\r\n\r\n    constructor(program:string,time:number){\r\n        this.program=program;\r\n        this.time=time;\r\n        \r\n    }\r\n}\r\n","export class ProjectTime {\r\n    project:string;\r\n    time:number;\r\n\r\n    constructor(project:string,time:number){\r\n        this.project=project;\r\n        this.time=time;\r\n        \r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport * as Chart from 'chart.js';\r\nimport { DailyTrackerService } from 'src/app/service/daily-tracker.service';\r\nimport { ProgramService } from 'src/app/service/program.service';\r\n\r\n@Component({\r\n  selector: 'app-bar-chart',\r\n  templateUrl: './bar-chart.component.html',\r\n  styleUrls: ['./bar-chart.component.css']\r\n})\r\nexport class BarChartComponent implements OnInit {\r\n\r\n  public role: string;\r\n  public loggedEmail: string;\r\n  public programsArray = [];\r\n  public programChartLabel: any;\r\n  public programChartData = [];\r\n  public programChartDataHours: any;\r\n  constructor(private programService: ProgramService,\r\n              private dailyTrackerService: DailyTrackerService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.role = window.localStorage.getItem('role');\r\n    this.loggedEmail = window.localStorage.getItem('tgt_email');\r\n    switch(this.role) {\r\n      case 'OPERATIONS': {\r\n        // this.getAllActivePrograms();\r\n        this.getAllProgramHours();\r\n        break;\r\n      }\r\n      case 'MANAGER': {\r\n        this.getAllProgramHoursByManagers();\r\n        break;\r\n      }\r\n      case 'EMPLOYEE': {                      \r\n        this.getAllProgramHoursByEmployee();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  myChart(): void{\r\n    const myChart = new Chart('myChart', {\r\n      type: 'bar',\r\n      data: {\r\n          labels: this.programChartLabel,\r\n          datasets: [{\r\n              label: 'Number of employees',\r\n              data: this.programChartData,\r\n              backgroundColor: 'lightpink',\r\n              borderWidth: 1,\r\n              borderColor: '#777',\r\n              hoverBorderWidth: 1,\r\n              hoverBorderColor: '#000'\r\n            },\r\n            {\r\n              label: 'Total working hours',\r\n              // data: this.programChartData,\r\n              data: this.programChartDataHours,\r\n              backgroundColor: 'cornflowerblue',\r\n              borderWidth: 1,\r\n              borderColor: '#777',\r\n              hoverBorderWidth: 1,\r\n              hoverBorderColor: '#000'\r\n            }\r\n          ]\r\n      },\r\n      options: {\r\n        scales: {\r\n          yAxes: [{\r\n              ticks: {\r\n                  beginAtZero: true\r\n              }\r\n          }]\r\n        },\r\n        // scaleShowVerticalLines: false,\r\n        responsive: true,\r\n        title: {\r\n          display: true,\r\n          text: 'External Programs (active)',\r\n          padding: 20,\r\n          fontSize: 22,\r\n        },\r\n        legend: {\r\n          position: 'top',                  // comment and show\r\n          labels: {\r\n            fontColor: '#777',\r\n            fontSize: 13\r\n          }\r\n        },\r\n        layout: {\r\n          padding: {\r\n            left: 50\r\n          }\r\n        },\r\n        tooltips: {\r\n          displayColors: false\r\n        }\r\n      }\r\n  });\r\n  }\r\n\r\n  getAllActivePrograms(): void {\r\n    this.programService.getAllActivePrograms('ACTIVE').subscribe(\r\n      response => {\r\n        console.log(response);\r\n        this.programsArray = response;\r\n        this.programChartLabel.forEach(labelName => {\r\n          this.programsArray.forEach(program => {\r\n            if(labelName===program.programName) {\r\n                this.programChartData.push(program.membersList.length);\r\n            }\r\n          })\r\n        });\r\n              this.myChart();                 // everything should load at once\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  //////////////////////////////////////////\r\n\r\n  getAllProgramHours(): void {\r\n    this.dailyTrackerService.getAllProgramHours().subscribe(\r\n      response => {\r\n        console.log(\"All program with hours\");\r\n        console.log(response);\r\n        this.programChartLabel = Object.keys(response);\r\n        this.programChartDataHours = Object.values(response);\r\n        this.getAllActivePrograms();\r\n        // this.myChart();\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n//////////////////////////////////////////////\r\n\r\n  getAllProgramHoursByEmployee(): void {\r\n    this.dailyTrackerService.getAllProgramHoursByEmployee(this.loggedEmail).subscribe(\r\n      response => {\r\n        console.log(\"All program with hours\");\r\n        console.log(response);\r\n        this.programChartLabel = Object.keys(response);\r\n        this.programChartDataHours = Object.values(response);\r\n        this.getAllActivePrograms();\r\n        // this.myChart();\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n//////////////////////////////////////////////\r\n\r\ngetAllProgramHoursByManagers(): void {\r\n  this.dailyTrackerService.getAllProgramsHoursForManager(this.loggedEmail).subscribe(\r\n    response => {\r\n      console.log(\"All program with hours\");\r\n      console.log(response);\r\n      this.programChartLabel = Object.keys(response);\r\n      this.programChartDataHours = Object.values(response);\r\n      this.getAllActivePrograms();\r\n      // this.myChart();\r\n    },\r\n    error => {\r\n      console.log(error);\r\n    }\r\n  );\r\n}\r\n\r\n}\r\n","<!-- *ngIf=\"role==='OPERATIONS'\" -->\r\n<div  style=\"display: block; \">          \r\n    <div id=\"divChart\">\r\n        <canvas id=\"myChart\"></canvas>\r\n    </div>\r\n</div>\r\n\r\n<!-- <div style=\"display: block; \">\r\n    <div id=\"divChart\">\r\n        <canvas id=\"myChart1\"></canvas>\r\n    </div>\r\n</div> -->\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport * as Chart from 'chart.js';\r\nimport { ProgramService } from 'src/app/service/program.service';\r\n\r\n@Component({\r\n  selector: 'app-doughnut-chart2',\r\n  templateUrl: './doughnut-chart2.component.html',\r\n  styleUrls: ['./doughnut-chart2.component.css']\r\n})\r\nexport class DoughnutChart2Component implements OnInit {\r\n\r\n  public projectsArray = [];\r\n  public doughnutChartLabel = [];\r\n  public doughnutChartData = [];\r\n  constructor(private programService: ProgramService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllActiveprojects();\r\n  }\r\n\r\n  myChart(): void{\r\n    const myChart = new Chart('myChart', {\r\n      type: 'doughnut',\r\n      data: {\r\n          labels: this.doughnutChartLabel,\r\n          datasets: [{\r\n              label: 'No. of employees',\r\n              data: this.doughnutChartData,\r\n              backgroundColor: [\r\n                'cornflowerblue',\r\n                'olivedrab',\r\n                'orange',\r\n                'tomato',\r\n                'crimson',\r\n                'purple',\r\n                'turquoise',\r\n                'forestgreen',\r\n                'navy',\r\n                '#455a64',\r\n                'rgba(255, 220, 129, 0.2)',\r\n                'rgba(200, 181, 199, 0.2)',\r\n                'rgba(193, 226, 206, 0.2)',\r\n                'rgba(201, 193, 226, 0.2)',\r\n                'rgba(175, 201, 195, 0.2)',\r\n                'rgba(253, 222, 166, 0.2)',\r\n                'rgba(216, 156, 218, 0.2)',\r\n                'rgba(154, 215, 209, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(216, 181, 173, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(154, 198, 215, 0.2)',\r\n                'rgba(208, 232, 191, 0.2)'\r\n              ],\r\n              // hoverOffset: 4,\r\n              borderWidth: 1,\r\n              borderColor: '#fff',\r\n              hoverBorderWidth: 2,\r\n              hoverBorderColor: '#fff'\r\n          }]\r\n      },\r\n      options: {\r\n        title: {\r\n          display: true,\r\n          text: 'Employee Distribution (Active projects)',\r\n          padding: 20,\r\n          fontSize: 25,\r\n        },\r\n        legend: {\r\n          position: 'right',                  // comment and show\r\n          labels: {\r\n            fontColor: '#000',\r\n          }\r\n        },\r\n        layout: {\r\n          padding: {\r\n            left: 100\r\n          }\r\n        },\r\n        tooltips: {\r\n          displayColors: false\r\n        }\r\n      }\r\n  });\r\n  }\r\n\r\n  getAllActiveprojects(): void {\r\n    this.programService.getAllActiveProjects('ACTIVE').subscribe(\r\n      response => {\r\n        this.projectsArray = response;\r\n        console.log(response);\r\n        this.projectsArray.forEach(project => {\r\n          this.doughnutChartLabel.push(project.projectName);\r\n          this.doughnutChartData.push(project.membersList.length);\r\n        });\r\n        this.myChart();\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<div style=\"display: block; \">\r\n    <div id=\"divChart\">\r\n        <canvas id=\"myChart\"></canvas>\r\n    </div>\r\n</div>\r\n","import { ListKeyManager } from '@angular/cdk/a11y';\r\nimport { Log } from './log';\r\nexport enum LeaveType {\r\n  FULL_DAY = 'FULLDAY',\r\n  HALF_DAY = 'HALF_DAY',\r\n  NONE = 'NONE',\r\n}\r\nexport class DailyTracker {\r\n    trackerId = '';\r\n    dayOfMonth: string;\r\n    date: Date;\r\n    employeeEmail: String = '';\r\n    logs: Log[] = [];\r\n    leaveType: LeaveType = LeaveType.NONE;\r\n    remarks = '';\r\n    state = false; // show whether the tracker is available for edit or not\r\n    currentDay = false; // this attribute tells whther this daily tracker is current day of the calendar or not.it will always be false, except for 1 day when it matches the current calendar date\r\n    leaveHours = 0;\r\n\r\n    constructor(date: Date, state: boolean){\r\n        this.state = state;\r\n        this.date = date;\r\n        if (this.state){this.dayOfMonth = String(this.date.getDate()); }\r\n        else{this.dayOfMonth = ''; }\r\n    \r\n\r\n    }\r\n  }\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ProgramService } from '../../service/program.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AddProgramComponent } from '../add-program/add-program.component';\r\nimport { AddProjectComponent } from '../add-project/add-project.component';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { ViewProgramCardComponent } from '../view-program-card/view-program-card.component';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { EmployeeService } from 'src/app/service/employee.service';\r\n\r\n@Component({\r\n  selector: 'app-view-program-manager',\r\n  templateUrl: './view-program-manager.component.html',\r\n  styleUrls: ['./view-program-manager.component.css'],\r\n})\r\n\r\nexport class ViewProgramManagerComponent implements OnInit {\r\n  length: number;\r\n  pageEvent: PageEvent;\r\n\r\n  projectPaginatorLength: number;\r\n\r\n  lowValue = 0;\r\n  highValue = 8;\r\n\r\n  panelOpenState = false;\r\n\r\n  programArray: any;\r\n  projectArray: any;\r\n  role: string;\r\n\r\n  showProgramSpinner = true;\r\n  showProjectSpinner = true;\r\n\r\n  filterProgramForm: FormGroup;\r\n  filterProjectForm: FormGroup;\r\n\r\n  managersArray = [];\r\n  organizationNameArray = new Set();\r\n\r\n  constructor(\r\n    private programService: ProgramService,\r\n    private dialog: MatDialog,\r\n    private formBuilder: FormBuilder,\r\n    private employeeService: EmployeeService\r\n  ) {\r\n    this.role = '';\r\n\r\n    this.filterProgramForm = formBuilder.group({\r\n      organizationName: new FormControl(),\r\n      programName: new FormControl(),\r\n      programDate: new FormControl(new Date()),\r\n      managerEmailId: new FormControl(),\r\n      programStatus: new FormControl('ACTIVE')\r\n    })\r\n\r\n    this.filterProjectForm = formBuilder.group({\r\n      organizationName: new FormControl(),\r\n      projectName: new FormControl(),\r\n      projectDate: new FormControl(new Date()),\r\n      managerEmailId: new FormControl(),\r\n      projectStatus: new FormControl('ACTIVE')\r\n    })\r\n\r\n  }\r\n\r\n  showProgramDetails(programName: string): void {\r\n    console.log(programName);\r\n    this.dialog.open(ViewProgramCardComponent);\r\n  }\r\n\r\n\r\n  openAddProgramDialog(): void {\r\n    const dialogForProgram = this.dialog.open(AddProgramComponent, {\r\n      width: '900px',\r\n    });\r\n    dialogForProgram.afterClosed().subscribe(result => {\r\n      console.log(result);\r\n      this.showProgramSpinner = true;\r\n      this.getAllPrograms();\r\n    });\r\n  }\r\n\r\n  openAddProjectDialog(): void {\r\n    const dialogForProject = this.dialog.open(AddProjectComponent, {\r\n      width: '900px',\r\n    });\r\n\r\n\r\n    dialogForProject.afterClosed().subscribe(result => {\r\n      console.log(result);\r\n\r\n      this.getAllProjects();\r\n    });\r\n  }\r\n\r\n  getPaginatorData(event: PageEvent): PageEvent {\r\n    this.lowValue = event.pageIndex * event.pageSize;\r\n    this.highValue = this.lowValue + event.pageSize;\r\n    return event;\r\n  }\r\n\r\n  getAllPrograms(): void {\r\n\r\n    this.programService.getAllPrograms().subscribe((response) => {\r\n      console.log(response);\r\n\r\n      this.programArray = response;\r\n      this.length = this.programArray.length;\r\n      this.showProgramSpinner = false;\r\n      console.log(this.programArray);\r\n\r\n      response.forEach(program => {\r\n        this.organizationNameArray.add(program.organizationName); \r\n      })\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  getAllProgramsByManager(managerEmail: string): void {\r\n    this.programService.getProgramsByManager(managerEmail).subscribe((response) => {\r\n      console.log(response);\r\n\r\n      this.programArray = response;\r\n      this.length = this.programArray.length;\r\n      this.showProgramSpinner = false;\r\n\r\n      response.forEach(program => {\r\n        this.organizationNameArray.add(program.organizationName);\r\n      })\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  getProgramsByDateForEmployee(employeeEmail: string, dateInMillis: number): void {\r\n    this.programService.getAllActiveProgramsOnParticularDate(employeeEmail, dateInMillis).subscribe((response) => {\r\n      console.log(response);\r\n\r\n      this.programArray = response;\r\n      this.length = this.programArray.length;\r\n      this.showProgramSpinner = false;\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  filterPrograms(): void {\r\n    this.role = window.localStorage.getItem('role');\r\n    const email = window.localStorage.getItem('tgt_email');\r\n\r\n    switch (this.role) {\r\n\r\n      case 'OPERATIONS':\r\n        const searchProgramData: FormData = new FormData();\r\n        searchProgramData.append('program', JSON.stringify(this.filterProgramForm.value));\r\n\r\n        if (this.filterProgramForm.value.programDate != null) {\r\n          searchProgramData.append('date', JSON.stringify(this.filterProgramForm.value.programDate.getTime()));\r\n        }\r\n\r\n        this.programService.searchPrograms(searchProgramData).subscribe((result) => {\r\n          this.programArray = result;\r\n        })\r\n        break;\r\n\r\n      case 'MANAGER':\r\n        const searchProgramDataManager: FormData = new FormData();\r\n\r\n        searchProgramDataManager.append('program', JSON.stringify(this.filterProgramForm.value));\r\n        searchProgramDataManager.append('manager', email);\r\n\r\n        if (this.filterProgramForm.value.programDate != null) {\r\n          searchProgramDataManager.append('date', JSON.stringify(this.filterProgramForm.value.programDate.getTime()));\r\n        }\r\n\r\n        this.programService.searchProgramsManager(searchProgramDataManager).subscribe((result) => {\r\n          this.programArray = result;\r\n        })\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  resetFilterProgramForm(): void {\r\n    this.filterProgramForm.reset();\r\n    this.getAllPrograms();\r\n  }\r\n\r\n  getAllManagers(): void {\r\n    this.employeeService.getEmployeesByRole('MANAGER').subscribe((response) => {\r\n      response.forEach(manager => {\r\n        console.log(manager.emailId);\r\n        this.managersArray.push(manager.emailId);\r\n      });\r\n    });\r\n  }\r\n\r\n  getAllProjects(): void {\r\n    this.programService.getAllProjects().subscribe((response) => {\r\n      this.projectArray = response;\r\n      this.projectPaginatorLength = this.projectArray.length;\r\n      console.log(this.projectArray);\r\n      this.showProjectSpinner = false;\r\n    });\r\n  }\r\n\r\n  getAllProjectsByManager(managerEmail: string): void {\r\n    this.programService.getProjectsByManager(managerEmail).subscribe((response) => {\r\n      console.log(response);\r\n\r\n      this.projectArray = response;\r\n      this.projectPaginatorLength = this.projectArray.length;\r\n      this.showProjectSpinner = false;\r\n    });\r\n  }\r\n\r\n  getProjectsByDateForEmployee(employeeEmail: string, dateInMillis: number): void {\r\n    this.programService.getAllActiveProjectsOnParticularDate(employeeEmail, dateInMillis).subscribe((response) => {\r\n      console.log(response);\r\n\r\n      this.projectArray = response;\r\n      this.projectPaginatorLength = this.projectArray.length;\r\n      this.showProjectSpinner = false;\r\n    });\r\n  }\r\n\r\n  filterProjects(): void {\r\n    this.role = window.localStorage.getItem('role');\r\n    const email = window.localStorage.getItem('tgt_email');\r\n\r\n    switch (this.role) {\r\n\r\n      case 'OPERATIONS':\r\n        const searchProjectData: FormData = new FormData();\r\n        searchProjectData.append('project', JSON.stringify(this.filterProjectForm.value));\r\n\r\n        if (this.filterProjectForm.value.projectDate != null) {\r\n          searchProjectData.append('date', JSON.stringify(this.filterProjectForm.value.projectDate.getTime()));\r\n        }\r\n\r\n        this.programService.searchProjects(searchProjectData).subscribe((result) => {\r\n          this.projectArray = result;\r\n        })\r\n        break;\r\n\r\n      case 'MANAGER':\r\n        const searchProjectDataManager: FormData = new FormData();\r\n        searchProjectDataManager.append('project', JSON.stringify(this.filterProjectForm.value))\r\n        searchProjectDataManager.append('manager', email);\r\n\r\n        if (this.filterProjectForm.value.projectDate) {\r\n          searchProjectDataManager.append('date', JSON.stringify(this.filterProjectForm.value.projectDate.getTime()));\r\n        }\r\n\r\n        this.programService.searchProjectManager(searchProjectDataManager).subscribe((result) => {\r\n          console.log(result);\r\n          this.projectArray = result;\r\n        })\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  resetFilterProjectForm(): void {\r\n    this.filterProjectForm.reset();\r\n    this.getAllProjects();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.role = window.localStorage.getItem('role');\r\n    const email = window.localStorage.getItem('tgt_email');\r\n\r\n    const today = new Date().getTime();\r\n\r\n    console.log(this.role);\r\n    console.log(email);\r\n\r\n    switch (this.role) {\r\n      case 'MANAGER':\r\n        this.getAllProgramsByManager(email);\r\n        this.getAllProjectsByManager(email);\r\n        break;\r\n\r\n      case 'OPERATIONS':\r\n        this.getAllPrograms();\r\n        this.getAllProjects();\r\n        this.getAllManagers();\r\n        break;\r\n\r\n      case 'EMPLOYEE':\r\n        this.getProgramsByDateForEmployee(email, today);\r\n        this.getProjectsByDateForEmployee(email, today);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.programService.getAllActivePrograms('ACTIVE').subscribe((response) => {\r\n      console.log(response);\r\n    })\r\n  }\r\n}\r\n","<mat-tab-group mat-stretch-tabs class=\"example-tabs mat-elevation-z4\">\r\n  <mat-tab label=\"PROGRAMS\">\r\n    <mat-expansion-panel\r\n      *ngIf=\"role != 'EMPLOYEE'\"\r\n      class=\"mat-elevation-z0\"\r\n      [disabled]=\"true\"\r\n      #mepProgram=\"matExpansionPanel\"\r\n    >\r\n      <mat-expansion-panel-header>\r\n        <button\r\n          mat-icon-button\r\n          matTooltip=\"Refine Search\"\r\n          color=\"primary\"\r\n          (click)=\"mepProgram.expanded = !mepProgram.expanded\"\r\n        >\r\n          <mat-icon>tune</mat-icon>\r\n        </button>\r\n        <span class=\"example-spacer\"></span>\r\n\r\n        <button\r\n          mat-flat-button\r\n          matTooltip=\"Create New Program\"\r\n          color=\"primary\"\r\n          (click)=\"openAddProgramDialog()\"\r\n          *ngIf=\"role === 'OPERATIONS'\"\r\n        >\r\n          Add New Program\r\n        </button>\r\n      </mat-expansion-panel-header>\r\n\r\n      <form [formGroup]=\"filterProgramForm\">\r\n        <div fxLayout=\"column\">\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayout.xs=\"column\"\r\n            fxLayoutGap=\"2%\"\r\n            fxFlex=\"100%\"\r\n          >\r\n            <mat-form-field\r\n              fxFlex=\"50%\"\r\n              class=\"example-full-width\"\r\n              appearance=\"outline\"\r\n            >\r\n              <mat-label>Program Name</mat-label>\r\n              <input matInput formControlName=\"programName\" />\r\n            </mat-form-field>\r\n            <mat-form-field\r\n              fxFlex=\"50%\"\r\n              class=\"example-full-width\"\r\n              appearance=\"outline\"\r\n            >\r\n              <mat-label>Organization Name</mat-label>\r\n              <mat-select formControlName=\"organizationName\">\r\n                <mat-option\r\n                  *ngFor=\"let organization of organizationNameArray\"\r\n                  [value]=\"organization\"\r\n                  >{{ organization }}</mat-option\r\n                >\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayout.xs=\"column\"\r\n            fxLayoutGap=\"2%\"\r\n            fxFlex=\"100%\"\r\n          >\r\n            <mat-form-field fxFlex=\"33%\" appearance=\"outline\">\r\n              <mat-label>Choose a date</mat-label>\r\n              <input\r\n                matInput\r\n                [matDatepicker]=\"programFilterPicker\"\r\n                formControlName=\"programDate\"\r\n              />\r\n              <mat-hint>MM/DD/YYYY</mat-hint>\r\n              <mat-datepicker-toggle\r\n                matSuffix\r\n                [for]=\"programFilterPicker\"\r\n              ></mat-datepicker-toggle>\r\n              <mat-datepicker #programFilterPicker></mat-datepicker>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field\r\n              *ngIf=\"role === 'OPERATIONS'\"\r\n              fxFlex=\"33%\"\r\n              appearance=\"outline\"\r\n            >\r\n              <mat-label>Manager Email Id</mat-label>\r\n              <mat-select formControlName=\"managerEmailId\">\r\n                <mat-option\r\n                  *ngFor=\"let manager of managersArray\"\r\n                  [value]=\"manager\"\r\n                  >{{ manager }}</mat-option\r\n                >\r\n              </mat-select>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field fxFlex=\"33%\" appearance=\"outline\">\r\n              <mat-label>Program Status</mat-label>\r\n              <mat-select formControlName=\"programStatus\">\r\n                <mat-option value=\"ACTIVE\">Active</mat-option>\r\n                <mat-option value=\"INACTIVE\">Inactive</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n\r\n        <div align=\"end\">\r\n          <button\r\n            class=\"filter-buttons\"\r\n            (click)=\"resetFilterProgramForm()\"\r\n            mat-flat-button\r\n          >\r\n            Reset\r\n          </button>\r\n          <button\r\n            class=\"filter-buttons\"\r\n            mat-flat-button\r\n            color=\"primary\"\r\n            (click)=\"filterPrograms()\"\r\n          >\r\n            Apply\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </mat-expansion-panel>\r\n\r\n    <mat-paginator\r\n      [length]=\"length\"\r\n      [pageSize]=\"8\"\r\n      (page)=\"getPaginatorData($event)\"\r\n    >\r\n    </mat-paginator>\r\n\r\n    <div *ngIf=\"showProgramSpinner; else showPrograms\">\r\n      <mat-spinner class=\"progress-spinner\"></mat-spinner>\r\n    </div>\r\n\r\n    <ng-template #showPrograms>\r\n      <div *ngIf=\"programArray.length < 1; else showProgramArray\">\r\n        <h1>No Programs to Show.</h1>\r\n      </div>\r\n      <ng-template #showProgramArray>\r\n        <app-program-card\r\n          class=\"program-cards\"\r\n          *ngFor=\"let program of programArray | slice: lowValue:highValue\"\r\n          [programData]=\"program\"\r\n        ></app-program-card>\r\n      </ng-template>\r\n    </ng-template>\r\n  </mat-tab>\r\n\r\n  <mat-tab label=\"INTERNAL PROJECTS\">\r\n    <mat-expansion-panel\r\n      *ngIf=\"role != 'EMPLOYEE'\"\r\n      class=\"mat-elevation-z0\"\r\n      [disabled]=\"true\"\r\n      #mepProject=\"matExpansionPanel\"\r\n    >\r\n      <mat-expansion-panel-header>\r\n        <button\r\n          mat-icon-button\r\n          matTooltip=\"Refine Search\"\r\n          color=\"primary\"\r\n          (click)=\"mepProject.expanded = !mepProject.expanded\"\r\n        >\r\n          <mat-icon>tune</mat-icon>\r\n        </button>\r\n        <span class=\"example-spacer\"></span>\r\n        <button\r\n          mat-button\r\n          (click)=\"openAddProjectDialog()\"\r\n          mat-flat-button\r\n          color=\"primary\"\r\n          *ngIf=\"role === 'OPERATIONS'\"\r\n        >\r\n          Add New Project\r\n        </button>\r\n      </mat-expansion-panel-header>\r\n\r\n      <form [formGroup]=\"filterProjectForm\">\r\n        <div fxLayout=\"column\">\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayout.xs=\"column\"\r\n            fxLayoutGap=\"2%\"\r\n            fxFlex=\"100%\"\r\n          >\r\n            <mat-form-field\r\n              fxFlex=\"50%\"\r\n              class=\"example-full-width\"\r\n              appearance=\"outline\"\r\n            >\r\n              <mat-label>Project Name</mat-label>\r\n              <input matInput formControlName=\"projectName\" />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field fxFlex=\"50%\" appearance=\"outline\">\r\n              <mat-label>Project Status</mat-label>\r\n              <mat-select formControlName=\"projectStatus\">\r\n                <mat-option value=\"ACTIVE\">Active</mat-option>\r\n                <mat-option value=\"INACTIVE\">Inactive</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayout.xs=\"column\"\r\n            fxLayoutGap=\"2%\"\r\n            fxFlex=\"100%\"\r\n          >\r\n            <mat-form-field fxFlex=\"50%\" appearance=\"outline\">\r\n              <mat-label>Choose a date</mat-label>\r\n              <input\r\n                matInput\r\n                [matDatepicker]=\"projectFilterPicker\"\r\n                formControlName=\"projectDate\"\r\n              />\r\n              <mat-hint>MM/DD/YYYY</mat-hint>\r\n              <mat-datepicker-toggle\r\n                matSuffix\r\n                [for]=\"projectFilterPicker\"\r\n              ></mat-datepicker-toggle>\r\n              <mat-datepicker #projectFilterPicker></mat-datepicker>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field\r\n              *ngIf=\"role === 'OPERATIONS'\"\r\n              fxFlex=\"50%\"\r\n              appearance=\"outline\"\r\n            >\r\n              <mat-label>Manager Email Id</mat-label>\r\n              <mat-select formControlName=\"managerEmailId\">\r\n                <mat-option\r\n                  *ngFor=\"let manager of managersArray\"\r\n                  [value]=\"manager\"\r\n                  >{{ manager }}</mat-option\r\n                >\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n\r\n        <div align=\"end\">\r\n          <button\r\n            class=\"filter-buttons\"\r\n            (click)=\"resetFilterProjectForm()\"\r\n            mat-flat-button\r\n          >\r\n            Reset\r\n          </button>\r\n          <button\r\n            class=\"filter-buttons\"\r\n            mat-flat-button\r\n            color=\"primary\"\r\n            (click)=\"filterProjects()\"\r\n          >\r\n            Apply\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </mat-expansion-panel>\r\n\r\n    <mat-paginator\r\n      [length]=\"projectPaginatorLength\"\r\n      [pageSize]=\"8\"\r\n      (page)=\"getPaginatorData($event)\"\r\n    >\r\n    </mat-paginator>\r\n\r\n    <div *ngIf=\"showProjectSpinner; else showProjects\">\r\n      <mat-spinner class=\"progress-spinner\"></mat-spinner>\r\n    </div>\r\n\r\n    <ng-template #showProjects>\r\n      <div *ngIf=\"projectArray.length < 1; else showProjectsArray\">\r\n        <h1>No Projects to Show.</h1>\r\n      </div>\r\n\r\n      <ng-template #showProjectsArray>\r\n        <app-project-card\r\n          class=\"project-cards\"\r\n          *ngFor=\"let project of projectArray | slice: lowValue:highValue\"\r\n          [projectData]=\"project\"\r\n        ></app-project-card>\r\n      </ng-template>\r\n    </ng-template>\r\n  </mat-tab>\r\n</mat-tab-group>\r\n","import { MonthlyTrackerService } from './../../service/monthly-tracker.service';\r\nimport { DailyTracker } from './../../model/daily-tracker';\r\nimport { AfterViewInit, Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport * as moment from \"moment\";\r\nimport { DailyTrackerService } from \"src/app/service/daily-tracker.service\";\r\nimport { MonthlyTracker } from 'src/app/model/monthly-tracker';\r\n\r\n\r\n@Component({\r\n  selector: 'app-monthly-tracker-details',\r\n  templateUrl: './monthly-tracker-details.component.html',\r\n  styleUrls: ['./monthly-tracker-details.component.css'],\r\n\r\n})\r\nexport class MonthlyTrackerDetailsComponent implements AfterViewInit {\r\n  email:string;\r\n  month:string;\r\n  year:string;\r\n  employeeName:string='Muthu';\r\n  dailyTrackers:DailyTracker[]=[]\r\n  monthlyTracker:MonthlyTracker;\r\n  constructor(private apiService: MonthlyTrackerService,private api2:DailyTrackerService, private route: ActivatedRoute,public dialog: MatDialog) { \r\n    // for (let index = moment().add(10, 'days'); index < moment().add(30, 'days'); index=moment(index).add(1, 'days')) {\r\n    //   this.dates.push(index.toDate().toDateString())\r\n    // }\r\n    \r\n  }\r\n  ngAfterViewInit(): void {\r\n\r\n    this.email = this.route.snapshot.params['email'];\r\n    this.month = this.route.snapshot.params['month'];\r\n    this.year = this.route.snapshot.params['year']; \r\n    this.apiService.findMonthlyTrackerById(this.email+\"-\"+this.month+\"-\"+this.year).subscribe(response=>{\r\n      this.monthlyTracker=response;\r\n      this.api2.getTrackersForPeriod(this.email,this.monthlyTracker.startDate,this.monthlyTracker.endDate).subscribe(response=>{\r\n        this.dailyTrackers=response;        \r\n        this.dailyTrackers.forEach(dailyTracker=>{\r\n          dailyTracker.logs.forEach(log=>log.taskName)\r\n\r\n        })\r\n      })\r\n    });\r\n  }\r\n\r\n  getDateString(item:DailyTracker){\r\n    return moment(item.date).toDate().toDateString();\r\n  }\r\n  openDialog(dailyTracker:DailyTracker) {\r\n    const dialogRef = this.dialog.open(DialogContentExampleDialog,{\r\n      data:dailyTracker\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-content-example-dialog',\r\n  templateUrl: './dialog-content-example-dialog.html',\r\n  styleUrls: ['./dialog.component.css']\r\n})\r\nexport class DialogContentExampleDialog {\r\n  projects:{ name: string; hours: number; }[]=[];\r\n  selflearnings:{ name: string; hours: number; }[]=[];\r\n  programs:{ name: string; hours: number; }[]=[];\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public dailyTracker: DailyTracker,private dailog:MatDialog){\r\n    dailyTracker.logs.filter(log=>log.logType===\"PROGRAM\").forEach(log=>{\r\n      this.programs.push({name:log.taskName,hours:log.logHours});\r\n    });\r\n    dailyTracker.logs.filter(log=>log.logType===\"PROJECT\").forEach(log=>{\r\n      this.projects.push({name:log.taskName,hours:log.logHours});\r\n    });\r\n    dailyTracker.logs.filter(log=>log.logType===\"SELF_LEARNING\").forEach(log=>{\r\n      this.selflearnings.push({name:log.taskName,hours:log.logHours});\r\n    });\r\n  }\r\n  getDateString(item:DailyTracker){\r\n    return moment(item.date).toDate().toDateString();\r\n  }\r\n  close(){\r\n  this.dailog.closeAll();\r\n  }\r\n}\r\n","<div class=\"canvas\">\r\n  <div class=\"overview\">\r\n   <div>Employee: {{email}}</div>\r\n   <div>Month: July</div>\r\n   <div>Year : 2022</div>\r\n  </div>\r\n   <div class=\"main\">\r\n     <div class=\"date\" (click)=\"openDialog(item)\" *ngFor=\"let item of dailyTrackers\">\r\n       <h2>  {{getDateString(item).slice(4,7)}}</h2>\r\n       <div class=\"number\" >\r\n         {{getDateString(item).slice(8,10)}}\r\n       </div>\r\n     </div>\r\n \r\n   </div>\r\n </div>\r\n ","<div class=\"dialog\">\r\n  <mat-icon class=\"close\" (click)=\"close()\" >close</mat-icon>\r\n  <h2 mat-dialog-title>Daily Tracker</h2>\r\n  <span class=\"date\">{{getDateString(this.dailyTracker)}}</span>\r\n<br>\r\n<br>\r\n<div *ngIf=\"projects.length>0\">\r\n  <h3> <mat-icon class=\"mat-18\">web_asset</mat-icon> Projects</h3>\r\n  <hr>\r\n  <div class=\"list\" *ngFor=\"let project of projects\">\r\n    <div><b>{{project.name}}</b></div> <div class=\"hrs\">{{project.hours}} hrs</div>\r\n  </div>\r\n</div>\r\n<br *ngIf=\"projects.length>0\">\r\n<br *ngIf=\"projects.length>0\">\r\n<div *ngIf=\"programs.length>0\">\r\n  <h3> <mat-icon class=\"mat-18\">cast_for_education</mat-icon> Programs</h3>\r\n<hr>\r\n<div class=\"list\" *ngFor=\"let program of programs\">\r\n  <div><b>{{program.name}}</b></div> <div class=\"hrs\">{{program.hours}} hrs</div>\r\n</div>\r\n</div>\r\n<br *ngIf=\"programs.length>0\">\r\n<br *ngIf=\"programs.length>0\">\r\n<div *ngIf=\"selflearnings.length>0\">\r\n  <h3> <mat-icon class=\"mat-18\">menu_book</mat-icon> Self Learning</h3>\r\n<hr>\r\n<div class=\"list\" *ngFor=\"let selflearning of selflearnings\">\r\n  <div><b>{{selflearning.name}}</b></div> <div class=\"hrs\">{{selflearning.hours}} hrs</div>\r\n</div>\r\n</div>\r\n</div>\r\n","import { T } from '@angular/cdk/keycodes';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n// import * as XLSX from 'xlsx';\r\nimport { LeaveType } from 'src/app/model/daily-tracker';\r\nimport { DailyTrackerModel } from 'src/app/model/daily-tracker-model';\r\nimport { Employee } from 'src/app/model/employee';\r\nimport { EmployeeData } from 'src/app/model/employee-data';\r\nimport { LogType } from 'src/app/model/log';\r\nimport { Program } from 'src/app/model/program';\r\nimport { MemberHour, ProgramData } from 'src/app/model/program-data';\r\nimport { ProgramTime } from 'src/app/model/program-time';\r\nimport { Project } from 'src/app/model/project';\r\nimport { ProjectData } from 'src/app/model/project-data';\r\nimport { ProjectTime } from 'src/app/model/project-time';\r\n\r\n// import { XLSX$Consts } from 'xlsx';\r\nimport { ConsolidatedAnalyticsComponent } from '../consolidated-analytics/consolidated-analytics.component';\r\nimport { ngxCsv } from 'ngx-csv/ngx-csv';\r\nimport { LeavesComponent } from '../leaves/leaves.component';\r\nimport { EmployeeService } from 'src/app/service/employee.service';\r\nimport { DailyTrackerService } from 'src/app/service/daily-tracker.service';\r\nimport { ProgramService} from 'src/app/service/program.service';\r\n// import { FileSaverService } from 'ngx-filesaver';\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-consolidated-view',\r\n  templateUrl: './consolidated-view.component.html',\r\n  styleUrls: ['./consolidated-view.component.css']\r\n})\r\nexport class ConsolidatedViewComponent implements OnInit {\r\n  //data objects for passing data from consolidated view to analytics view\r\n  analyticsDataProg: any;\r\n  analyticsDataProj: any;\r\n  analyticsDataEmp: any;\r\n\r\n  //variable to check checkbox status for yearly report\r\n  yearlyReport: boolean = false;\r\n\r\n  yearlyReportDownloaded:boolean=false;\r\n  // array to hold each row of report(row=EmployeeData object)\r\n  empData: EmployeeData[] = []\r\n\r\n  //Array to hold List of all employees in company\r\n  empList: Employee[];\r\n\r\n  //Array to hold all dailytrackers for a month\r\n  dailyTrackers: DailyTrackerModel[];\r\n  dailyTrackersYear1: DailyTrackerModel[];//year variable for program report\r\n  dailyTrackersYear2: DailyTrackerModel[];//year variable for project report\r\n\r\n  //array to hold each row of Program report(row=ProgramData object)\r\n  progData: ProgramData[] = [];\r\n  projData: ProjectData[] = [];\r\n\r\n  //array to hld list of all programs /projectfor the year selectedValueYearProg\r\n  progList: any;\r\n  projList: any;\r\n  //array for name of columns in employee report\r\n  displayedColumnsEmp: string[] = ['image', 'email', 'name', 'projectHrs', 'programHrs', 'self_Learning_Hrs', 'leaves', 'manager', 'projects-programs'];\r\n\r\n  //array for name of columns in program report\r\n  displayedColumnsProg: string[] = ['programName', 'programType', 'createdOn', 'startDate', 'endDate', 'organizationName', 'managerEmailId', 'memberList', 'totalHours', 'programStatus'];\r\n\r\n  displayedColumnsProj: string[] = ['projectName', 'createdOn', 'startDate', 'endDate', 'managerEmailId', 'memberList', 'totalHours', 'projectStatus'];\r\n\r\n  dataSourceEmp: any; //datasources for tables\r\n  dataSourceProg: any;\r\n  dataSourceProj: any;\r\n\r\n  selectedValueYear: number = 2022;\r\n  selectedValueYearProg: number = 2022;\r\n  selectedValueYearProj: number = 2022;\r\n  months: string[] = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n  years: number[] = [2018, 2019, 2020, 2021, 2022];\r\n  selectedValueMonth: string = this.months[new Date().getMonth()];\r\n\r\n\r\n  applyFilterEmp(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSourceEmp.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  applyFilterProg(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSourceProg.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  applyFilterProj(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSourceProj.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  constructor( private dialog: MatDialog,private empService:EmployeeService,private dtService:DailyTrackerService,private progServ:ProgramService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.fetchAllDailyTrackers();\r\n\r\n  }\r\n\r\n  //get all employees from db\r\n  fetchAllEmployees() {\r\n    this.empService.getAllEmployees().subscribe((result: any) => {\r\n      console.log(\"all Employees:\", result);\r\n      this.empList = result;\r\n      this.createEmployeeData();\r\n    });\r\n  }\r\n\r\n  //get all daily tracker for a month and year\r\n  fetchAllDailyTrackers() {\r\n    //reset all 3 main arrays\r\n    this.empData = [];\r\n    this.empList = [];\r\n    this.dailyTrackers = []\r\n    let month: number = this.months.indexOf(this.selectedValueMonth);\r\n    let year: number = this.selectedValueYear;\r\n    if (this.yearlyReport)//if yearly report checkbox is checked, get trackers for the year\r\n    {\r\n      this.yearlyReportDownloaded=true;\r\n      this.getDailyTrackersForYear(year);\r\n    }\r\n    else {\r\n      this.yearlyReportDownloaded=false;\r\n      this.dtService.getAllDailyTrackers(month, year).subscribe((res: any) => {\r\n        console.log(res);\r\n        this.dailyTrackers = res;\r\n        this.fetchAllEmployees();\r\n      });\r\n    }\r\n  }\r\n  //get daily trackers for the year\r\n  getDailyTrackersForYear(year: number) {\r\n    let fromDateStr = \"01/01/\" + year;\r\n    let toDateStr = \"12/31/\" + year;\r\n    this.dtService.getDailyTrackersForPeriod(new Date(fromDateStr).getTime(), new Date(toDateStr).getTime()).subscribe((res: any) => {\r\n      this.dailyTrackers = res;\r\n      this.fetchAllEmployees();\r\n    }\r\n    );\r\n  }\r\n  //create Employee Data list , assigning all EmployeeData objects to Employee_List\r\n  createEmployeeData() {\r\n    for (var emp of this.empList)//for every employee\r\n    {\r\n      let totalProgHrs = 0;\r\n      let totalProjHrs = 0;\r\n      let self_Learning_Hrs = 0;\r\n      let uniqueProgList: string[] = [];\r\n      let uniqueProjList: string[] = [];\r\n      let trackersOfThisEmp: DailyTrackerModel[] = []\r\n      let leaves: number = 0;\r\n      let fullDayLeaveList = [];\r\n      let halfDayLeaveList = [];\r\n      //iterate through all trackers in dailyTrackers list to find this employee's tracker\r\n      for (var tracker of this.dailyTrackers) {\r\n        if (tracker.employeeEmail == emp.emailId) {\r\n          //add this tracker to list of this employee's daily tracker for future use in this loop\r\n          trackersOfThisEmp.push(tracker);\r\n          //capture leave status and add to leave variable 1 for fullday 0.5 for halfday\r\n          if (tracker.leaveType == LeaveType.FULL_DAY) {\r\n            let date = new Date(tracker.date);\r\n            console.log(`FullDay Leave pushed for:`, date);\r\n            fullDayLeaveList.push(tracker.date);\r\n            leaves += 1;\r\n          }\r\n          else {\r\n            if (tracker.leaveType == LeaveType.NONE) { }\r\n            else{\r\n              console.log(`HalfDay Leave pushed for:`, new Date(tracker.date));\r\n              halfDayLeaveList.push(tracker.date);\r\n              leaves += 0.5;\r\n            }\r\n          }\r\n          for (var log of tracker.logs) {\r\n            switch (log.logType) {\r\n              case LogType.PROGRAM: console.log(\"program log for:\", emp.employeeName, \" Hours:\", log.logHours);\r\n                totalProgHrs += log.logHours;\r\n                //check if this program already exists in uniqueProgList, if not, add it\r\n                let found = false;\r\n                for (let i = 0; i < uniqueProgList.length; i++) {\r\n                  if (log.taskName == uniqueProgList[i]) {\r\n                    found = true;\r\n                  }\r\n                }\r\n                if (!found) {\r\n                  uniqueProgList.push(log.taskName);//create unique list of programs\r\n                }\r\n                break;\r\n              case LogType.PROJECT: console.log(\"project log for:\", emp.employeeName, \" Hours:\", log.logHours);\r\n                totalProjHrs += log.logHours;\r\n                //check if this project already exists in uniqueProgList, if not, add it\r\n                let found1 = false;\r\n                for (let i = 0; i < uniqueProjList.length; i++) {\r\n                  if (log.taskName == uniqueProjList[i]) {\r\n                    found1 = true;\r\n                  }\r\n                }\r\n                if (!found1) {\r\n                  uniqueProjList.push(log.taskName);//create unique list of programs\r\n                }\r\n                break;\r\n              case LogType.SELF_LEARNING: console.log(\"SelfLearning for:\", emp.employeeName, \" Hours:\", log.logHours);\r\n                self_Learning_Hrs += log.logHours;\r\n                break;\r\n              default: console.log(\"Wrong Log Type Found\");\r\n            }\r\n          }\r\n        }\r\n      }\r\n      let programs: ProgramTime[] = []\r\n      for (var prog of uniqueProgList) {\r\n        programs.push(new ProgramTime(prog, 0));//create objects with program name and loghours=0\r\n      }\r\n      let projects: ProjectTime[] = [];\r\n      for (var proj of uniqueProjList) {\r\n        projects.push(new ProjectTime(proj, 0));//create objects with program name and loghours=0\r\n      }\r\n\r\n      //with unique prog and proj list, iterate through the trackers again to get total hours for each prog/proj\r\n      for (let tracker of trackersOfThisEmp) {\r\n        for (var log of tracker.logs) {\r\n          switch (log.logType) {\r\n            case LogType.PROGRAM:// if its a program log, search programtime array for prog and add to its hours\r\n              for (let i = 0; i < programs.length; i++) {\r\n                if (log.taskName == programs[i].program) {\r\n                  programs[i].time += log.logHours;\r\n                }\r\n              }\r\n              break;\r\n            case LogType.PROJECT:// if its a program log, search programtime array for prog and add to its hours\r\n              for (let i = 0; i < projects.length; i++) {\r\n                if (log.taskName == projects[i].project) {\r\n                  projects[i].time += log.logHours;\r\n                }\r\n              }\r\n              break;\r\n            case LogType.SELF_LEARNING:\r\n            default:\r\n          }\r\n        }\r\n      }\r\n      //create EmployeeData object and push to empData array FINAL OUTPUT IN REPORT\r\n      this.empData.push(new EmployeeData(emp.profileImage, emp.emailId, emp.employeeName, projects, programs, totalProgHrs, totalProjHrs, self_Learning_Hrs, leaves, emp.managerEmailId, fullDayLeaveList, halfDayLeaveList));\r\n    }\r\n    console.log(\"hello\", this.empData);\r\n    this.dataSourceEmp = new MatTableDataSource(this.empData);\r\n    this.fetchAllPrograms();\r\n    this.fetchAllProjects();\r\n  }\r\n  //gets all active/inactive projects from backend\r\n  fetchAllProjects() {\r\n    this.projList = [];\r\n    this.dailyTrackersYear2 = [];\r\n    this.projData = [];\r\n    this.progServ.getAllProjects().subscribe((res: any) => {\r\n      console.log(\"All Projects from backend:\", res);\r\n      this.projList = this.getProjectsForTheYear(res, this.selectedValueYearProj);\r\n      for (var project of this.projList) {\r\n        this.projData.push(new ProjectData(project.organizationBrandLogo, project.projectName, project.organizationName, project.createdOn, project.startDate, project.endDate, project.managerEmailId, project.projectStatus));//member list and total hours are optional parameters and will be calculated in following code\r\n      }\r\n      console.log(\"project data objects:\", this.projData);\r\n      this.createProjectData();\r\n    })\r\n\r\n  }\r\n  //gets all active/inactive programs from backend\r\n  fetchAllPrograms() {\r\n    this.progList = [];\r\n    this.dailyTrackersYear1 = [];\r\n    this.progData = [];\r\n    this.progServ.getAllPrograms().subscribe((res: any) => {\r\n      console.log(\"All Programs from backend:\", res);\r\n      this.progList = this.getProgramsForTheYear(res, this.selectedValueYearProg);\r\n      for (var program of this.progList) {\r\n        this.progData.push(new ProgramData(program.organizationBrandLogo, program.programName, program.organizationName, program.programType, program.createdOn, program.startDate, program.endDate, program.managerEmail, program.programStatus));//member list and total hours are optional parameters and will be calculated in following code\r\n      }\r\n      console.log(\"program data objects:\", this.progData);\r\n      this.createProgramData();\r\n    })\r\n  }\r\n\r\n  //creates ProgramData object for each program in progList\r\n  createProgramData() {\r\n    let yearStart = new Date(\"01/01/\" + this.selectedValueYearProg).getTime();\r\n    let yearEnd = new Date(\"12/31/\" + this.selectedValueYearProg).getTime();\r\n    this.dtService.getDailyTrackersForPeriod(yearStart, yearEnd).subscribe((result: any) => {\r\n      console.table(result);\r\n      this.dailyTrackersYear1 = result;\r\n      for (var tracker of this.dailyTrackersYear1) {\r\n        for (var log of tracker.logs) {\r\n          if (log.logType == LogType.PROGRAM) {\r\n            for (let i = 0; i < this.progData.length; i++) {\r\n              if (this.progData[i].programName == log.taskName) {\r\n                this.progData[i].totalHours += log.logHours;//add loghours to that program's total hours\r\n                //check if this employee exists in member list of that program, if not add him with hours, if yes, then add hours against that employee for that program\r\n                let memberFound = false;\r\n                for (let j = 0; j < this.progData[i].memberList.length; j++) {\r\n                  if (this.progData[i].memberList[j].member == tracker.employeeEmail) {\r\n                    memberFound = true;\r\n                    this.progData[i].memberList[j].hours += log.logHours;//if member found, add the loghours for him\r\n                  }\r\n                }\r\n                if (!memberFound) {\r\n                  this.progData[i].memberList.push(new MemberHour(tracker.employeeEmail, log.logHours));//push a new member hour entry to members array of that program  \r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      console.log(\"Final ProgramData obj for report:\", this.progData);\r\n      this.dataSourceProg = new MatTableDataSource(this.progData);\r\n    });\r\n\r\n  }\r\n\r\n  createProjectData() {\r\n    let yearStart = new Date(\"01/01/\" + this.selectedValueYearProj).getTime();\r\n    let yearEnd = new Date(\"12/31/\" + this.selectedValueYearProj).getTime();\r\n    this.dtService.getDailyTrackersForPeriod(yearStart, yearEnd).subscribe((result: any) => {\r\n      console.table(result);\r\n      this.dailyTrackersYear2 = result;\r\n      for (var tracker of this.dailyTrackersYear2) {\r\n        for (var log of tracker.logs) {\r\n          if (log.logType == LogType.PROJECT) {\r\n            for (let i = 0; i < this.projData.length; i++) {\r\n              if (this.projData[i].projectName == log.taskName) {\r\n                this.projData[i].totalHours += log.logHours;//add loghours to that program's total hours\r\n                //check if this employee exists in member list of that program, if not add him with hours, if yes, then add hours against that employee for that program\r\n                let memberFound = false;\r\n                for (let j = 0; j < this.projData[i].memberList.length; j++) {\r\n                  if (this.projData[i].memberList[j].member == tracker.employeeEmail) {\r\n                    memberFound = true;\r\n                    this.projData[i].memberList[j].hours += log.logHours;//if member found, add the loghours for him\r\n                  }\r\n                }\r\n                if (!memberFound) {\r\n                  this.projData[i].memberList.push(new MemberHour(tracker.employeeEmail, log.logHours));//push a new member hour entry to members array of that program  \r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      console.log(\"Final projectData objects:\", this.projData);\r\n      this.dataSourceProj = new MatTableDataSource(this.projData);\r\n    });\r\n\r\n  }\r\n\r\n  getProgramsForTheYear(list: Program[], year: number): Program[] {\r\n    let result = [];\r\n    let yearStart = new Date(\"01/01/\" + year).getTime();\r\n    let yearEnd = new Date(\"12/31/\" + year).getTime();\r\n\r\n    for (var prog of list) {\r\n      if (prog.createdOn >= yearStart && prog.createdOn <= yearEnd) {\r\n        result.push(prog);\r\n      }\r\n    }\r\n    console.log(\"inside get programsfor the year method, for year\", year, \"programs are\", result)\r\n    return result;\r\n  }\r\n\r\n  getProjectsForTheYear(list: Project[], year: number): Project[] {\r\n    let result = [];\r\n    let yearStart = new Date(\"01/01/\" + year).getTime();\r\n    let yearEnd = new Date(\"12/31/\" + year).getTime();\r\n\r\n    for (var proj of list) {\r\n      if (proj.createdOn >= yearStart && proj.createdOn <= yearEnd) {\r\n        result.push(proj);\r\n      }\r\n    }\r\n    console.log(\"inside get projects for the year method, for year\", year, \"programs are\", result)\r\n    return result;\r\n  }\r\n\r\n  //open analytics\r\n  openAnalyticsProg() {\r\n    //data for barchart/pieChart\r\n    let progName = [];\r\n    let progHours = [];\r\n    let employeeOnProgram = [];\r\n    for (var prog of this.progData) {\r\n      progName.push(prog.programName);\r\n      progHours.push(prog.totalHours);\r\n      employeeOnProgram.push(prog.memberList.length);\r\n    }\r\n\r\n\r\n    this.analyticsDataProg = {\r\n      barChartLabels: progName,\r\n      barChartData: [{ data: progHours, label: \"Total Billed Hours\" }],\r\n      barChartHeader: \"Program Hour Comaprison\",\r\n      pieChartLabels: progName,\r\n      pieChartData: [{ data: employeeOnProgram }],\r\n      pieChartHeader: \"TeamSize Comparison\"\r\n    }\r\n    let dialogConf = new MatDialogConfig();\r\n    dialogConf.data = this.analyticsDataProg;\r\n    this.dialog.open(ConsolidatedAnalyticsComponent, dialogConf);\r\n  }\r\n  openAnalyticsEmp() {\r\n    //data for barchart\r\n    let empName = [];\r\n    let progHrs = [];\r\n    let projHrs = [];\r\n    let slHrs = [];\r\n    for (var empObj of this.empData) {\r\n      empName.push(empObj.name);\r\n      progHrs.push(empObj.totalProgHrs);\r\n      projHrs.push(empObj.totalProjHrs);\r\n      slHrs.push(empObj.self_Learning_Hrs);\r\n    }\r\n    //data for pie chart, show hour distribution of all employees of comapny among program, project, selflearning\r\n    let compProgHr = 0, compProjHr = 0, compSelfLearnHr = 0;\r\n    for (var empObj of this.empData) {\r\n      compProgHr += empObj.totalProgHrs;\r\n      compProjHr += empObj.totalProjHrs;\r\n      compSelfLearnHr += empObj.self_Learning_Hrs;\r\n    }\r\n\r\n\r\n    this.analyticsDataEmp = {\r\n      barChartLabels: empName,\r\n      barChartData: [\r\n        { data: progHrs, label: \"Program Hrs\" },\r\n        { data: projHrs, label: \"Project Hrs\" },\r\n        { data: slHrs, label: \"SelfStudy Hrs\" },\r\n      ],\r\n      pieChartLabels: [\"Program Hrs\", \"Project Hrs\", \"Self Learning Hrs\"],\r\n      pieChartData: [{ data: [compProgHr, compProjHr, compSelfLearnHr] }],\r\n      barChartHeader: \"Employee Hours Distribution\",\r\n      pieChartHeader: \"Total Billable Hours Distr.\"\r\n\r\n    }\r\n    let dialogConf = new MatDialogConfig();\r\n    dialogConf.data = this.analyticsDataEmp;\r\n    this.dialog.open(ConsolidatedAnalyticsComponent, dialogConf);\r\n  }\r\n  openAnalyticsProj() {\r\n    let projName = [];\r\n    let projHours = [];\r\n    let employeeOnProject = [];\r\n    for (var proj of this.projData) {\r\n      projName.push(proj.projectName);\r\n      projHours.push(proj.totalHours);\r\n      employeeOnProject.push(proj.memberList.length);\r\n    }\r\n\r\n\r\n    this.analyticsDataProj = {\r\n      barChartLabels: projName,\r\n      barChartData: [{ data: projHours, label: \"Total Billed Hours\" }],\r\n      barChartHeader: \"Project Hour Comaprison\",\r\n      pieChartLabels: projName,\r\n      pieChartData: [{ data: employeeOnProject }],\r\n      pieChartHeader: \"TeamSize Comparison\"\r\n    }\r\n    let dialogConf = new MatDialogConfig();\r\n    dialogConf.data = this.analyticsDataProj;\r\n    this.dialog.open(ConsolidatedAnalyticsComponent, dialogConf);\r\n  }\r\n\r\n  //employee report excel download\r\n  downloadEmpReport() {\r\n\r\n    // let element=document.getElementById(\"employeeTable\");\r\n    let reportObj = [];\r\n    for (var emp of this.empData) {\r\n      reportObj.push({\r\n        name: emp.name, email: emp.email, projectHours: emp.totalProgHrs, programHrs: emp.totalProgHrs, selfLearningHours: emp.self_Learning_Hrs, manager: emp.manager, leaves: emp.leaves\r\n      });\r\n    }\r\n    let _title;\r\n    if(this.yearlyReportDownloaded){\r\n_title=\"year\"+this.selectedValueYear;\r\n    }\r\n    else{\r\n      _title=this.selectedValueMonth;\r\n    }\r\n    var options = {\r\n      fieldSeparator: ',',\r\n      quoteStrings: '\"',\r\n      decimalseparator: '.',\r\n      showLabels: true,\r\n      showTitle: true,\r\n      title: 'EmployeeReport:'+_title,\r\n      useBom: true,\r\n      noDownload: false,\r\n      headers: [\"Name\", \"Email\", \"Project Hours\", \"Program Hours\", \"Self Learning Hours\", \"Manager\", \"Leaves(Days)\"]\r\n    };\r\n    console.log(\"reportObj:\", reportObj);\r\n    new ngxCsv(reportObj, 'EmployeeReport:' + _title, options)\r\n\r\n  }\r\n\r\n  //show leave details in a modal\r\n  showLeaves(empDataObj: EmployeeData) {\r\n    let dialogConf = new MatDialogConfig();\r\n    dialogConf.data = {\r\n      fullDayList: empDataObj.fullDayLeavesList,\r\n      halfDayList: empDataObj.halfDayLeavesList\r\n    };\r\n    this.dialog.open(LeavesComponent, dialogConf)\r\n    console.log(\"leave list for:\", empDataObj.name, empDataObj.fullDayLeavesList, empDataObj.halfDayLeavesList);\r\n  }\r\n\r\n  downloadProjReport() {\r\n\r\n    // let element=document.getElementById(\"employeeTable\");\r\n    let reportObj = [];\r\n    for (var proj of this.projData) {\r\n      reportObj.push({\r\n        projectName:proj.projectName,createdOn: new Date(proj.createdOn),startDate:new Date(proj.startDate), endDate: new Date(proj.endDate),managerEmailId:proj.managerEmailId, totalHours:proj.totalHours,projectStatus:proj.projectStatus,\r\n      });\r\n    }\r\n    \r\n    var options = {\r\n      fieldSeparator: ',',\r\n      quoteStrings: '\"',\r\n      decimalseparator: '.',\r\n      showLabels: true,\r\n      showTitle: true,\r\n      title: 'ProjectsReport:'+this.selectedValueYearProj,\r\n      useBom: true,\r\n      noDownload: false,\r\n      headers: [\"ProjectName\", \"CreatedOn\", \"StartDate\", \"EndDate\", \"Manager\", \"TotalBilledHours\", \"ProjectStatus\"]\r\n    };\r\n    console.log(\"reportObj:\", reportObj);\r\n    new ngxCsv(reportObj, 'ProjectReport:' + this.selectedValueYearProj, options)\r\n\r\n  }\r\n  \r\n  \r\n  downloadProgReport() {\r\n\r\n    // let element=document.getElementById(\"employeeTable\");\r\n    let reportObj = [];\r\n    for (var prog of this.progData) {\r\n      reportObj.push({\r\n        programName:prog.programName,createdOn: new Date(prog.createdOn),startDate:new Date(prog.startDate), endDate: new Date(prog.endDate),managerEmailId:prog.managerEmailId, totalHours:prog.totalHours,projectStatus:prog.programStatus,organizationName:prog.organizationName,programType:prog.programType\r\n      });\r\n    }\r\n    \r\n    var options = {\r\n      fieldSeparator: ',',\r\n      quoteStrings: '\"',\r\n      decimalseparator: '.',\r\n      showLabels: true,\r\n      showTitle: true,\r\n      title: 'ProgramReport:'+this.selectedValueYearProg,\r\n      useBom: true,\r\n      noDownload: false,\r\n      headers: [\"ProjectName\", \"CreatedOn\", \"StartDate\", \"EndDate\", \"Manager\", \"TotalBilledHours\", \"ProjectStatus\",\"OrganizationName\",\"ProgramType\"]\r\n    };\r\n    console.log(\"reportObj:\", reportObj);\r\n    new ngxCsv(reportObj, 'ProgramReport:' + this.selectedValueYearProg, options)\r\n\r\n  }\r\n}\r\n","<h1 data-text=\"CONSOLIDATED REPORTS\">CONSOLIDATED REPORTS</h1>\r\n<mat-tab-group>\r\n    <mat-tab label=\"Employee\">\r\n        <div>\r\n            <mat-form-field appearance=\"standard\">\r\n                <mat-label>Filter</mat-label>\r\n                <input matInput (keyup)=\"applyFilterEmp($event)\" placeholder=\"Ex. ium\" #input>\r\n            </mat-form-field>\r\n\r\n\r\n\r\n            <mat-form-field appearance=\"fill\" class=\"width-10per\">\r\n                <mat-label>Choose Month</mat-label>\r\n                <mat-select [(ngModel)]=\"selectedValueMonth\" name=\"month\">\r\n                    <mat-option *ngFor=\"let month of months\" [value]=\"month\">\r\n                        {{month}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"fill\" class=\"width-10per\">\r\n                <mat-label>Choose Year</mat-label>\r\n                <mat-select [(ngModel)]=\"selectedValueYear\" name=\"year\">\r\n                    <mat-option *ngFor=\"let year of years\" [value]=\"year\">\r\n                        {{year}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            <mat-icon id=\"search\" (click)=\"fetchAllDailyTrackers()\">search</mat-icon>\r\n            <mat-checkbox class=\"margin-left-100px\" color=\"primary\" [(ngModel)]=\"yearlyReport\">Yearly Report</mat-checkbox>\r\n\r\n            <img src=\"../../../assets/download_icon.png\" class=\"download\" matTooltip=\"download report\" (click)=\"downloadEmpReport()\">\r\n            <img src=\"../../../assets/viewAnalyticsIcon.png\" id=\"analytics\" matTooltip=\"View Analytics\" (click)=\"openAnalyticsEmp()\">\r\n\r\n\r\n        </div>\r\n\r\n\r\n        <table mat-table [dataSource]=\"dataSourceEmp\" class=\"mat-elevation-z8\">\r\n\r\n        \r\n            <ng-container matColumnDef=\"image\">\r\n                <th mat-header-cell *matHeaderCellDef> Image </th>\r\n                <td mat-cell *matCellDef=\"let element\"><img class=\"profile\" *ngIf=\"element.image\" src=\"data:image/png;base64,{{element.image}}\" alt=\"imagefound\"> <img class=\"profile\" *ngIf=\"!element.image\" src=\"../../../assets/noProfileImage.jpg\" alt=\"imageNotFound\"></td>\r\n            </ng-container>\r\n\r\n            \r\n            <ng-container matColumnDef=\"name\">\r\n                <th mat-header-cell *matHeaderCellDef> Name </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n            </ng-container>\r\n\r\n\r\n            <ng-container matColumnDef=\"email\">\r\n                <th mat-header-cell *matHeaderCellDef> Email </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\r\n            </ng-container>\r\n\r\n\r\n\r\n            <ng-container matColumnDef=\"projects-programs\">\r\n                <th mat-header-cell *matHeaderCellDef>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    Projects-Programs</th>\r\n                <td mat-cell *matCellDef=\"let element\">\r\n                    <mat-accordion>\r\n                        <mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n                            <mat-expansion-panel-header>\r\n                                <mat-panel-title>\r\n                                    &nbsp;&nbsp;Project Details<div id=\"space-200px\"></div>Program Details\r\n                                </mat-panel-title>\r\n                            </mat-expansion-panel-header>\r\n                            <div class=\"left\">\r\n                                <div class=\"flex-row border\" *ngFor=\"let projectTime of element.projects\">\r\n                                    <p>{{projectTime.project}}</p>\r\n                                    <p>{{projectTime.time}}hrs</p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"right\">\r\n                                <div class=\"flex-row border\" *ngFor=\"let programTime of element.programs\">\r\n                                    <p>{{programTime.program}}</p>\r\n                                    <p>{{programTime.time}}hrs</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </mat-expansion-panel>\r\n                    </mat-accordion>\r\n                </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"projectHrs\">\r\n                <th mat-header-cell *matHeaderCellDef>Project</th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\">{{element.totalProjHrs}}</td>\r\n            </ng-container>\r\n\r\n\r\n\r\n\r\n            <ng-container matColumnDef=\"programHrs\">\r\n                <th mat-header-cell *matHeaderCellDef align=\"center\"> Program </th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\"> {{element.totalProgHrs}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"self_Learning_Hrs\">\r\n                <th mat-header-cell *matHeaderCellDef>Self Learning</th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\"> {{element.self_Learning_Hrs}} </td>\r\n            </ng-container>\r\n\r\n\r\n\r\n            <ng-container matColumnDef=\"leaves\">\r\n                <th mat-header-cell *matHeaderCellDef> Leaves </th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\" class=\"leaves\" matTooltip=\"Leave Details\" (click)=\"showLeaves(element)\"> {{element.leaves}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"manager\">\r\n                <th mat-header-cell *matHeaderCellDef align=\"center\">Manager</th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.manager}} </td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumnsEmp\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumnsEmp;\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n                <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n            </tr>\r\n        </table>\r\n    </mat-tab>\r\n\r\n    <!-- program report -->\r\n    <mat-tab label=\"Programs\"> \r\n        <div>\r\n            <mat-form-field appearance=\"standard\">\r\n                <mat-label>Filter</mat-label>\r\n                <input matInput (keyup)=\"applyFilterProg($event)\" placeholder=\"Ex. ium\" #input>\r\n            </mat-form-field>\r\n\r\n\r\n\r\n\r\n            <mat-form-field appearance=\"fill\" class=\"width-10per\">\r\n                <mat-label>Choose Year</mat-label>\r\n                <mat-select [(ngModel)]=\"selectedValueYearProg\" name=\"year\" (ngModelChange)=\"fetchAllPrograms()\"  matTooltip=\"Year Of Creation\">\r\n                    <mat-option *ngFor=\"let year of years\" [value]=\"year\">\r\n                        {{year}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <img src=\"../../../assets/download_icon.png\" class=\"download\" matTooltip=\"download report\" (click)=\"downloadProgReport()\">\r\n            <img src=\"../../../assets/viewAnalyticsIcon.png\" id=\"analytics\" matTooltip=\"View Analytics\" (click)=\"openAnalyticsProg()\">\r\n\r\n        </div>\r\n\r\n\r\n        <table mat-table [dataSource]=\"dataSourceProg\" class=\"mat-elevation-z8\">\r\n\r\n            <!-- Position Column -->\r\n            <ng-container matColumnDef=\"programName\">\r\n                <th mat-header-cell *matHeaderCellDef> Program</th>\r\n                <td mat-cell *matCellDef=\"let element\"><ngx-avatar name={{element.programName}} [round]=\"true\" size=\"40\"></ngx-avatar><span> {{element.programName}}</span></td>\r\n            </ng-container>\r\n\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"programType\">\r\n                <th mat-header-cell *matHeaderCellDef> Type </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.programType}} </td>\r\n            </ng-container>\r\n\r\n            <!-- Weight Column -->\r\n            <ng-container matColumnDef=\"createdOn\">\r\n                <th mat-header-cell *matHeaderCellDef> Created On </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.createdOn | date:\"dd/MM/yyyy\"}}<td>\r\n            </ng-container>\r\n\r\n\r\n            <ng-container matColumnDef=\"startDate\">\r\n                <th mat-header-cell *matHeaderCellDef> Start Date</th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\">{{element.startDate | date:\"dd/MM/yyyy\"}}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"endDate\">\r\n                <th mat-header-cell *matHeaderCellDef align=\"center\"> End Date </th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\"> {{element.endDate | date:\"dd/MM/yyyy\"}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"organizationName\">\r\n                <th mat-header-cell *matHeaderCellDef> Organisation </th>\r\n                <td mat-cell *matCellDef=\"let element\" ><img class=\"profile\" *ngIf=\"element.organizationBrandLogo\" src=\"data:image/png;base64,{{element.organizationBrandLogo}}\" alt=\"imagefound\"> <img class=\"profile\" *ngIf=\"!element.organizationBrandLogo\" src=\"../../../assets/noProfileImage.jpg\" alt=\"imageNotFound\"> {{element.organizationName}}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"managerEmailId\">\r\n                <th mat-header-cell *matHeaderCellDef align=\"center\"> Manager </th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\"> {{element.managerEmailId}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"memberList\">\r\n                <th mat-header-cell *matHeaderCellDef align=\"center\"> Working Members </th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\"> \r\n                    <mat-accordion>\r\n                        <mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n                            <mat-expansion-panel-header>\r\n                                <mat-panel-title>\r\n                                    On-Program Employees\r\n                                </mat-panel-title>\r\n                            </mat-expansion-panel-header>\r\n                            <div >\r\n                                <div class=\"flex-row-apart border\" *ngFor=\"let memberHours of element.memberList\">\r\n                                    <p>{{memberHours.member}}</p>\r\n                                    <p>{{memberHours.hours}}hr</p>\r\n                                </div>\r\n                            </div>\r\n                        </mat-expansion-panel>\r\n                    </mat-accordion>\r\n                </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"totalHours\">\r\n                <th mat-header-cell *matHeaderCellDef align=\"center\"> Total Hours </th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\"> {{element.totalHours}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"programStatus\">\r\n                <th mat-header-cell *matHeaderCellDef align=\"center\"> Status </th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\"> {{element.programStatus}} </td>\r\n            </ng-container>\r\n\r\n           \r\n\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumnsProg\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumnsProg;\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n                <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n            </tr>\r\n        </table>\r\n    </mat-tab>\r\n\r\n    <!-- project report -->\r\n    <mat-tab label=\"Projects\">\r\n        <div>\r\n            <mat-form-field appearance=\"standard\">\r\n                <mat-label>Filter</mat-label>\r\n                <input matInput (keyup)=\"applyFilterProj($event)\" placeholder=\"Ex. ium\" #input>\r\n            </mat-form-field>\r\n\r\n\r\n\r\n\r\n            <mat-form-field appearance=\"fill\" class=\"width-10per\">\r\n                <mat-label>Choose Year</mat-label>\r\n                <mat-select [(ngModel)]=\"selectedValueYearProj\" name=\"year\" (ngModelChange)=\"fetchAllProjects()\" matTooltip=\"Year Of Creation\">\r\n                    <mat-option *ngFor=\"let year of years\" [value]=\"year\">\r\n                        {{year}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <img src=\"../../../assets/download_icon.png\" class=\"download\" matTooltip=\"download report\" (click)=\"downloadProjReport()\">\r\n            <img src=\"../../../assets/viewAnalyticsIcon.png\" id=\"analytics\" matTooltip=\"View Analytics\" (click)=\"openAnalyticsProj()\">\r\n\r\n        </div>\r\n\r\n\r\n        <table mat-table [dataSource]=\"dataSourceProj\" class=\"mat-elevation-z8\">\r\n\r\n            <!-- Position Column -->\r\n            <ng-container matColumnDef=\"projectName\">\r\n                <th mat-header-cell *matHeaderCellDef> Project</th>\r\n                <td mat-cell *matCellDef=\"let element\"><ngx-avatar name={{element.projectName}} [round]=\"true\" size=\"40\"></ngx-avatar><span> {{element.projectName}}</span></td>\r\n            </ng-container>\r\n\r\n          \r\n\r\n            <!-- Weight Column -->\r\n            <ng-container matColumnDef=\"createdOn\">\r\n                <th mat-header-cell *matHeaderCellDef> Created On </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.createdOn | date:\"dd/MM/yyyy\"}}<td>\r\n            </ng-container>\r\n\r\n\r\n            <ng-container matColumnDef=\"startDate\">\r\n                <th mat-header-cell *matHeaderCellDef> Start Date</th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\">{{element.startDate | date:\"dd/MM/yyyy\"}}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"endDate\">\r\n                <th mat-header-cell *matHeaderCellDef align=\"center\"> End Date </th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\"> {{element.endDate | date:\"dd/MM/yyyy\"}} </td>\r\n            </ng-container>\r\n\r\n\r\n            <ng-container matColumnDef=\"managerEmailId\">\r\n                <th mat-header-cell *matHeaderCellDef align=\"center\"> Manager </th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\"> {{element.managerEmailId}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"memberList\">\r\n                <th mat-header-cell *matHeaderCellDef align=\"center\"> Working Members </th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\"> \r\n                    <mat-accordion>\r\n                        <mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n                            <mat-expansion-panel-header>\r\n                                <mat-panel-title>\r\n                                    On-Project Employees\r\n                                </mat-panel-title>\r\n                            </mat-expansion-panel-header>\r\n                            <div >\r\n                                <div class=\"flex-row-apart border\" *ngFor=\"let memberHours of element.memberList\">\r\n                                    <p>{{memberHours.member}}</p>\r\n                                    <p>{{memberHours.hours}}hr</p>\r\n                                </div>\r\n                            </div>\r\n                        </mat-expansion-panel>\r\n                    </mat-accordion>\r\n                </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"totalHours\">\r\n                <th mat-header-cell *matHeaderCellDef align=\"center\"> Total Hours </th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\"> {{element.totalHours}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"projectStatus\">\r\n                <th mat-header-cell *matHeaderCellDef align=\"center\"> Status </th>\r\n                <td mat-cell *matCellDef=\"let element\" align=\"center\"> {{element.projectStatus}} </td>\r\n            </ng-container>\r\n\r\n           \r\n\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumnsProj\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumnsProj;\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n                <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n            </tr>\r\n        </table>\r\n    </mat-tab>\r\n\r\n    \r\n\r\n</mat-tab-group>\r\n<table id=\"employeeTable\">\r\n    <th>\r\n\r\n    </th>\r\n\r\n</table>","import { Component, ElementRef, Inject, OnInit, Renderer2 } from '@angular/core';\r\nimport { Form, FormArray, FormBuilder, FormControl, FormGroup, FormsModule, NgForm, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nimport { DailyTracker, LeaveType } from 'src/app/model/daily-tracker';\r\nimport { DailyTrackerModel } from 'src/app/model/daily-tracker-model';\r\nimport { Log, LogType } from 'src/app/model/log';\r\nimport { Program, ProgramType } from 'src/app/model/program';\r\nimport { DailyTrackerService } from 'src/app/service/daily-tracker.service';\r\nimport { ProgramService } from 'src/app/service/program.service';\r\nimport { Project } from 'src/project';\r\n\r\n\r\n\r\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\r\n\r\n@Component({\r\n  selector: 'app-time-tracker',\r\n  templateUrl: './time-tracker.component.html',\r\n  styleUrls: ['./time-tracker.component.css']\r\n})\r\nexport class TimeTrackerComponent implements OnInit {\r\n  currentDate: Date = new Date();\r\n  date = '';\r\n\r\n  hdStatus = 'NotApplied';\r\n  leaves: LeaveType[] = [LeaveType.NONE, LeaveType.HALF_DAY, LeaveType.FULL_DAY];\r\n  leaveApplied: LeaveType; // ng model variable to capture leave applied value\r\n  programLogArray: Log[] = [];\r\n  projectLogArray: Log[] = [];\r\n  programArray: Program[] = [];\r\n  projectArray: Project[] = [];\r\n \r\n  dayLogs: Log[] = [];\r\n  cardArray2: number[] = [1, 2, 3];\r\n  cardArray3: number[] = [1];\r\n  totalHoursOfDay = 0;\r\n  centered = false;\r\n  disabled = false;\r\n  unbounded = false;\r\n  radius = 200;\r\n  color = '';\r\n  logMsg = '';\r\n  snackbarDurationSec = 5;\r\n  tracker: DailyTracker;\r\n  trackerCreated = false;\r\n\r\n  dailyTracker: FormGroup;\r\n\r\n\r\n\r\n  constructor(public dialogRef: MatDialogRef<TimeTrackerComponent>, public formBuilder: FormBuilder, private render: Renderer2, private elem: ElementRef, private _snackBar: MatSnackBar, @Inject(MAT_DIALOG_DATA) public _data: any, public trackerApi: DailyTrackerService, private progServ: ProgramService) {\r\n    let slHourInit = 0;\r\n    let slDetailsInit = '';\r\n    for (let i = 0; i < _data.logs.length; i++) {\r\n      if (_data.logs[i].logType == LogType.SELF_LEARNING) {\r\n        slHourInit = _data.logs[i].logHours;\r\n        slDetailsInit = _data.logs[i].selfStudyDetails;\r\n      }\r\n    }\r\n    this.dailyTracker = this.formBuilder.group({\r\n      progTimeLogs: this.formBuilder.array([]),\r\n      projTimeLogs: this.formBuilder.array([]),\r\n      slDetails: new FormControl(slDetailsInit),\r\n      slHours: new FormControl(slHourInit),   // initialize form input with data recieved from calendar Dailytracker object\r\n      remarks: new FormControl(\"\"),   // same as above\r\n\r\n    });\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    console.log(\"data rcv from calendar ui in trackerUI:\",this._data)\r\n    // display data recieved from CALENDAR to DIALOG on console\r\n   \r\n\r\n    if (this._data.trackerId == '') {\r\n      this.trackerCreated = true;\r\n      console.log('creating a new trackerObject line 217 ');\r\n      this.createFormArray_NewTracker();\r\n    }\r\n    else {\r\n      this.trackerCreated = false;\r\n      this.createFormArray_TrackerExists();\r\n    }\r\n    this.calTotalHoursOfDay();\r\n    this.logMsg = this.totalHoursOfDay + ' hrs. logged.';\r\n  }\r\n\r\n  // this method returns true if Logged hours for day =8, else returns false\r\n  totalHoursValid() {\r\n    if (this.totalHoursOfDay == 8) { return true; }\r\n    else { return false; }\r\n  }\r\n\r\n\r\n  get progTimeLogsArray(): FormArray {\r\n    return this.dailyTracker.get('progTimeLogs') as FormArray;\r\n  }\r\n  get projTimeLogsArray(): FormArray {\r\n    return this.dailyTracker.get('projTimeLogs') as FormArray;\r\n  }\r\n  // method to open snackbar incase hours logged <8 and user clicks SAVE\r\n  openSnackbar() {\r\n    this._snackBar.openFromComponent(SnackbarComponent, { duration: this.snackbarDurationSec * 1000 });\r\n  }\r\n  // method to generate formControls in each array program, project\r\n  createFormArray_TrackerExists() {\r\n    this.leaveApplied = this._data.leaveType;\r\n    console.log(\"inside createFormArray_TrackerExists. _data.logs.length=\", this._data.logs.length);\r\n    for (let i = 0; i < this._data.logs.length; i++) {\r\n      switch (this._data.logs[i].logType) {\r\n        case LogType.PROJECT: console.log(\"project log created\")\r\n        this.projectLogArray.push(this._data.logs[i]); // add this log to projectlogarray\r\n          this.projTimeLogsArray.push(new FormControl(this._data.logs[i].logHours));\r\n          break;\r\n        case LogType.PROGRAM:console.log(\"program log created\")\r\n           this.programLogArray.push(this._data.logs[i]); // add this log to programlogarray\r\n          this.progTimeLogsArray.push(new FormControl(this._data.logs[i].logHours));\r\n          break;\r\n        case LogType.SELF_LEARNING: break;\r\n        default: console.log('wrong log type found');\r\n      }\r\n    }\r\n    console.log(\"project array filtered from calenderUI data:\",this.projectLogArray);\r\n    console.log(\"program array filtered from calenderUI data:\",this.programLogArray);\r\n  }\r\n  createFormArray_NewTracker() {\r\n    this.leaveApplied = LeaveType.NONE;\r\n   \r\n    this._data.logs = this.generateDaysLogs(this._data.date); // create log array for tracker object, by calling program/project api\r\n    console.log(\"_datalogs,\", this._data.logs, \"data log length\", this._data.logs.length);\r\n    // for (let i = 0; i < this._data.logs.length; i++) {\r\n    //   console.log(\"logtype126\", this._data.logs[i].logType, \"i=\", i, \"data log length\", this._data.logs.length);\r\n    //   switch (this._data.logs[i].logType) {\r\n\r\n    //     case LogType.PROJECT: console.log(\"logtypeProject\", this._data.logs[i].logType);\r\n    //       this.projectLogArray.push(this._data.logs[i]); // add this log to projectlogarray\r\n    //       this.projTimeLogsArray.push(new FormControl(this._data.logs[i].logHours));\r\n    //       break;\r\n    //     case LogType.PROGRAM: this.programLogArray.push(this._data.logs[i]); // add this log to programlogarray\r\n    //       this.progTimeLogsArray.push(new FormControl(this._data.logs[i].logHours));\r\n    //       break;\r\n    //     case LogType.SELF_LEARNING: break;\r\n    //     default: console.log('wrong log type found');\r\n    //   }\r\n    // }\r\n    // console.log(\"_datalogs,\", this._data);\r\n    console.log(\"project array\", this.projectLogArray);\r\n  }\r\n  // submit daily tracker\r\n  submitDailyTracker(element1: HTMLElement, element2: HTMLElement) {\r\n    \r\n    this.calTotalHoursOfDay();\r\n    console.log('total hours logged=', this.totalHoursOfDay);\r\n    console.log(this.dailyTracker.value);\r\n    this.updateLogData_LeaveStatus();   // update latest info from the form to send back to calendar. _data is updated\r\n    if (this.leaveApplied == LeaveType.FULL_DAY) {\r\n      this._data.logs = [];   // just before submission, check if FULLDAY leave is applied. If YES, send empty Log array to backend\r\n    }\r\n    if (this.totalHoursValid()) {\r\n      console.log(this.dailyTracker.value);\r\n      if (this.trackerCreated)    // if a new tracker is just created, call the SAVE api\r\n      {\r\n        this.generateTrackerId();\r\n        this.trackerApi.saveTracker(this.createDailyTrackerForBackend()).subscribe((response) => console.log('response from save api from backend', response)); // api call to save the Daily tracker to backend\r\n        this.dialogRef.close(this._data);\r\n      }\r\n      else                      // if its an existing tracker, call UPDATE api\r\n      {\r\n        this.trackerApi.updateTracker(this.createDailyTrackerForBackend()).subscribe(response => console.log('response from Update Api:', response));\r\n        this.dialogRef.close(this._data);\r\n      }\r\n    }\r\n    else {\r\n      if (this.totalHoursOfDay > 8) {\r\n        this.render.setStyle(element1, 'box-shadow', '0 0 5px red,0 0 7px rgb(237, 180, 180)');\r\n        this.render.setStyle(element2, 'box-shadow', '0 0 5px red,0 0 7px rgb(237, 180, 180)');\r\n        this.logMsg = this.totalHoursOfDay + ' hrs logged. Log Exact 8hrs pls.';\r\n      }\r\n      else {\r\n        if (this.trackerCreated) {        // if a new tracker is just created, call the SAVE api\r\n          this.generateTrackerId();\r\n          this.trackerApi.saveTracker(this.createDailyTrackerForBackend()).subscribe((response) => console.log('response from save api from backend', response));\r\n          this.openSnackbar();\r\n          this.dialogRef.close(this._data);\r\n        }\r\n        else                      // if its an existing tracker, call UPDATE api\r\n        {\r\n          this.trackerApi.updateTracker(this.createDailyTrackerForBackend()).subscribe(response => console.log('response from Update Api:', response));\r\n          this.dialogRef.close(this._data);\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  calTotalHoursOfDay() {\r\n\r\n    this.totalHoursOfDay = 0;\r\n    let leaveHours = 0;\r\n    switch (this.leaveApplied) {\r\n      case LeaveType.NONE: leaveHours = 0;\r\n        break;\r\n      case LeaveType.HALF_DAY: leaveHours = 4;\r\n        break;\r\n      case LeaveType.FULL_DAY: leaveHours = 8;\r\n        break;\r\n      default: console.log('wrong leave type entered');\r\n    }\r\n    this.totalHoursOfDay += leaveHours;\r\n\r\n    for (let i = 0; i < this.progTimeLogsArray.length; i++) {     // add prog log hours\r\n      this.totalHoursOfDay += this.progTimeLogsArray.value[i];\r\n    }\r\n\r\n    for (let i = 0; i < this.projTimeLogsArray.length; i++) {     // add proj log hours\r\n      this.totalHoursOfDay += this.projTimeLogsArray.value[i];\r\n    }\r\n    this.totalHoursOfDay += this.dailyTracker.get('slHours')?.value;  // add self learning hours\r\n\r\n    console.log('at end of calculate method:', this.totalHoursOfDay);\r\n  }\r\n\r\n\r\n\r\n  closeDialogue() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  // method to create a dailytracker object that will be returned to calendar when dailyTracker is saved &closed\r\n\r\n  updateLogData_LeaveStatus() {\r\n\r\n    for (let i = 0; i < this.programLogArray.length; i++) {\r\n      this.programLogArray[i].logHours = this.dailyTracker.get('progTimeLogs').value[i];\r\n    }\r\n    for (let i = 0; i < this.projectLogArray.length; i++) {\r\n      this.projectLogArray[i].logHours = this.dailyTracker.get('projTimeLogs').value[i];\r\n    }\r\n    const selfLearningLog = new Log(LogType.SELF_LEARNING, this.dailyTracker.get('slHours')?.value, 'SelfLearning', 0, this.dailyTracker.get('slDetails')?.value);\r\n    this._data.logs = [];\r\n    for (const log of this.programLogArray) {\r\n      this._data.logs.push(log);\r\n    }\r\n    for (const log of this.projectLogArray) {\r\n      this._data.logs.push(log);\r\n    }\r\n    this._data.logs.push(selfLearningLog);\r\n    this._data.leaveType = this.leaveApplied;\r\n    console.log('data:', this._data);\r\n  }\r\n  // generates trackerId for the current dailyTracker object to be created by combining email of user with current date in milliseconds\r\n  generateTrackerId() {\r\n    this._data.trackerId = localStorage.getItem('tgt_email') + \"-\" + (new Date()).getTime();\r\n    console.log('trackerId formed inside generateTrackerId Method', this._data.trackerId);\r\n  }\r\n\r\n  generateDaysLogs(date: Date): Log[] {\r\n    this.getActivePrograms(date);// api call to program service to get active programs list\r\n    this.getActiveProjects(date); // api call to project service to get active project list\r\n    const selfStudyLog = new Log(LogType.SELF_LEARNING, 0, 'SelfLearning', 0, '');\r\n    this.dayLogs.push(selfStudyLog);\r\n    console.log(\"returning dayLogs fron generate method:\", this.dayLogs);\r\n    return this.dayLogs;\r\n  }\r\n\r\n  getActivePrograms(date: Date) {   // this method uses an API call to Program service to get active programs for this date\r\n\r\n    this.progServ.getAllActiveProgramsOnParticularDate(localStorage.getItem('tgt_email'), date.getTime()).subscribe((result: any) => {\r\n      console.log(\"inside generateDaysLogs method.Program list onAPI call is:\", result);\r\n    \r\n      for (let i = 0; i < result.length; i++) {\r\n        const tempLog = new Log(LogType.PROGRAM, 0, result[i].programName, result[i].startDate, '');\r\n        this.dayLogs.push(tempLog);\r\n        this.programLogArray.push(tempLog); // add this log to projectlogarray\r\n        this.progTimeLogsArray.push(new FormControl(tempLog.logHours));\r\n      }\r\n    });\r\n\r\n  }\r\n  getActiveProjects(date: Date) {   // this method uses an API call to Project service to get active programs for this date\r\n\r\n    this.progServ.getAllActiveProjectsOnParticularDate(localStorage.getItem('tgt_email'), date.getTime()).subscribe((result: any) => {\r\n      console.log(\"inside generateDaysLogs method.Project list onAPI call is:\", result);\r\n      \r\n      for (let i = 0; i < result.length; i++) {\r\n        const tempLog = new Log(LogType.PROJECT, 0,result[i].projectName, result[i].startDate, '');\r\n        \r\n\r\n        this.dayLogs.push(tempLog);\r\n        this.projectLogArray.push(tempLog); // add this log to projectlogarray\r\n        this.projTimeLogsArray.push(new FormControl(tempLog.logHours));\r\n      }\r\n    });\r\n\r\n  }\r\n  isFulldayApplied() {\r\n    console.log('leave status:', this.leaveApplied);\r\n    if (this.leaveApplied == LeaveType.FULL_DAY) { return true; }\r\n    else { return false; }\r\n  }\r\n  createDailyTrackerForBackend(): DailyTrackerModel {\r\n    let temp = new DailyTrackerModel(this._data.trackerId, this._data.date.getTime(), localStorage.getItem('tgt_email'), this._data.logs, this._data.leaveType, this._data.remarks); // date is converted to milliseconds with getTime()\r\n    console.log(\"inside createDailyTrackerForBackend tracker object:\", temp);\r\n    return temp;\r\n  }\r\n}\r\n","<mat-icon class=\"close highlightOnHover\" (click)=\"closeDialogue()\">close</mat-icon>\r\n<div class=\"container\" id=\"container-box\" #container>\r\n    <div class=\"header\" mat-dialog-title>\r\n        <div class=\"flex-header\">\r\n            <!-- <mat-icon class=\"highlightOnHover\">keyboard_arrow_left</mat-icon>\r\n            <mat-icon class=\"highlightOnHover\">keyboard_arrow_right</mat-icon> -->\r\n            <mat-icon style=\"font-size:30px;margin-right: 15px;\">calendar_today</mat-icon>\r\n            <span style=\"font-size:30px\">{{_data.date.toDateString()}}</span>\r\n        </div>\r\n    </div>\r\n    <!-- <div id=\"half-day\">\r\n        <mat-slide-toggle [(ngModel)]=\"isChecked\" (toggleChange)=\"updateLeaveStatus()\">HalfDayLeave: {{hdStatus}}\r\n        </mat-slide-toggle>\r\n    </div> -->\r\n    <div class=\"flex-center\">\r\n        <label id=\"example-radio-group-label\" class=\"font-verdana\">Leave </label>\r\n        <mat-radio-group aria-labelledby=\"example-radio-group-label\" class=\"example-radio-group\"\r\n            [(ngModel)]=\"leaveApplied\">\r\n            <mat-radio-button class=\"example-radio-button\" *ngFor=\"let leave of leaves\" [value]=\"leave\" class=\"font-verdana padding-left-20px\" color=\"primary\">\r\n                {{leave}}\r\n            </mat-radio-button>\r\n        </mat-radio-group>\r\n        \r\n    </div>\r\n\r\n\r\n    <div id=\"DailyTrackerForm\" [formGroup]=\"dailyTracker\">\r\n        <h2 [hidden]=\"projectLogArray.length<1\">PROJECTS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"badge bg-success\">Active</span></h2>\r\n        <div class=\"table-container\">\r\n            <table class=\"table table-striped\" [hidden]=\"projectLogArray.length<1\">\r\n                <thead>\r\n                    <tr class=\"logrow\">\r\n                        <th scope=\"col\"></th>\r\n                        <th scope=\"col\">Project Name</th>\r\n                        <th scope=\"col\">Start Date</th>\r\n                        <th scope=\"col\">\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        </th>\r\n                        <th scope=\"col\" class=\"padding-left-20px\">Hours</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody formArrayName=\"projTimeLogs\">\r\n                    <tr *ngFor=\"let project of projTimeLogsArray.controls;let i=index\">\r\n                        <th scope=\"row\">\r\n                            <ngx-avatar name={{projectLogArray[i].taskName}} [round]=\"true\" size=\"40\"></ngx-avatar>\r\n                        </th>\r\n                        <td>{{projectLogArray[i].taskName}}</td>\r\n                        <td>{{projectLogArray[i].startDate | date:\"dd/MM/yyyy\"}}</td>\r\n                        <td></td>\r\n                        <td> <input matInput placeholder=\"Log hrs\" type=\"number\" [formControlName]=\"i\" class=\"loghour\" min=\"0\" max=\"8\">\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        \r\n        <h2 [hidden]=\"programLogArray.length<1\">Programmes&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"badge bg-success\">Active</span></h2>\r\n        <div class=\"table-container\">\r\n            <table class=\"table table-striped\" [hidden]=\"programLogArray.length<1\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\"></th>\r\n                        <th scope=\"col\">Program Name</th>\r\n                        <th scope=\"col\">Start Date</th>\r\n                        <th scope=\"col\">\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        </th>\r\n                        <th scope=\"col\" class=\"padding-left-20px\">Hours</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody formArrayName=\"progTimeLogs\">\r\n                    <tr *ngFor=\"let project of progTimeLogsArray.controls;let i=index\">\r\n                        <th scope=\"row\">\r\n                            <ngx-avatar name={{programLogArray[i].taskName}} size=\"40\"></ngx-avatar>\r\n                        </th>\r\n                        <td>{{programLogArray[i]?.taskName}}</td>\r\n                        <td>{{programLogArray[i]?.startDate| date:\"dd/MM/yyyy\"}}</td>\r\n                        <td></td>\r\n                        <td> <input matInput placeholder=\"Log hrs\" type=\"number\" [formControlName]=\"i\" class=\"loghour\" min=\"0\" max=\"8\">\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <h2>SelfLearning</h2>\r\n        <div class=\"table-container\">\r\n            <table class=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\"></th>\r\n                        <th scope=\"col\"></th>\r\n                        <th scope=\"col\"></th>\r\n                        <th scope=\"col\"></th>\r\n                        <th scope=\"col\" class=\"padding-left-30px\">Hours</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr >\r\n                        <th scope=\"row\">\r\n                            <ngx-avatar name=\"Self Learning\" size=\"40\"></ngx-avatar>\r\n                        </th>\r\n                        <td>Self-Learning</td>\r\n                        <td><input matInput placeholder=\"What did you learn\" value=\"0\" type=\"text\"\r\n                                formControlName=\"slDetails\" class=\"SLDetails\" disabled=\"isFulldayApplied()\"></td>\r\n                        <td></td>\r\n                        <td> <input matInput placeholder=\"Log hrs\" value=\"0\" type=\"number\" formControlName=\"slHours\"\r\n                                class=\"loghour\" min=\"0\" max=\"8\"></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div class=\"example-form-remarks\">\r\n            <mat-form-field class=\"example-full-width-remarks\" appearance=\"fill\">\r\n                <mat-label>Remarks</mat-label>\r\n                <input matInput #message maxlength=\"256\" placeholder=\"Any additional information for the day.\"\r\n                    formControlName=\"remarks\" >\r\n                <mat-hint align=\"start\"><strong>*Not Mandatory</strong> </mat-hint>\r\n                <mat-hint align=\"end\">{{message.value.length}} / 256</mat-hint>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n    </div>\r\n    <button id=\"save\" mat-raised-button (click)=\"submitDailyTracker(alert,container)\" color=\"primary\" >SAVE</button>\r\n    <div class=\"alert alert-dark\" role=\"alert\" #alert  >\r\n        {{logMsg}}\r\n    </div>\r\n\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ProgramService } from 'src/app/service/program.service';\r\nimport { AddProjectMembersComponent } from '../add-project-members/add-project-members.component';\r\nimport { ViewProjectCardComponent } from '../view-project-card/view-project-card.component';\r\n\r\n@Component({\r\n  selector: 'app-project-card',\r\n  templateUrl: './project-card.component.html',\r\n  styleUrls: ['./project-card.component.css'],\r\n})\r\nexport class ProjectCardComponent implements OnInit {\r\n\r\n  role: string;\r\n  imageURL: any;\r\n\r\n  constructor(\r\n    private sanitizer: DomSanitizer,\r\n    public dialog: MatDialog,\r\n    private programService: ProgramService\r\n  ) {\r\n    this.role = '';\r\n  }\r\n\r\n  @Input() public projectData: any;\r\n\r\n  showProjectDetails(projectName: any): void {\r\n    console.log(projectName);\r\n\r\n    this.programService.getProjectDetails(projectName).subscribe((response) => {\r\n      console.log(response);\r\n      this.dialog.open(ViewProjectCardComponent, {\r\n        width: '600px',\r\n        data: response,\r\n      });\r\n    });\r\n  }\r\n\r\n  addProjectMembers(event: any, projectName: string): void {\r\n    event.stopPropagation();\r\n    this.dialog.open(AddProjectMembersComponent, {\r\n      width: '600px',\r\n      data: projectName,\r\n    });\r\n    console.log(projectName);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.role = window.localStorage.getItem('role');\r\n\r\n    this.imageURL = this.sanitizer.bypassSecurityTrustResourceUrl(\r\n      'data:image/jpg;base64,' + this.projectData.organizationBrandLogo\r\n    );\r\n  }\r\n}\r\n","<mat-card\r\n  class=\"example-card\"\r\n  [ngClass]=\"{\r\n    'active-project': projectData?.projectStatus === 'ACTIVE',\r\n    'inactive-project': projectData?.projectStatus === 'INACTIVE'\r\n  }\"\r\n  projectData\r\n  (click)=\"showProjectDetails(projectData?.projectName)\"\r\n>\r\n  <img mat-card-image [src]=\"imageURL\" [alt]=\"projectData?.organizationName\" />\r\n  <mat-card-header>\r\n    <mat-card-title>{{ projectData?.projectName }} </mat-card-title>\r\n    <!-- <mat-card-subtitle>{{ projectData?.organizationName }}</mat-card-subtitle> -->\r\n  </mat-card-header>\r\n\r\n  <mat-card-content>\r\n    <mat-icon\r\n      inline=\"true\"\r\n      (click)=\"addProjectMembers($event, projectData?.projectName)\"\r\n      *ngIf=\"role === 'MANAGER'\"\r\n    >\r\n      group_add</mat-icon\r\n    >\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-all-charts',\r\n  templateUrl: './all-charts.component.html',\r\n  styleUrls: ['./all-charts.component.css']\r\n})\r\nexport class AllChartsComponent implements OnInit {\r\n\r\n  public role: any;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.role = window.localStorage.getItem('role');\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"secondary-container\">\r\n    <div class=\"title\">\r\n      DASHBOARDS\r\n    </div><br><br>\r\n    <div class=\"chart-div\">\r\n      <ul class=\"nav nav-tabs\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/home/analytics/external-programs\">External Programs</a>\r\n        </li>\r\n        <li  class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/home/analytics/internal-projects\">Internal Projects</a>\r\n        </li>\r\n        <li  *ngIf=\"role==='OPERATIONS'\" class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/home/analytics/employee-distribution-in-external-programs\">Employee Distribution (Programs)</a>\r\n        </li>\r\n        <li  *ngIf=\"role==='OPERATIONS'\" class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/home/analytics/employee-distribution-in-internal-projects\">Employee Distribution (Projects)</a>\r\n        </li>\r\n        <!-- <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/home/analytics/pie-chart\">Pie Chart</a>\r\n        </li> -->\r\n      </ul>\r\n    </div>\r\n    <div>\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<script src=\"../../../../node_modules\\chart.js\\dist\\chart.js\"></script>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { EmployeeService } from 'src/app/service/employee.service';\r\nimport { ProgramService } from 'src/app/service/program.service';\r\n\r\n@Component({\r\n  selector: 'app-add-project',\r\n  templateUrl: './add-project.component.html',\r\n  styleUrls: ['./add-project.component.css'],\r\n})\r\nexport class AddProjectComponent implements OnInit {\r\n  addProjectForm: FormGroup;\r\n  file: File;\r\n  managersArray = [];\r\n\r\n  constructor(\r\n    formBuilder: FormBuilder,\r\n    private programService: ProgramService,\r\n    private snackBar: MatSnackBar,\r\n    private employeeService: EmployeeService\r\n  ) {\r\n    this.addProjectForm = formBuilder.group({\r\n      projectName: new FormControl('', Validators.required),\r\n      projectCode: new FormControl('', [Validators.required]),\r\n      costCode: new FormControl('', Validators.required),\r\n      customerId: new FormControl('', Validators.required),\r\n      managerEmailId: new FormControl('', Validators.required),\r\n      startDate: new FormControl('', Validators.required),\r\n      endDate: new FormControl('', Validators.required),\r\n      image: new FormControl('', Validators.required),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllManagers();\r\n  }\r\n\r\n  onFileUpload(event: any): void {\r\n    this.file = event.target.files[0];\r\n  }\r\n\r\n  saveProject(): void {\r\n    this.addProjectForm.patchValue({\r\n      startDate: this.addProjectForm.value.startDate.getTime(),\r\n      endDate: this.addProjectForm.value.endDate.getTime()\r\n    })\r\n\r\n    const projectData: FormData = new FormData();\r\n\r\n    projectData.append('image', this.file, this.file.name);\r\n    projectData.append('project', JSON.stringify(this.addProjectForm.value));\r\n\r\n    this.programService.addProject(projectData).subscribe(\r\n      (response) => {\r\n        this.snackBar.open('Project Created Successfully.', '', {\r\n          duration: 5000,\r\n          horizontalPosition: 'center',\r\n          verticalPosition: 'top',\r\n          panelClass: ['mat-toolbar', 'mat-primary']\r\n        });\r\n\r\n        this.addProjectForm.reset();\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        this.snackBar.open('Some error occured while adding Program.', '', {\r\n          duration: 5000,\r\n          horizontalPosition: 'center',\r\n          verticalPosition: 'top',\r\n          panelClass: ['mat-toolbar', 'mat-warn']\r\n        });\r\n\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  getAllManagers(): void {\r\n    this.employeeService.getEmployeesByRole('MANAGER').subscribe((response) => {\r\n      // console.log(response);\r\n      response.forEach((manager) => {\r\n        console.log(manager.emailId);\r\n        this.managersArray.push(manager.emailId);\r\n      });\r\n    });\r\n  }\r\n}\r\n","<div mat-dialog-title class=\"flex-container\">\r\n  <h1 mat-dialog-title>Create New Project</h1>\r\n  <span class=\"example-spacer\"></span>\r\n  <mat-icon [mat-dialog-close]=\"true\" matTooltip=\"Close\">close</mat-icon>\r\n</div>\r\n\r\n<mat-dialog-content class=\"mat-typography\">\r\n  <form [formGroup]=\"addProjectForm\" class=\"example-form\">\r\n    <div fxFlex=\"100%\" fxLayout=\"column\">\r\n      <div fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutGap=\"2%\">\r\n        <mat-form-field\r\n          appearance=\"outline\"\r\n          class=\"example-full-width\"\r\n          fxFlex=\"50%\"\r\n        >\r\n          <mat-label>Project Name</mat-label>\r\n          <input\r\n            formControlName=\"projectName\"\r\n            #projectName\r\n            matInput\r\n            maxlength=\"20\"\r\n            required\r\n          />\r\n          <mat-hint align=\"end\"\r\n            >{{ projectName.value?.length || 0 }}/20</mat-hint\r\n          >\r\n        </mat-form-field>\r\n        <div fxFlex=\"50%\">\r\n          <label>Project Logo </label>\r\n          <br />\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            formControlName=\"image\"\r\n            (change)=\"onFileUpload($event)\"\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutGap=\"2%\">\r\n        <mat-form-field\r\n          appearance=\"outline\"\r\n          class=\"example-full-width\"\r\n          fxFlex=\"50%\"\r\n        >\r\n          <mat-label>Manager Email Id</mat-label>\r\n          <mat-select formControlName=\"managerEmailId\" required>\r\n            <mat-option\r\n              *ngFor=\"let manager of managersArray\"\r\n              [value]=\"manager\"\r\n              >{{ manager }}</mat-option\r\n            >\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field\r\n          appearance=\"outline\"\r\n          class=\"example-full-width\"\r\n          fxFlex=\"50%\"\r\n        >\r\n          <mat-label>Enter Date Range for Project</mat-label>\r\n          <mat-date-range-input [rangePicker]=\"picker\">\r\n            <input\r\n              formControlName=\"startDate\"\r\n              matStartDate\r\n              placeholder=\"Start date\"\r\n              required\r\n            />\r\n            <input\r\n              formControlName=\"endDate\"\r\n              matEndDate\r\n              placeholder=\"End date\"\r\n              required\r\n            />\r\n          </mat-date-range-input>\r\n          <mat-hint>MM/DD/YYYY – MM/DD/YYYY</mat-hint>\r\n          <mat-datepicker-toggle\r\n            [for]=\"picker\"\r\n            matSuffix\r\n          ></mat-datepicker-toggle>\r\n          <mat-date-range-picker #picker></mat-date-range-picker>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutGap=\"2%\">\r\n        <mat-form-field\r\n          appearance=\"outline\"\r\n          class=\"example-full-width\"\r\n          fxFlex=\"33%\"\r\n        >\r\n          <mat-label>Project Code</mat-label>\r\n          <input\r\n            formControlName=\"projectCode\"\r\n            matInput\r\n            required\r\n            type=\"number\"\r\n          />\r\n        </mat-form-field>\r\n        <mat-form-field\r\n          appearance=\"outline\"\r\n          class=\"example-full-width\"\r\n          fxFlex=\"33%\"\r\n        >\r\n          <mat-label>Cost Code</mat-label>\r\n          <input formControlName=\"costCode\" matInput required type=\"number\" />\r\n        </mat-form-field>\r\n        <mat-form-field\r\n          appearance=\"outline\"\r\n          class=\"example-full-width\"\r\n          fxFlex=\"33%\"\r\n        >\r\n          <mat-label>Customer Code</mat-label>\r\n          <input formControlName=\"customerId\" matInput required type=\"number\" />\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions align=\"end\">\r\n  <button (click)=\"addProjectForm.reset()\" mat-raised-button>Reset</button>\r\n  <button\r\n    [mat-dialog-close]=\"true\"\r\n    (click)=\"saveProject()\"\r\n    [disabled]=\"!addProjectForm.valid\"\r\n    color=\"primary\"\r\n    mat-raised-button\r\n  >\r\n    Create\r\n  </button>\r\n</mat-dialog-actions>\r\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { LoginData } from '../component/register-login/login-data';\r\nimport { RegisterData } from '../component/register-login/register-data';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class EmployeeService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  userAuthenticationBaseUrl = 'https://nouveautracker.stackroute.io/authentication-service/api/v1/account';    // for register/login in mySql\r\n  userEmployeeServiceBaseUrl = 'https://nouveautracker.stackroute.io/employee-service/api/v1/employee';       // for updation of employee in mongoDB\r\n\r\n  // userAuthenticationBaseUrl = 'http://localhost:8080/authentication-service/api/v1/account';    // for register/login in mySql\r\n  // userEmployeeServiceBaseUrl = 'http://localhost:8080/employee-service/api/v1/employee';       // for updation of employee in mongoDB\r\n\r\n  register(registerData: RegisterData): any {\r\n    return this.httpClient.post<any>(this.userAuthenticationBaseUrl + '/register', registerData);\r\n  }\r\n\r\n\r\n  login(loginData: LoginData): any{\r\n    return this.httpClient.post<any>(this.userAuthenticationBaseUrl + '/login', loginData);\r\n  }\r\n\r\n  getEmployee(emailId: string): any{\r\n    const reqHeader = new HttpHeaders().set('Authorization', 'Bearer ' + window.localStorage.getItem('tgt'));\r\n    return this.httpClient.get<any>(this.userEmployeeServiceBaseUrl + '/employee?emailid=' + emailId, {headers: reqHeader});\r\n  }\r\n\r\n  getEmployeesByRole(role: string): any {\r\n    const reqHeader = new HttpHeaders().set('Authorization', 'Bearer ' + window.localStorage.getItem('tgt'));\r\n    return this.httpClient.get<any>(this.userEmployeeServiceBaseUrl + '/byrole?role=' + role, {headers: reqHeader});\r\n  }\r\n\r\n  getEmployeesWorkingForAParticularManager(managerEmailId: string): any {\r\n    const reqHeader = new HttpHeaders().set('Authorization', 'Bearer ' + window.localStorage.getItem('tgt'));\r\n    return this.httpClient.get<any>(\r\n      this.userEmployeeServiceBaseUrl + '/bymanageremailid?manageremailid=' + managerEmailId,\r\n      {headers: reqHeader});\r\n  }\r\n\r\n  public updateUserProfileImage(formData: FormData): any {\r\n    const reqHeader = new HttpHeaders().set('Authorization', 'Bearer ' + window.localStorage.getItem('tgt'));\r\n    return this.httpClient.put<any>(\r\n      this.userEmployeeServiceBaseUrl + '/profileimage', formData, {headers: reqHeader}).subscribe(\r\n        (res) => console.log(res),\r\n        (err) => console.log(err)\r\n      );\r\n  }\r\n  getAllEmployees(){\r\n    return this.httpClient.get(this.userEmployeeServiceBaseUrl+\"/employees\");\r\n  }\r\n\r\n}\r\n","\r\nexport class MonthlyTracker {\r\n\r\n    monthlyTrackerId: string;\r\n    employeeEmail: string;\r\n    status: string;\r\n    year: number;\r\n    monthName: string;\r\n    startDate: number;\r\n    endDate: number;\r\n    remarks: string;\r\n    \r\n    constructor(id:string,email:string,status:string,year:number,month:string,startDate:number,endDate:number,remarks:string){\r\n        this.monthlyTrackerId=id;\r\n        this.employeeEmail=email;\r\n        this.status=status;\r\n        this.year=year;\r\n        this.startDate=startDate;\r\n        this.endDate=endDate;\r\n        this.remarks=remarks;\r\n        this.monthName=month;\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-snackbar',\r\n  templateUrl: './snackbar.component.html',\r\n  styleUrls: ['./snackbar.component.css']\r\n})\r\nexport class SnackbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"alert\">\r\n    <div class=\"container\">\r\n  <mat-icon>warning</mat-icon><span>Log Hours Incomplete. Fill 8hr log ASAP.</span>\r\n  </div>\r\n</div >\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, FormGroupDirective } from '@angular/forms';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { EmployeeService } from 'src/app/service/employee.service';\r\nimport { LoginData } from './login-data';\r\nimport { RegisterData } from './register-data';\r\n\r\n@Component({\r\n  selector: 'app-register-login',\r\n  templateUrl: './register-login.component.html',\r\n  styleUrls: ['./register-login.component.css']\r\n})\r\nexport class RegisterLoginComponent implements OnInit {\r\n\r\n\r\n  constructor(private employeeService: EmployeeService,\r\n              private router: Router,\r\n              private snackBar: MatSnackBar,\r\n              private matIconRegistry: MatIconRegistry,\r\n              private domSanitizer: DomSanitizer ) {\r\n                    this.matIconRegistry.addSvgIcon('logo', this.domSanitizer.bypassSecurityTrustResourceUrl(this.googleLogoURL));\r\n  }\r\n\r\n  googleLogoURL = 'https://raw.githubusercontent.com/fireflysemantics/logo/master/Google.svg';\r\n  indexOfSelectedTab: number;\r\n\r\n  loginData: LoginData;\r\n  registerData: RegisterData;\r\n\r\n  hideLoginPassword = true;\r\n  hideRegisterPassword = true;\r\n\r\n\r\n  // definining formgroup shape to capture while logging in.\r\n  loginFormGroup = new FormGroup ({\r\n    emailId: new FormControl('', Validators.pattern(\"([!#-'*+/-9=?A-Z^-~-]+(\\.[!#-'*+/-9=?A-Z^-~-]+)*|\\\"\\(\\[\\]!#-[^-~ \\t]|(\\\\[\\t -~]))+\\\")@([!#-'*+/-9=?A-Z^-~-]+(\\.[!#-'*+/-9=?A-Z^-~-]+)*|\\[[\\t -Z^-~]*])\")),\r\n    password: new FormControl('', Validators.pattern(\"(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{7,20}\")),\r\n  });\r\n\r\n  // definining formgroup shape to capture while registering.\r\n  registerFormGroup = new FormGroup ({\r\n    employeeName: new FormControl(''),\r\n    emailId: new FormControl('', Validators.pattern(\"([!#-'*+/-9=?A-Z^-~-]+(\\.[!#-'*+/-9=?A-Z^-~-]+)*|\\\"\\(\\[\\]!#-[^-~ \\t]|(\\\\[\\t -~]))+\\\")@([!#-'*+/-9=?A-Z^-~-]+(\\.[!#-'*+/-9=?A-Z^-~-]+)*|\\[[\\t -Z^-~]*])\")),\r\n    password: new FormControl('', Validators.pattern(\"(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{7,20}\") ),\r\n  });\r\n\r\n  onLogin(): void {\r\n    this.loginData = this.loginFormGroup.value;\r\n    this.employeeService.login(this.loginData).subscribe(\r\n      response => {\r\n        console.log('User login success : ');\r\n        console.log(response);\r\n        window.localStorage.setItem('tgt', response.token);\r\n        window.localStorage.setItem('tgt_email', response.emailId);\r\n        this.getEmployee(window.localStorage.getItem('tgt_email'));\r\n        // this.loginFormGroup.reset();\r\n       \r\n      },\r\n      error => {\r\n        console.log('error message : ');\r\n        console.log(error);\r\n        this.snackBar.open('Invalid credentials. Please try again.', '', {\r\n          duration: 5000,\r\n          horizontalPosition: 'center',\r\n          verticalPosition: 'top',\r\n          panelClass: ['mat-toolbar', 'mat-warn']\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  getEmployee(emailId: string): void{\r\n    this.employeeService.getEmployee(emailId).subscribe(\r\n      response => {\r\n        console.log('Employee data retrieved : ');\r\n        console.log(response);\r\n        // this.employee = response;\r\n        window.localStorage.setItem('role', response.role);\r\n        if(response.role=='EMPLOYEE') {\r\n          this.router.navigate(['/home/calendar']).then(() => {\r\n          });\r\n        }\r\n        else {\r\n          this.router.navigate(['/home/view-program-manager']).then(() => {\r\n          });\r\n        }\r\n        \r\n        // console.log(\"employee object : \");\r\n        // console.log(this.employee);\r\n      },\r\n      error => {\r\n        console.log('error message : ');\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  onRegister(formGroupDirective: FormGroupDirective): void {\r\n    this.registerData = this.registerFormGroup.value;\r\n    this.employeeService.register(this.registerData).subscribe(\r\n      response => {\r\n        console.log('User registration success : ');\r\n        console.log(response);\r\n        this.indexOfSelectedTab = 0;     // to redirect to login tab\r\n        formGroupDirective.resetForm();  // formdirective is used only to reset this form.\r\n        this.snackBar.open('Your account has been created. Please log in.', '', {\r\n          duration: 5000,\r\n          horizontalPosition: 'center',\r\n          verticalPosition: 'top',\r\n          panelClass: ['mat-toolbar', 'mat-primary']\r\n        });\r\n      },\r\n      error => {\r\n        console.log('error message : ');\r\n        console.log(error);\r\n        this.snackBar.open('User already exists! Please log in', '', {\r\n          duration: 5000,\r\n          horizontalPosition: 'center',\r\n          verticalPosition: 'top',\r\n          panelClass: ['mat-toolbar', 'mat-warn']\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ////////////////////////////////\r\n  // loginUsingGoogle(): void {\r\n  //   this.securityService.login();\r\n  // }\r\n\r\n}\r\n","<div class=\"maindiv\">\r\n  <div style=\"display: flex; flex-wrap: wrap; justify-content: space-around;\">\r\n      <div><br><br>\r\n        <h1>NouveauTracker</h1><br><br><br>\r\n        <h2>No more hassles!</h2>\r\n        <h2>Track time directly to Agile projects</h2><br>\r\n        <div class=\"logo-holder\">\r\n          <div class=\"bar fill2\"></div>\r\n          <div class=\"bar fill4\"></div>\r\n          <div class=\"bar fill5\"></div>\r\n          <div class=\"bar fill6\"></div>\r\n          <div class=\"bar\"></div>\r\n          <div class=\"bar fill1\"></div>\r\n          <div class=\"bar fill3\"></div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <mat-card class=\"mat-elevation-z5\">\r\n          <!-- <mat-card-title style=\"text-align:center;\">Login / Register</mat-card-title> -->\r\n          <mat-tab-group mat-stretch-tabs class=\"example-stretched-tabs\" animationDuration=\"1000ms\" dynamicHeight [(selectedIndex)]=\"indexOfSelectedTab\">\r\n            <mat-tab label=\"Login\" id=\"logintab\">\r\n                <mat-card-content>\r\n                  <form [formGroup]=\"loginFormGroup\" (ngSubmit)=\"onLogin()\">\r\n                    <mat-form-field>\r\n                      <input\r\n                        matInput\r\n                        placeholder=\"Email\"\r\n                        required\r\n                        formControlName=\"emailId\">\r\n                        <mat-error>Email must be valid</mat-error>\r\n                      <mat-icon matSuffix>email</mat-icon>\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                      <input\r\n                        matInput\r\n                        placeholder=\"Password\"\r\n                        [type]=\"hideLoginPassword ? 'password' : 'text'\"\r\n                        formControlName=\"password\"\r\n                        required\r\n                        minlength=\"8\">\r\n                        <mat-error>\r\n                          Password must contain atleast 8 characters (one uppercase, one lowercase, a digit between 0-9 and a special character)\r\n                        </mat-error>               \r\n                      <mat-icon matSuffix (click)=\"hideLoginPassword = !hideLoginPassword\">{{hideLoginPassword ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                    </mat-form-field>\r\n                    <mat-checkbox style=\"margin-bottom: 35px;\">Remember Me!</mat-checkbox>\r\n                    <button\r\n                        mat-raised-button\r\n                        type=\"submit\"  [disabled]=\"loginFormGroup.invalid\"\r\n                        color=\"primary\"\r\n                        class=\"login-button\">\r\n                        <span>Login</span> \r\n                    </button>\r\n                    <!-- <button (click)=\"loginUsingGoogle()\" mat-raised-button type=\"button\" class=\"login-button\">\r\n                       <a style=\"color: black;\">\r\n                        <mat-icon svgIcon=\"logo\" style=\"padding-right: 5px; width: 20px; margin-bottom: 13px;\"></mat-icon> \r\n                        <span> &nbsp; Login with Google</span> \r\n                       </a> \r\n                    </button> -->\r\n                  </form>\r\n                </mat-card-content>\r\n            </mat-tab>\r\n            <mat-tab label=\"Register\">\r\n              <mat-card-content>\r\n                <form [formGroup]=\"registerFormGroup\" #formGroupDirective=\"ngForm\" (ngSubmit)=\"onRegister(formGroupDirective)\">\r\n                  <mat-form-field>\r\n                    <input matInput required placeholder=\"Employee Name\" formControlName=\"employeeName\">\r\n                    <mat-icon matSuffix>perm_identity</mat-icon>\r\n                    <mat-error>\r\n                      What's your name?\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                  <mat-form-field>\r\n                    <input\r\n                      matInput\r\n                      required\r\n                      placeholder=\"Email\"\r\n                      formControlName=\"emailId\">\r\n                      <mat-error>Email must be valid</mat-error>\r\n                    <mat-icon matSuffix>email</mat-icon>\r\n                  </mat-form-field>\r\n                  <mat-form-field>\r\n                    <input\r\n                      matInput\r\n                      required\r\n                      placeholder=\"Password\"\r\n                      [type]=\"hideRegisterPassword ? 'password' : 'text'\"\r\n                      minlength=\"8\"\r\n                      formControlName=\"password\">\r\n                      <mat-error>\r\n                        Password must contain atleast 8 characters (one uppercase, one lowercase, a digit between 0-9 and a special character)\r\n                      </mat-error>\r\n                    <mat-icon matSuffix (click)=\"hideRegisterPassword = !hideRegisterPassword\">{{hideRegisterPassword ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n    \r\n                  </mat-form-field>\r\n                  <button\r\n                    mat-raised-button\r\n                    type=\"submit\" [disabled]=\"registerFormGroup.invalid\"\r\n                    color=\"primary\"\r\n                    class=\"login-button\">\r\n                   <span>Register</span> \r\n                  </button>\r\n                </form>\r\n              </mat-card-content>\r\n            </mat-tab>\r\n          </mat-tab-group>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n</div>\r\n  <!-- ///////////////////////////////////// -->\r\n<div  class=\"features-div\">\r\n  <div class=\"features-head\">\r\n    <h1>Time Management Features</h1>\r\n    <h2>Across Devices</h2>\r\n  \r\n    <p>Track productivity, attendance, and \r\n      performance with a simple time tracker and calendar.\r\n    </p>\r\n  </div>\r\n  <div class=\"cards\">\r\n    <div class=\"col\">\r\n      <div class=\"card aqua\">\r\n        <h2>Time Tracker</h2>\r\n        <p>Update your daily tracker in less than 30 seconds manually</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"col\">\r\n      <div class=\"card red\">\r\n        <h2>Program/Project</h2>\r\n        <p>Operations team adds new program/project and assign it to a manager</p>\r\n      </div>\r\n    \r\n      <div class=\"card orange\">\r\n        <h2>Reports</h2>\r\n        <p>Consolidated reports, approval sheets and final reports, and export the data</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"col\">\r\n      <div class=\"card blue\">\r\n        <h2>Dashboard</h2>\r\n        <p>Visual dashboards to see where you spend time and what your team is working on.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- ///////////////////////////////////// -->\r\n<div class=\"why-nouveautracker\">\r\n  <div class=\"features-head\">\r\n    <h1 style=\"color: rgb(226, 223, 223)\">Why track time with NouveauTracker</h1>\r\n  </div>\r\n  <div class=\"why-container\" >\r\n    <div class=\"why-features\" >\r\n      <img src=\"../../../assets/productivity.jpg\" alt=\"\">\r\n      <h2>Boost Productivity</h2>\r\n      <p>Track time you spend on activities, see where your time goes, and improve your time management skills. </p>\r\n    </div>\r\n    <div class=\"why-features\">\r\n      <img src=\"../../../assets/billing.jpg\" alt=\"\">\r\n      <h2>Bill Clients</h2>\r\n      <p>Track billable time, show clients how much you've worked, see how much money you've earned, and create invoices.</p>\r\n    </div>\r\n    <div class=\"why-features\">\r\n      <img src=\"../../../assets/business-intelligence.jpg\" alt=\"\">\r\n      <h2>Business Intelligence</h2>\r\n      <p>Measure time spent on daily activities to find opportunities for improvements, understand time spent on ad-hoc requests and workload distribution, and improve project efficiency and cost capitalisation.</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- ////////////////////////////////////////// -->\r\n<div class=\"email-24\">\r\n  <div class=\"leaf-body\">\r\n    <div class=\"leaf-container\">\r\n      <div>\r\n        <div class=\"leafs\">\r\n          <img class=\"leaf1\" src=\"https://assets.codepen.io/2621168/leaf1.png\" alt=\"leaf\">\r\n          <img class=\"leaf2\" src=\"https://assets.codepen.io/2621168/leaf2.png\" alt=\"leaf\">\r\n          <img class=\"leaf3\" src=\"https://assets.codepen.io/2621168/leaf3.png\" alt=\"leaf\">\r\n        </div>\r\n        \r\n        <svg viewBox=\"0 0 1 1\"  width=\"250.0px\" height=\"100.0px\" overflow=\"visible\">\r\n          <defs >\r\n              <clipPath  clipPathUnits=\"objectBoundingBox\" id=\"deermask\">\r\n                  <path d=\"M303.49,371.1l-.2-.511a.145.145,0,0,0-.188-.082l-.511.2a.145.145,0,0,0-.082.188l.2.511a.145.145,0,0,0,.188.082l.511-.2A.145.145,0,0,0,303.49,371.1Zm-.547.166a.079.079,0,0,1-.1-.045l-.109-.281a.079.079,0,0,1,.045-.1l.281-.109a.079.079,0,0,1,.1.045l.109.281a.079.079,0,0,1-.045.1Z\" transform=\"translate(-302.5 -370.5)\" fill=\"#fff\"/>\r\n              </clipPath>\r\n          </defs>\r\n        </svg> \r\n      </div>\r\n      <div >\r\n        <h2> &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; Get emails and stay updated ! </h2>\r\n        <!-- <h3>Gmail</h3> -->\r\n            \r\n      </div>\r\n    </div>  \r\n  </div>\r\n  <div class=\"leaf-body\">\r\n    <div class=\"leaf-container\">\r\n      <div >\r\n        <h2>24/7 service for our customers &nbsp;&nbsp;</h2>\r\n      </div>\r\n      <div>\r\n        <div class=\"loop-wrapper\">\r\n          <div class=\"mountain\"></div>\r\n          <div class=\"hill\"></div>\r\n          <div class=\"tree\"></div>\r\n          <div class=\"tree\"></div>\r\n          <div class=\"tree\"></div>\r\n          <div class=\"rock\"></div>\r\n          <div class=\"truck\"></div>\r\n          <div class=\"wheels\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- ////////////////////////////////////////////////// -->\r\n<footer>\r\n  <ul class=\"social-icon\">\r\n    <li><a href=\"#\"><img src=\"../../../assets/facebook white.ico\" alt=\"\"></a></li>\r\n    <li><a href=\"#\"><img src=\"../../../assets/twitter white.ico\" alt=\"\"></a></li>\r\n    <li><a href=\"#\"><img src=\"../../../assets/gmail white.ico\" alt=\"\"></a></li>\r\n    <li><a href=\"#\"><img src=\"../../../assets/linkedin white.ico\" alt=\"\"></a></li>\r\n  </ul>\r\n  <ul class=\"menu\">\r\n    <li><a href=\"\">Home</a></li>\r\n    <li><a href=\"\">Team</a></li>\r\n    <li><a href=\"\">Feedback</a></li>\r\n  </ul>\r\n  <!-- <p>©2022 NouveauTracker | All Rights Reserved</p>   -->\r\n</footer>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport * as moment from 'moment';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { TimeTrackerComponent } from '../time-tracker/time-tracker.component';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { DailyTracker, LeaveType } from 'src/app/model/daily-tracker';\r\nimport { Program, ProgramType } from 'src/app/model/program';\r\nimport { Log, LogType } from 'src/app/model/log';\r\nimport { templateJitUrl } from '@angular/compiler';\r\nimport { DailyTrackerService } from 'src/app/service/daily-tracker.service';\r\nimport { DailyTrackerModel } from 'src/app/model/daily-tracker-model';\r\nimport { MissingTrackersComponent } from '../missing-trackers/missing-trackers.component';\r\nimport { MonthlyTrackerService } from 'src/app/service/monthly-tracker.service';\r\nimport { MonthlyTracker } from 'src/app/model/monthly-tracker';\r\n\r\n@Component({\r\n  selector: 'app-calendar',\r\n  templateUrl: './calendar.component.html',\r\n  styleUrls: ['./calendar.component.css']\r\n})\r\nexport class CalendarComponent implements OnInit {\r\n  // all data variables\r\n  trackerListMonth: DailyTracker[] = []; // list of DailyTracker objects for a month displayed\r\n  daysInMonth = 0; // captures total number of days in a monmth being displayed\r\n  firstDay = 0; // for capturing the weekday from which month starts\r\n  month = 0; // use to create tracker object array for a month\r\n  year = 0; // used to create tracked object array for a month\r\n  employeeEmail = '';\r\n  todaysDate = moment(); // keeps current date throughout the program\r\n  date = moment(); // used to navigate and show different month tracker object in calendar\r\n  desiredDate: Date = new Date(); // ngModel variable to pick date from nav calendar\r\n  dailyTrackerForm: FormGroup;\r\n  projectArray: Program[];\r\n  programArray: Program[];\r\n  firstDayOfMonth: Date;\r\n  lastDayOfMonth: Date;\r\n  mSD: number = 21;           //monthly submission date on which monthly tracker submit button gets active every month, set to 21st of every month currently\r\n  monthlySubmissionActive: boolean = false;\r\n  allMonths: string[] = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];//array to convert an index into month name\r\n  allTrackersComplete:boolean; //used in monthlySubmission() to check if all logs are complete, to proceed with saving with api in backend\r\n  mtToDate: moment.Moment;   //end date of monthly tracker report\r\n  mtFromDate: moment.Moment;//start date of monthly tracker report\r\n  monthlyTrackerMadeAlready: boolean;\r\n\r\n\r\n  constructor(public _fb: FormBuilder, public dialog: MatDialog, private apiService: DailyTrackerService, private monthlyService: MonthlyTrackerService) {\r\n    this.dailyTrackerForm = this._fb.group({\r\n      calendarDays: this._fb.array([])\r\n    });\r\n\r\n  }\r\n\r\n  // ON-INIT METHOD\r\n  ngOnInit(): void {\r\n\r\n\r\n    this.createMonthTrackers();\r\n    this.checkIfMonthlySubmissionActive();\r\n\r\n\r\n  }\r\n\r\n  // method to load a picked month\r\n\r\n  loadMonth() {\r\n    this.date = moment(this.desiredDate);\r\n    this.createMonthTrackers();\r\n    this.checkIfMonthlySubmissionActive();\r\n  }\r\n\r\n  // method to Create DailyTracker objects for a month\r\n  createMonthTrackers() {\r\n\r\n    this.trackerListMonth = [];\r\n    this.daysInMonth = moment(this.date).daysInMonth();\r\n    this.firstDay = moment(this.date).startOf('M').weekday(); // gives weekday for first day of month in number e.g 5 for friday\r\n    this.month = this.date.month() + 1; // month() returns 6 for July, we need to have 7 for july\r\n    this.year = this.date.year();\r\n    for (let j = 0; j < this.firstDay; j++)// loop to make state=false for inserting null trackers to shift first day of month to correct weekday in calendar\r\n    {\r\n      const temp = new DailyTracker(new Date(), false);\r\n      this.trackerListMonth.unshift(temp);\r\n    }\r\n    for (let i = 1; i <= this.daysInMonth; i++) {\r\n\r\n      const dateStr = this.year + '-' + this.month + '-' + i;\r\n      if (i == 1) {\r\n        this.firstDayOfMonth = new Date(dateStr); // capture first DATE of month\r\n      }\r\n      if (i == this.daysInMonth) {\r\n        this.lastDayOfMonth = new Date(dateStr); // capture last DATE of month\r\n      }\r\n      const temp = new DailyTracker(new Date(dateStr), true);\r\n      temp.employeeEmail = this.employeeEmail;\r\n      this.trackerListMonth.push(temp);\r\n    }\r\n    this.showCurrentDay();\r\n    console.table(this.trackerListMonth);\r\n    //get tracker data from backend and update in frontend tracker objects of calendar\r\n    this.getAllTrackersFromDB().subscribe((result: any) => {\r\n      console.log(\"tracker for whole month from backend\", result);\r\n      let trackerListFromDB = result;\r\n      for (let i = 0; i < trackerListFromDB.length; i++) {\r\n        for (let j = 0; j < this.trackerListMonth.length; j++) {\r\n          if (trackerListFromDB[i].date == this.trackerListMonth[j].date.getTime())// if dates match\r\n          {\r\n            this.trackerListMonth[j].leaveType = trackerListFromDB[i].leaveType;\r\n            this.trackerListMonth[j].logs = trackerListFromDB[i].logs;\r\n            this.trackerListMonth[j].remarks = trackerListFromDB[i].remarks;\r\n            this.trackerListMonth[j].trackerId = trackerListFromDB[i].dailyTrackerID;\r\n            this.trackerListMonth[j].employeeEmail = trackerListFromDB[i].employeeEmail;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n  // method for API call to get all dailyTrackers for a month\r\n  getAllTrackersFromDB() {\r\n    return this.apiService.getTrackersForPeriod(localStorage.getItem('tgt_email'), this.firstDayOfMonth.getTime(), this.lastDayOfMonth.getTime());\r\n  }\r\n\r\n  // Method to open dailytracker UI for a date\r\n  openDialog(tracker: any) {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.disableClose = true;\r\n\r\n    console.log('data sent from calendar:', tracker);\r\n    dialogConfig.data = tracker;\r\n    const dialogRef = this.dialog.open(TimeTrackerComponent, dialogConfig);\r\n\r\n    dialogRef.afterClosed().subscribe((result: any) => {\r\n      console.log('Dialog result', result);\r\n      // update the dailyTracker data for this Date\r\n      for (const tracker of this.trackerListMonth) {\r\n        if (result.logs.length > 0) {\r\n          console.log(\"copying logs back to calendar\");\r\n          tracker.logs = result.logs;;\r\n          console.log(\"tracker object after copying logs\", tracker)\r\n          break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n  // this Method sets attribut currentDay of a Daily Tracker object to TRUE\r\n  showCurrentDay() {\r\n    for (const tracker of this.trackerListMonth) {\r\n      if (this.todaysDate.date() == tracker.date.getDate() && this.todaysDate.month() == tracker.date.getMonth() && this.todaysDate.year() == tracker.date.getFullYear()) { tracker.currentDay = true; }\r\n      else { tracker.currentDay = false; }\r\n    }\r\n  }\r\n  // methods to navigate and show next and previous months\r\n  showNextMonth() {\r\n    this.date.add(1, 'M');\r\n    this.createMonthTrackers();\r\n    this.checkIfMonthlySubmissionActive();\r\n  }\r\n  showPreviousMonth() {\r\n    this.date.subtract(1, 'M');\r\n    this.createMonthTrackers();\r\n    this.checkIfMonthlySubmissionActive();\r\n\r\n  }\r\n  // this method identifies saturdays and sundays and sets them as holiday in calendar. this method is called through ngFor from HTML\r\n  isWeekend(tracker: DailyTracker) {\r\n\r\n    if (tracker.date.getDay() == 0 || tracker.date.getDay() == 6) {\r\n      tracker.leaveType = LeaveType.NONE;\r\n      tracker.state = false;\r\n      return true;\r\n    }\r\n    else { return false; }\r\n  }\r\n  // this method disbales all future dates for editing\r\n  isFutureDate(tracker: DailyTracker): boolean {\r\n    const trackerMomemnt = moment(tracker.date);\r\n    const currentMoment = moment(this.todaysDate);\r\n    if (trackerMomemnt.isSameOrBefore(currentMoment)) {// if tracker date is earlier than current date\r\n      return false;                                 // do not disable\r\n    }\r\n    else { return true; }                                  // disable\r\n  }\r\n\r\n\r\n\r\n  getTotalLoggedHours(tracker: DailyTracker): number {\r\n    let sum = 0;\r\n    for (const log of tracker.logs) {\r\n      sum += log.logHours;\r\n    }\r\n    return sum;\r\n  }\r\n  getTotalLoggedHoursModel(tracker: DailyTrackerModel): number {\r\n    let sum = 0;\r\n    for (const log of tracker.logs) {\r\n      sum += log.logHours;\r\n    }\r\n    return sum;\r\n  }\r\n  isFullDayLeave(tracker: DailyTracker) {\r\n    if (tracker.leaveType == LeaveType.FULL_DAY) { return true; }\r\n    else { return false; }\r\n  }\r\n  isHalfdayLeave(tracker: DailyTracker) {\r\n    if (tracker.leaveType == LeaveType.HALF_DAY) { return true; }\r\n    else { return false; }\r\n  }\r\n  monthlySubmission() {\r\n    if (this.monthlySubmissionActive)//if monthlySubmission is ACTIVE i.e its true\r\n    {\r\n      //pass both dates as moment objects,check is all logs are present and filled for 8 hours\r\n      this.checkTrackersLogStatus(this.mtFromDate, this.mtToDate);//returns boolean\r\n      // console.log(\"boolean alltrackerscompleted:\",this.allTrackersComplete);\r\n      // if (this.allTrackersComplete)\r\n      //  { //create a new monthly tracker ( either to save or to submit again)\r\n      //   let newMonthlyId = localStorage.getItem('tgt_email') + \"-\" + this.allMonths[this.firstDayOfMonth.getMonth()] + \"-\" + this.firstDayOfMonth.getFullYear();\r\n      //   var monthlyTracker = new MonthlyTracker(newMonthlyId, localStorage.getItem(\"tgt_email\"), \"SUBMITTED\", this.firstDayOfMonth.getFullYear(), this.allMonths[this.firstDayOfMonth.getMonth()], this.mtFromDate.toDate().getTime(), this.mtToDate.toDate().getTime(), \"\");\r\n       \r\n      //   //if monthly tracker is already made, it was reverted, and now we are submitting it again\r\n      //   if (this.monthlyTrackerMadeAlready) {\r\n      //       console.log(\"ReSUBMITTING monthly tracker\",monthlyTracker);\r\n      //       this.monthlyService.SubmitMonthlyTracker(monthlyTracker).subscribe(res=>console.log(\"Result after Resubmitting MT:\",res));\r\n      //       this.monthlySubmissionActive=false;\r\n      //   }\r\n      //   else {\r\n      //  //save fresh MT\r\n      //  console.log(\"SAVING fresh monthly tracker\",monthlyTracker);\r\n      //  this.monthlyService.saveMonthlyTracker(monthlyTracker);\r\n      //  this.monthlySubmissionActive=false;\r\n\r\n      //   }\r\n      // }\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n  //check whether 8 hour log for each day has been submitted for the month( 21st to 20th)\r\n  //checks first if all daily trackers exist, then checks if 8 hours are logged or full day leave is logged\r\n  checkTrackersLogStatus(fromDate: moment.Moment, toDate: moment.Moment){\r\n\r\n    //get all trackers that exist between fromDate and toDate from backend\r\n    var missingTrackerArray = [];\r\n    var incompleteTrackerArray = [];\r\n    this.apiService.getTrackersForPeriod(localStorage.getItem('tgt_email'), fromDate.toDate().getTime(), toDate.toDate().getTime()).subscribe(result => {\r\n      console.log(\"trackers in given period are:\", result);\r\n      let iterator = moment(fromDate);\r\n\r\n\r\n      while (iterator.isSameOrBefore(toDate)) {\r\n\r\n\r\n        if (iterator.toDate().getDay() > 0 && iterator.toDate().getDay() < 6)//if its a weekday\r\n        {\r\n          \r\n          if (!this.logExists(iterator.toDate().getTime(), result))//if the date does not exists in the trackerlist\r\n          {\r\n            \r\n            missingTrackerArray.push(iterator.toDate());//push the Date into list of missing tracker dates array\r\n          }\r\n          else  //date exists in the trackerlist, then check if 8 hours have been logged(leave+log should=8)\r\n          {\r\n            if (!this.logHoursEquals8(iterator.toDate().getTime(), result)) {\r\n              incompleteTrackerArray.push(iterator.toDate());\r\n            }\r\n          }\r\n        }\r\n        iterator.add(1, 'd');//increment iterator by 1 day\r\n      }\r\n\r\n      const dialogConf = new MatDialogConfig();\r\n      dialogConf.data = { missing: missingTrackerArray, incomplete: incompleteTrackerArray };//\r\n      this.dialog.open(MissingTrackersComponent, dialogConf);\r\n      //if all trackers filled and logs complete\r\n      if (incompleteTrackerArray.length == 0 && missingTrackerArray.length == 0) {\r\n        console.log(\"inside if condition to return TRUE. inctrkarray:\",incompleteTrackerArray,\"length:\",incompleteTrackerArray.length,\"missingtrkarr:\",missingTrackerArray,\"length:\",missingTrackerArray.length);\r\n         this.allTrackersComplete=true;\r\n       }\r\n       else {\r\n         this.allTrackersComplete= false;\r\n       }\r\n       //\r\n       console.log(\"boolean alltrackerscompleted:\",this.allTrackersComplete);\r\n      if (this.allTrackersComplete)\r\n       { //create a new monthly tracker ( either to save or to submit again)\r\n        let newMonthlyId = localStorage.getItem('tgt_email') + \"-\" + this.allMonths[this.firstDayOfMonth.getMonth()] + \"-\" + this.firstDayOfMonth.getFullYear();\r\n        var monthlyTracker = new MonthlyTracker(newMonthlyId, localStorage.getItem(\"tgt_email\"), \"SUBMITTED\", this.firstDayOfMonth.getFullYear(), this.allMonths[this.firstDayOfMonth.getMonth()], this.mtFromDate.toDate().getTime(), this.mtToDate.toDate().getTime(), \"\");\r\n       \r\n        //if monthly tracker is already made, it was reverted, and now we are submitting it again\r\n        if (this.monthlyTrackerMadeAlready) {\r\n            console.log(\"ReSUBMITTING monthly tracker\",monthlyTracker);\r\n            this.monthlyService.SubmitMonthlyTracker(monthlyTracker).subscribe(res=>console.log(\"Result after Resubmitting MT:\",res));\r\n            this.monthlySubmissionActive=false;\r\n        }\r\n        else {\r\n       //save fresh MT\r\n       console.log(\"SAVING fresh monthly tracker\",monthlyTracker);\r\n       this.monthlyService.saveMonthlyTracker(monthlyTracker);\r\n       this.monthlySubmissionActive=false;\r\n\r\n        }\r\n      }\r\n    })\r\n    \r\n  }\r\n  //method returns true if dailyTracker corresponding the date parameter exists in tracker array passed as parameter\r\n  logExists(date: number, trackerList: any): boolean {\r\n    for (var tracker of trackerList) {\r\n      if (tracker.date == date) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;//if date not found in trackerlist\r\n  }\r\n\r\n  //method takes a date and searches for dailyTracker in array for that date and return true if leave+log=8, returns false if leave+loghrs<8\r\n  logHoursEquals8(date: number, trackerList: any): boolean {\r\n\r\n    for (var tracker of trackerList) {\r\n      if (tracker.date == date) {\r\n        if (tracker.leaveHours + this.getTotalLoggedHoursModel(tracker) == 8) {\r\n          console.log(\"Leave+log==8, actual sum:\", tracker.leaveHours, this.getTotalLoggedHoursModel(tracker));\r\n          return true;\r\n        }\r\n\r\n        else {\r\n          console.log(\"Leave+log!=8, actual sum:\", tracker.leaveHours, this.getTotalLoggedHoursModel(tracker))\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  //this methods sets variable monthlySubmissionActive as TRUE or FALSE on checking 3 conitions, date of submission, if Monthly tracker exists, if it exists, its status id REVERTED or anything else\r\n  checkIfMonthlySubmissionActive() {\r\n    //assuming monthly tracker is not made by default. condition check will make it true if its already existing in backend.\r\n    this.monthlyTrackerMadeAlready = false;\r\n\r\n    //reset to false every time a check is done\r\n    this.monthlySubmissionActive = false;\r\n\r\n    //make a date string get month & year from firstDayOfMonth(date) and date is 1day before monthly submission gets active +1 is required with getMonth() as it returns months from 0-11 jan-dec\r\n    let toDateStr = (this.firstDayOfMonth.getMonth() + 1) + \"-\" + (this.mSD - 1) + \"-\" + this.firstDayOfMonth.getFullYear();\r\n\r\n    this.mtToDate = moment(new Date(toDateStr));\r\n    this.mtFromDate = moment(this.mtToDate);\r\n    this.mtFromDate.subtract(1, 'M');\r\n    this.mtFromDate.add(1, 'd');\r\n    console.log(\"from:\", this.mtFromDate.toDate(), \"to:\", this.mtToDate.toDate());\r\n\r\n    //make a date string get month & year from firstDayOfMonth(date) and date is when monthly submission gets active , +1 is required with getMonth() as it returns months from 0-11 jan-dec\r\n    let mSubDateStr = (this.firstDayOfMonth.getMonth() + 1) + \"-\" + (this.mSD) + \"-\" + this.firstDayOfMonth.getFullYear();\r\n    \r\n    let subDate = moment(new Date(mSubDateStr));\r\n    if (this.todaysDate.isSameOrAfter(subDate))//if todays date is equal or has passed monthly submission date\r\n    {\r\n      let searchId = localStorage.getItem('tgt_email') + \"-\" + this.allMonths[this.firstDayOfMonth.getMonth()] + \"-\" + this.firstDayOfMonth.getFullYear();// create a monthly trackerId to search for in DB\r\n\r\n      //check if monthly tracker already exists by searchin for ID of MT in DB\r\n      this.monthlyService.findMonthlyTrackerById(searchId).subscribe((result: any) => {\r\n        console.log(\"result for monthly trackerId\",searchId,\" search:\", result.data);\r\n       \r\n          if (result.monthlyTrackerId == searchId)//monthly tracker is found, then check its status\r\n          {\r\n            this.monthlyTrackerMadeAlready = true;\r\n            if (result.status == \"REVERTED\") {\r\n              console.log(\"this month tracker found with status REVERTED\");\r\n              this.monthlySubmissionActive = true;    //if reverted, activate button for submission again\r\n            }\r\n            else {\r\n              console.log(\"this month tracker found with status not as REVERTED\")\r\n              this.monthlySubmissionActive = false;   //if any other status , deactivate button for submission\r\n            }\r\n          }\r\n        // }\r\n\r\n      },error=>{\r\n        \r\n          console.log(\"this month Monthly tracker not found(submission date has passed) error msg is:\",error);\r\n          this.monthlyTrackerMadeAlready = false;\r\n          this.monthlySubmissionActive = true;// submission date has passed and monthly tracker is not created yet\r\n        \r\n\r\n      })\r\n\r\n    }\r\n\r\n  }\r\n}\r\n","<div class=\"main-container\">\r\n  <div class=\"container1\" >\r\n    <mat-toolbar class=\"nav\">\r\n      <div class=\"flexbox-row\">\r\n        <img id=\"logo\" src=\"../../../assets/submit.png\" [ngClass]=\"{'month-submission-open':monthlySubmissionActive}\" (click)=\"monthlySubmission()\" matTooltip=\"MONTHLY SUBMISSION\" [hidden]=\"!monthlySubmissionActive\">\r\n        &nbsp;&nbsp;<span [hidden]=\"!monthlySubmissionActive\" id=\"submitMonthReport\" data-text=\"Submit Month's Report\">Submit Month's Report</span ><span class=\"font-40px\" [hidden]=\"monthlySubmissionActive\">CALENDAR</span>\r\n      </div>\r\n  \r\n      <div class=\"font-30px width-30per\">\r\n  \r\n        <mat-icon class=\"font-50px clickable\" (click)=\"showPreviousMonth()\">keyboard_arrow_left</mat-icon>\r\n        <mat-icon class=\"font-50px clickable \" (click)=\"showNextMonth()\">\r\n          keyboard_arrow_right</mat-icon>\r\n   <span class=\"margin-top\">{{date.format('MMMM')}} {{date.format('YYYY')}}</span>\r\n      </div>\r\n      <div id=\"datepicker\">\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Choose a date</mat-label>\r\n          <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"desiredDate\">\r\n          <mat-hint>MM/DD/YYYY</mat-hint>\r\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n          <mat-datepicker #picker></mat-datepicker>\r\n        </mat-form-field>\r\n        <mat-icon class=\"color-green\" (click)=\"loadMonth()\">search</mat-icon>\r\n      </div>\r\n    </mat-toolbar>\r\n    <mat-grid-list id=\"weekdays\" cols=\"7\" rowHeight=\"2.5:1\">\r\n      <mat-grid-tile class=\"font-30px color-header-calendar\">Sun</mat-grid-tile>\r\n      <mat-grid-tile class=\"font-30px color-header-calendar\">Mon</mat-grid-tile>\r\n      <mat-grid-tile class=\"font-30px color-header-calendar\">Tue</mat-grid-tile>\r\n      <mat-grid-tile class=\"font-30px color-header-calendar\">Wed</mat-grid-tile>\r\n      <mat-grid-tile class=\"font-30px color-header-calendar\">Thu</mat-grid-tile>\r\n      <mat-grid-tile class=\"font-30px color-header-calendar\">Fri</mat-grid-tile>\r\n      <mat-grid-tile class=\"font-30px color-header-calendar\">Sat</mat-grid-tile>\r\n    </mat-grid-list>\r\n  \r\n    <form [formGroup]=\"dailyTrackerForm\">\r\n      <mat-grid-list cols=\"7\" rowHeight=\"2.5:1\" formArrayName=\"calendarDays\">\r\n        \r\n        <mat-grid-tile [ngClass]=\"{'zoom':tracker.state&&!isFutureDate(tracker),'currentDay':tracker.currentDay&&tracker.state,'holiday':isWeekend(tracker),'disable':isFutureDate(tracker)&&!isWeekend(tracker),'bgRed':getTotalLoggedHours(tracker)==0 &&!isWeekend(tracker)&&!isFutureDate(tracker),'bgGreen':getTotalLoggedHours(tracker)==8 ||(getTotalLoggedHours(tracker)==4 && isHalfdayLeave(tracker)),'bgPurple':isFullDayLeave(tracker),'bgYellow':isHalfdayLeave(tracker) && getTotalLoggedHours(tracker)<4}\" *ngFor=\"let tracker of trackerListMonth\">\r\n          <span matBadge={{getTotalLoggedHours(tracker)}} matBadgeOverlap=false [hidden]=\"getTotalLoggedHours(tracker)==8 || isWeekend(tracker)|| isFutureDate(tracker) ||isFullDayLeave(tracker)\" matTooltip=\"Hrs Logged\" matBadgeColor=\"warn\"></span>\r\n          \r\n            <mat-icon class=\"openDialogue\" (click)=\"openDialog(tracker)\" [hidden]=\"!tracker.state||isFutureDate(tracker)\" >expand_more</mat-icon>\r\n            <div class=\"flexbox\">\r\n              <p style=\"font-size:30px\">{{tracker.dayOfMonth}}</p>\r\n\r\n            </div>\r\n     \r\n      \r\n        </mat-grid-tile>\r\n  \r\n      </mat-grid-list> \r\n      \r\n    </form>\r\n    <div class=\"color-index\">\r\n      <div>\r\n        <div id=\"red\"></div>\r\n        <span> No Logs Found</span>\r\n      </div>\r\n      <div>\r\n        <div id=\"green\"></div>\r\n        <span> 8 hr Log Complete</span>\r\n      </div>\r\n      <div>\r\n        <div id=\"yellow\"></div>\r\n        <span> Half Day with incomplete log</span>\r\n      </div>\r\n      </div>\r\n      <div class=\"color-index1\">\r\n      <div>\r\n        <div id=\"purple\"></div>\r\n        <span> Full Day Leave</span>\r\n      </div>\r\n      <div>\r\n        <div id=\"no-fill\"></div>\r\n        <span> Logged Hours < 8 </span>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { DailyTracker } from '../model/daily-tracker';\r\nimport { DailyTrackerModel } from '../model/daily-tracker-model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DailyTrackerService {\r\n  baseUrl='https://nouveautracker.stackroute.io/time-tracker-service/api/v1/';\r\n  //  baseUrl='http://localhost:8080/time-tracker-service/api/v1/';\r\n  //  baseUrl='http://localhost:8082/api/v1/';\r\n\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n\r\n  saveTracker(tracker: DailyTrackerModel): Observable<DailyTrackerModel> {\r\n    console.log('Sending tracker to backend:', tracker);\r\n    return this.http.post<DailyTrackerModel>(\r\n     this.baseUrl+`dailytracker`,\r\n      tracker\r\n    );\r\n  }\r\n  getDailyTrackersForPeriod(start:number,end:number){\r\n    return this.http.get(this.baseUrl+\"dailytrackers/daterange?from=\"+start+\"&to=\"+end);\r\n  }\r\n\r\n  getTrackersForPeriod(email: string, fromDate: number, toDate: number): Observable<DailyTracker[]> {\r\n    console.log(\r\n      'inside get trackers service:',\r\n      'email:',\r\n      email,\r\n      'fromDate:',\r\n      fromDate,\r\n      'toDate:',\r\n      toDate\r\n    );\r\n    const paramObject = {\r\n      employeeEmail: email,\r\n      fromDate,\r\n      toDate,\r\n    };\r\n    return this.http.get<DailyTracker[]>(\r\n      this.baseUrl+`employee/dailytrackers/period?employeeEmail=` +\r\n        email +\r\n        `&fromDate=` +\r\n        fromDate +\r\n        `&toDate=` +\r\n        toDate\r\n    );\r\n  }\r\n  updateTracker(tracker: DailyTrackerModel): Observable<object> {\r\n    return this.http.put(\r\n      this.baseUrl+`dailytracker`,\r\n      tracker\r\n    );\r\n  }\r\n\r\n  //For Reports\r\n\r\n  getAllPendingDailyTrackers(): Observable<object> {\r\n    return this.http.get(\r\n     this.baseUrl+'dailytrackers/pending'\r\n    );\r\n  }\r\n\r\n  getAllProgramHoursByEmployee(employeeEmail: string): Observable<object> {\r\n    return this.http.get(\r\n      this.baseUrl+'allprograms/hours?email=' +\r\n        employeeEmail\r\n    );\r\n  }\r\n\r\n  getAllProjectHoursByEmployee(employeeEmail: string): Observable<object> {\r\n    return this.http.get(\r\n      this.baseUrl+'allprojects/hours?email=' +\r\n        employeeEmail\r\n    );\r\n  }\r\n\r\n  getAllProjectHours(): Observable<object> {\r\n    return this.http.get(\r\n      this.baseUrl+'project/hours'\r\n    );\r\n  }\r\n\r\n  getAllProgramHours(): Observable<object> {\r\n    return this.http.get(\r\n     this.baseUrl+'program/hours'\r\n    );\r\n  }\r\n\r\n  getAllProgramsHoursForManager(managerEmail: string): Observable<object>{\r\n    return this.http.get(\r\n      this.baseUrl+'manager/allprograms/hours?email='+managerEmail\r\n    );\r\n  }\r\n\r\n  getAllProjectsHoursForManager(managerEmail: string): Observable<object>{\r\n    return this.http.get(\r\n      this.baseUrl+'manager/allprojects/hours?email='+managerEmail\r\n    );\r\n  }\r\n  getAllDailyTrackers(month:number,year:number){\r\n    return this.http.get<DailyTracker[]>(this.baseUrl+\"dailytrackers/monthly?month=\"+month+\"&year=\"+year);\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-leaves',\r\n  templateUrl: './leaves.component.html',\r\n  styleUrls: ['./leaves.component.css']\r\n})\r\nexport class LeavesComponent implements OnInit {\r\nhalfDayList:number[];\r\nfullDayList:number[];\r\n  constructor(@Inject(MAT_DIALOG_DATA)public _data:any) { }\r\n\r\n  ngOnInit(): void {\r\n    this.halfDayList=this._data.halfDayList;\r\n    this.fullDayList=this._data.fullDayList;\r\n    this.fullDayList.sort((a,b)=>a-b);\r\n    this.halfDayList.sort((a,b)=>a-b);\r\n    console.log(\"leave arrays in new comp,\",this.halfDayList,this.fullDayList)\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <h3>Full Day Leaves </h3>\r\n    <mat-grid-list cols=\"12\" rowHeight=\"1:1\">\r\n        \r\n        <mat-grid-tile *ngFor=\"let date of fullDayList\" class=\"fullDayLeave\">{{date | date:'EEEE, MMMM d,y'}}</mat-grid-tile> \r\n      \r\n      </mat-grid-list> \r\n    \r\n      <h3>Half Day Leaves</h3>\r\n      <mat-grid-list cols=\"12\" rowHeight=\"1:1\" >\r\n          \r\n          <mat-grid-tile *ngFor=\"let date of halfDayList\" class=\"halfDayLeave\">{{date | date:'EEEE, MMMM d,y'}}</mat-grid-tile> \r\n        </mat-grid-list> \r\n</div>","import { ListKeyManager } from '@angular/cdk/a11y';\r\nimport { ThrowStmt } from '@angular/compiler';\r\nimport { LeaveType } from './daily-tracker';\r\nimport { Log } from './log';\r\n\r\nexport class DailyTrackerModel {\r\n    dailyTrackerID: string;\r\n    date: number;\r\n    employeeEmail: string;\r\n    employeeName = 'not available in frontend';\r\n    logs: Log[];\r\n    leaveType: LeaveType;\r\n    leaveHours: number;\r\n    remarks: string;\r\n\r\n    constructor(id: string, date: number, email: string, logs: Log[], leaveType: LeaveType, remarks: string){\r\n        this.dailyTrackerID = id;\r\n        this.date = date;\r\n        this.employeeEmail = email;\r\n        this.logs = logs;\r\n        this.leaveType = leaveType;\r\n        switch (this.leaveType){\r\n            case LeaveType.NONE: this.leaveHours = 0;\r\n                                 break;\r\n            case LeaveType.HALF_DAY: this.leaveHours = 4;\r\n                                     break;\r\n            case LeaveType.FULL_DAY: this.leaveHours = 8;\r\n                                    break;\r\n            default: this.leaveHours = 100; // faulty input value\r\n        }\r\n        this.remarks = remarks;\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\r\nimport { MatChipInputEvent } from '@angular/material/chips';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ProgramService } from 'src/app/service/program.service';\r\nimport { EmployeeService } from 'src/app/service/employee.service';\r\n\r\n@Component({\r\n  selector: 'app-add-program-members',\r\n  templateUrl: './add-program-members.component.html',\r\n  styleUrls: ['./add-program-members.component.css'],\r\n})\r\nexport class AddProgramMembersComponent implements OnInit {\r\n  separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  memberCtrl = new FormControl('');\r\n  filteredMembers: Observable<string[]>;\r\n  members = new Set();\r\n  allMembers = [];\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public programName: any,\r\n    private programService: ProgramService,\r\n    private snackBar: MatSnackBar,\r\n    private employeeService: EmployeeService\r\n  ) {\r\n    this.filteredMembers = this.memberCtrl.valueChanges.pipe(\r\n      startWith(null),\r\n      map((member: string | null) => (member ? this._filter(member) : this.allMembers.slice())),\r\n    );\r\n  }\r\n\r\n\r\n  add(event: MatChipInputEvent): void {\r\n    const value = (event.value || '').trim();\r\n\r\n    const index = this.allMembers.indexOf(value);\r\n\r\n    if (index >= 0) {\r\n      this.members.add(value);\r\n    }\r\n\r\n    event.input.value = '';\r\n\r\n    this.memberCtrl.setValue(null);\r\n  }\r\n\r\n  remove(member: string): void {\r\n    this.members.delete(member);\r\n  }\r\n\r\n  selected(event: MatAutocompleteSelectedEvent): void {\r\n    this.members.add(event.option.viewValue);\r\n    this.memberCtrl.setValue(null);\r\n  }\r\n\r\n  private _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n\r\n    return this.allMembers.filter(member => member.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  addMembersToProgram(): void {\r\n    console.log(this.members);\r\n\r\n    const membersArray = Array.from(this.members);\r\n    console.log(membersArray);\r\n    this.programService\r\n      .addMembersToProgram(membersArray, this.programName)\r\n      .subscribe(\r\n        (response) => {\r\n          console.log(response);\r\n\r\n          this.snackBar.open('Members Added Successfully.', '', {\r\n            duration: 5000,\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'top',\r\n            panelClass: ['mat-toolbar', 'mat-primary']\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n\r\n          this.snackBar.open('Some problem occured.', '', {\r\n            duration: 5000,\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'top',\r\n            panelClass: ['mat-toolbar', 'mat-warn']\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  getAllEmployees(managerEmail: string): void {\r\n    this.employeeService.getEmployeesWorkingForAParticularManager(managerEmail).subscribe((response) => {\r\n      console.log(response);\r\n      response.forEach(employee => {\r\n        this.allMembers.push(employee.emailId);\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const email = window.localStorage.getItem('tgt_email');\r\n    this.getAllEmployees(email);\r\n  }\r\n}\r\n","<h2 mat-dialog-title>Add Members for {{ programName }}</h2>\r\n\r\n<mat-dialog-content class=\"mat-typography\">\r\n  <mat-form-field class=\"example-chip-list\" appearance=\"outline\">\r\n    <mat-label>Add Members</mat-label>\r\n    <mat-chip-list #chipList>\r\n      <mat-chip *ngFor=\"let member of members\" (removed)=\"remove(member)\">\r\n        {{ member }}\r\n        <mat-icon matChipRemove>cancel</mat-icon>\r\n      </mat-chip>\r\n      <input\r\n        placeholder=\"New Member...\"\r\n        [formControl]=\"memberCtrl\"\r\n        [matAutocomplete]=\"auto\"\r\n        [matChipInputFor]=\"chipList\"\r\n        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n        (matChipInputTokenEnd)=\"add($event)\"\r\n      />\r\n    </mat-chip-list>\r\n    <mat-autocomplete\r\n      #auto=\"matAutocomplete\"\r\n      (optionSelected)=\"selected($event)\"\r\n    >\r\n      <mat-option\r\n        *ngFor=\"let member of filteredMembers | async\"\r\n        [value]=\"member\"\r\n      >\r\n        {{ member }}\r\n      </mat-option>\r\n    </mat-autocomplete>\r\n  </mat-form-field>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button mat-dialog-close>Cancel</button>\r\n  <button\r\n    mat-button\r\n    [mat-dialog-close]=\"true\"\r\n    (click)=\"addMembersToProgram()\"\r\n    color=\"primary\"\r\n    mat-flat-button\r\n  >\r\n    Add\r\n  </button>\r\n</mat-dialog-actions>\r\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'NouveauTracker';\r\n}\r\n","<router-outlet></router-outlet>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-consolidated-analytics',\r\n  templateUrl: './consolidated-analytics.component.html',\r\n  styleUrls: ['./consolidated-analytics.component.css']\r\n})\r\nexport class ConsolidatedAnalyticsComponent implements OnInit {\r\npieChartHeader=\"dummyPieChart\";\r\nbarChartHeader=\"dummyBarChart\";\r\n\r\npublic barChartOptions={\r\n  scaleShowVerticalLines:false,\r\n  responsive:true\r\n}\r\n\r\npublic pieChartLabels=[\"nitin\",\"akhil\",\"manan\",\"yogesh\"];\r\npublic pieChartData=[\r\n  {data:[10,20,30,40]}\r\n \r\n];\r\npublic pieChartLegend=true;\r\npublic pieChartType=\"pie\";\r\n\r\npublic barChartLabels=[\"nitin\",\"akhil\",\"manan\",\"yogesh\"];\r\npublic barChartLegend=true;\r\npublic barChartData=[\r\n  {data:[10,20,30,40],label:\"maths\"},\r\n  {data:[40,20,100,50],label:\"science\"}\r\n];\r\npublic barChartType=\"bar\";\r\n  constructor(@Inject(MAT_DIALOG_DATA)public _data:any) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"bar graph data recieved\",this._data);\r\n    this.barChartData=this._data.barChartData;\r\n    this.barChartLabels=this._data.barChartLabels;\r\n    this.pieChartLabels=this._data.pieChartLabels;\r\n    this.pieChartData=this._data.pieChartData;\r\n    this.barChartHeader=this._data.barChartHeader;\r\n    this.pieChartHeader=this._data.pieChartHeader;\r\n  }\r\n\r\n}\r\n","<h1>{{barChartHeader}}</h1>\r\n<div id=\"barchart\">\r\n    <canvas baseChart\r\n    [datasets]=\"barChartData\"\r\n    [labels]=\"barChartLabels\"\r\n    [options]=\"barChartOptions\"\r\n    [legend]=\"barChartLegend\"\r\n    [chartType]=\"barChartType\"></canvas>\r\n</div>\r\n<h1>{{pieChartHeader}}</h1>\r\n<div id=\"piechart\">\r\n    <canvas baseChart\r\n    [datasets]=\"pieChartData\"\r\n    [labels]=\"pieChartLabels\"\r\n    [legend]=\"pieChartLegend\"\r\n    [chartType]=\"pieChartType\"></canvas>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ProgramService } from 'src/app/service/program.service';\r\n\r\n@Component({\r\n  selector: 'app-view-project-card',\r\n  templateUrl: './view-project-card.component.html',\r\n  styleUrls: ['./view-project-card.component.css']\r\n})\r\nexport class ViewProjectCardComponent implements OnInit {\r\n  projectDetails: any;\r\n  role: string;\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any, private programService: ProgramService, private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n    this.projectDetails = this.data;\r\n    this.role = window.localStorage.getItem('role');\r\n  }\r\n\r\n  remove(projectName: string, memberEmail: string): void {\r\n\r\n    this.programService.removeMembersFromProject(projectName, memberEmail).subscribe((response) => {\r\n      console.log(response);\r\n\r\n      this.snackBar.open('Member Removed Successfully.', '', {\r\n        duration: 5000,\r\n        horizontalPosition: 'center',\r\n        verticalPosition: 'top',\r\n        panelClass: ['mat-toolbar', 'mat-primary']\r\n      });\r\n      \r\n    }, (error) => {\r\n      console.log(error);\r\n      this.snackBar.open('Some problem occured.', '', {\r\n        duration: 5000,\r\n        horizontalPosition: 'center',\r\n        verticalPosition: 'top',\r\n        panelClass: ['mat-toolbar', 'mat-warn']\r\n      });\r\n    }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n","<div projectDetails>\r\n  <div mat-dialog-title class=\"flex-container\">\r\n    <h1 mat-dialog-title>{{ projectDetails?.projectName }}</h1>\r\n    <span class=\"example-spacer\"></span>\r\n    <mat-icon [mat-dialog-close]=\"true\" matTooltip=\"Close\">close</mat-icon>\r\n  </div>\r\n\r\n  <mat-dialog-content class=\"mat-typography\">\r\n    <div fxLayout=\"row\" fxLayoutGap=\"2%\" fxLayout.xs=\"column\">\r\n      <mat-icon>calendar_today</mat-icon>\r\n      <h3 fxFlex=\"50%\" matTooltip=\"Project Duration\">\r\n        {{ projectDetails?.startDate | date: \"dd/MM/yyyy\" }} -\r\n        {{ projectDetails?.endDate | date: \"dd/MM/yyyy\" }}\r\n      </h3>\r\n      <mat-icon>person</mat-icon>\r\n      <h3 fxFlex=\"50%\" matTooltip=\"Manager's Email Id\">\r\n        {{ projectDetails?.managerEmailId }}\r\n      </h3>\r\n    </div>\r\n\r\n    <div fxLayout=\"column\">\r\n      <div>\r\n        <mat-icon>group</mat-icon>\r\n      </div>\r\n\r\n      <mat-form-field class=\"example-chip-list\" appearance=\"outline\">\r\n        <mat-label>Members</mat-label>\r\n        <h1 *ngIf=\"projectDetails?.membersList == null\">No Members to show.</h1>\r\n        <mat-chip-list *ngIf=\"projectDetails?.membersList.length > 0\" #chipList>\r\n          <mat-chip\r\n            *ngFor=\"let member of projectDetails?.membersList\"\r\n            (removed)=\"\r\n              remove(projectDetails?.projectName, member.memberEmailId)\r\n            \"\r\n          >\r\n            {{ member.memberEmailId }}\r\n            <mat-icon\r\n              *ngIf=\"role === 'MANAGER'\"\r\n              [mat-dialog-close]=\"true\"\r\n              matTooltip=\"Remove member\"\r\n              matChipRemove\r\n              >cancel</mat-icon\r\n            >\r\n          </mat-chip>\r\n        </mat-chip-list>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-dialog-content>\r\n</div>\r\n","export enum LogType {\r\n  PROGRAM = 'PROGRAM',\r\n  PROJECT = 'PROJECT',\r\n  SELF_LEARNING = 'SELF_LEARNING',\r\n}\r\n\r\nexport class Log {\r\n  logType: LogType;\r\n  logHours: number;\r\n  taskName: string; // name of project or program\r\n  startDate: number; // date on which program or project was started\r\n  selfStudyDetails: string;\r\n\r\n  constructor(\r\n    logType: LogType,\r\n    logHours: number,\r\n    taskName: string,\r\n    startDate:number,\r\n    selfStudyDetails:string\r\n  ) {\r\n    this.logType = logType;\r\n    this.logHours = logHours;\r\n    this.taskName = taskName;\r\n    this.startDate = startDate;\r\n    this.selfStudyDetails = selfStudyDetails;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport * as Chart from 'chart.js';\r\nimport { DailyTrackerService } from 'src/app/service/daily-tracker.service';\r\nimport { ProgramService } from 'src/app/service/program.service';\r\n\r\n@Component({\r\n  selector: 'app-bar-chart2',\r\n  templateUrl: './bar-chart2.component.html',\r\n  styleUrls: ['./bar-chart2.component.css']\r\n})\r\nexport class BarChart2Component implements OnInit {\r\n\r\n  public role: string;\r\n  public loggedEmail: string;\r\n  public projectsArray = [];\r\n  public projectChartLabel: any;\r\n  public projectChartData = [];\r\n  public projectChartDataHours: any;\r\n  constructor(private projectService: ProgramService,\r\n              private dailyTrackerService: DailyTrackerService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.role = window.localStorage.getItem('role');\r\n    this.loggedEmail = window.localStorage.getItem('tgt_email');\r\n    switch(this.role) {\r\n      case 'OPERATIONS': {\r\n        this.getAllprojectHours();\r\n        break;\r\n      }\r\n      case 'MANAGER': {\r\n        this.getAllProjectsHoursForManager();\r\n        break;\r\n      }\r\n      case 'EMPLOYEE': {                      \r\n        this.getAllProjectHoursByEmployee();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  myChart(): void{\r\n    const myChart = new Chart('myChart', {\r\n      type: 'bar',\r\n      data: {\r\n          labels: this.projectChartLabel,\r\n          datasets: [{\r\n              label: 'Number of employees',\r\n              data: this.projectChartData,\r\n              backgroundColor: 'lightpink',\r\n              borderWidth: 1,\r\n              borderColor: '#777',\r\n              hoverBorderWidth: 1,\r\n              hoverBorderColor: '#000'\r\n            },\r\n            {\r\n              label: 'Total working hours',\r\n              // data: this.projectChartData,\r\n              data: this.projectChartDataHours,\r\n              backgroundColor: 'cornflowerblue',\r\n              borderWidth: 1,\r\n              borderColor: '#777',\r\n              hoverBorderWidth: 1,\r\n              hoverBorderColor: '#000'\r\n            }\r\n          ]\r\n      },\r\n      options: {\r\n        scales: {\r\n          yAxes: [{\r\n              ticks: {\r\n                  beginAtZero: true\r\n              }\r\n          }]\r\n        },\r\n        // scaleShowVerticalLines: false,\r\n        responsive: true,\r\n        title: {\r\n          display: true,\r\n          text: 'External projects (active)',\r\n          padding: 20,\r\n          fontSize: 22,\r\n        },\r\n        legend: {\r\n          position: 'top',                  // comment and show\r\n          labels: {\r\n            fontColor: '#777',\r\n            fontSize: 13\r\n          }\r\n        },\r\n        layout: {\r\n          padding: {\r\n            left: 50\r\n          }\r\n        },\r\n        tooltips: {\r\n          displayColors: false\r\n        }\r\n      }\r\n  });\r\n  }\r\n\r\n  getAllActiveprojects(): void {\r\n    this.projectService.getAllActiveProjects('ACTIVE').subscribe(\r\n      response => {\r\n        console.log(response);\r\n        this.projectsArray = response;\r\n        this.projectChartLabel.forEach(labelName => {\r\n          this.projectsArray.forEach(project => {\r\n            if(labelName===project.projectName) {\r\n                this.projectChartData.push(project.membersList.length);\r\n            }\r\n          })\r\n        });\r\n        this.myChart();\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  ///////////////////////////////////////////\r\n\r\n  getAllprojectHours(): void {\r\n    this.dailyTrackerService.getAllProjectHours().subscribe(\r\n      response => {\r\n        console.log(\"All project with hours\");\r\n        console.log(response);\r\n        this.projectChartLabel = Object.keys(response);\r\n        this.projectChartDataHours = Object.values(response);\r\n        this.getAllActiveprojects();\r\n        // this.myChart();\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  //////////////////////////////////////////////\r\n\r\n  getAllProjectHoursByEmployee(): void {\r\n    this.dailyTrackerService.getAllProjectHoursByEmployee(this.loggedEmail).subscribe(\r\n      response => {\r\n        console.log(\"All program with hours\");\r\n        console.log(response);\r\n        this.projectChartLabel = Object.keys(response);\r\n        this.projectChartDataHours = Object.values(response);\r\n        this.getAllActiveprojects();\r\n        // this.myChart();\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  \r\n  //////////////////////////////////////////////\r\n\r\n  getAllProjectsHoursForManager(): void {\r\n    this.dailyTrackerService.getAllProjectsHoursForManager(this.loggedEmail).subscribe(\r\n      response => {\r\n        console.log(\"All projects with hours\");\r\n        console.log(response);\r\n        this.projectChartLabel = Object.keys(response);\r\n        this.projectChartDataHours = Object.values(response);\r\n        this.getAllActiveprojects();\r\n        // this.myChart();\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div style=\"display: block; \">\r\n    <div id=\"divChart\">\r\n        <canvas id=\"myChart\"></canvas>\r\n    </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { GenericListFilterModule } from 'generic-list-filter';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AddProgramComponent } from './component/add-program/add-program.component';\r\nimport { AddProjectComponent } from './component/add-project/add-project.component';\r\nimport { NavBarComponent } from './component/nav-bar/nav-bar.component';\r\nimport { TimeTrackerComponent } from './component/time-tracker/time-tracker.component';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { SnackbarComponent } from './component/snackbar/snackbar.component';\r\nimport { CalendarComponent } from './component/calendar/calendar.component';\r\nimport { AvatarModule } from 'ngx-avatar';\r\nimport { ProgramCardComponent } from './component/program-card/program-card.component';\r\nimport { ProjectCardComponent } from './component/project-card/project-card.component';\r\nimport { RegisterLoginComponent } from './component/register-login/register-login.component';\r\nimport { ViewProgramCardComponent } from './component/view-program-card/view-program-card.component';\r\nimport { ViewProgramManagerComponent } from './component/view-program-manager/view-program-manager.component';\r\nimport { ProgramService } from './service/program.service';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { SideNavComponent } from './component/side-nav/side-nav.component';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MonthlyTrackerComponent } from './component/monthly-tracker/monthly-tracker.component';\r\nimport { AddProgramMembersComponent } from './component/add-program-members/add-program-members.component';\r\nimport { AddProjectMembersComponent } from './component/add-project-members/add-project-members.component';\r\nimport { ViewProjectCardComponent } from './component/view-project-card/view-project-card.component';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { DialogContentExampleDialog, MonthlyTrackerDetailsComponent } from './component/monthly-tracker-details/monthly-tracker-details.component';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { AllChartsComponent } from './component/all-charts/all-charts.component';\r\nimport { BarChartComponent } from './component/charts-folder/bar-chart/bar-chart.component';\r\nimport { DoughnutChartComponent } from './component/charts-folder/doughnut-chart/doughnut-chart.component';\r\nimport { PieChartComponent } from './component/charts-folder/pie-chart/pie-chart.component';\r\nimport { ProfileComponent } from './component/profile/profile.component';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport { DialogComponent } from './component/monthly-tracker/dialog/dialog.component';\r\nimport { MissingTrackersComponent } from './component/missing-trackers/missing-trackers.component';\r\nimport { DoughnutChart2Component } from './component/charts-folder/doughnut-chart2/doughnut-chart2.component';\r\nimport { BarChart2Component } from './component/charts-folder/bar-chart2/bar-chart2.component';\r\nimport { ConsolidatedViewComponent } from './component/consolidated-view/consolidated-view.component';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport { ConsolidatedAnalyticsComponent } from './component/consolidated-analytics/consolidated-analytics.component';\r\nimport { LeavesComponent } from './component/leaves/leaves.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ViewProgramManagerComponent,\r\n    RegisterLoginComponent,\r\n    ViewProgramCardComponent,\r\n    NavBarComponent,\r\n    RegisterLoginComponent,\r\n    AddProgramComponent,\r\n    AddProjectComponent,\r\n    ProgramCardComponent,\r\n    ProjectCardComponent,\r\n    CalendarComponent,\r\n    SnackbarComponent,\r\n    TimeTrackerComponent,\r\n    MonthlyTrackerComponent,\r\n    SideNavComponent,\r\n    AddProgramMembersComponent,\r\n    AddProjectMembersComponent,\r\n    ViewProjectCardComponent,\r\n    MonthlyTrackerDetailsComponent,\r\n    AllChartsComponent,\r\n    BarChartComponent,\r\n    DoughnutChartComponent,\r\n    PieChartComponent,\r\n    ProfileComponent,\r\n    DialogComponent,\r\n    ProfileComponent,\r\n    MissingTrackersComponent,\r\n    DoughnutChart2Component,\r\n    ConsolidatedViewComponent,\r\n    BarChart2Component,\r\n    ConsolidatedAnalyticsComponent,\r\n    LeavesComponent,\r\n    DialogContentExampleDialog,\r\n  \r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FlexLayoutModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    HttpClientModule,\r\n    MatTabsModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    MatPaginatorModule,\r\n    GenericListFilterModule,\r\n    NgxPaginationModule,\r\n    MatGridListModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatChipsModule,\r\n    MatSelectModule,\r\n    MatToolbarModule,\r\n    FlexLayoutModule,\r\n    MatBadgeModule,\r\n    MatExpansionModule,\r\n    MatTooltipModule,\r\n    MatRippleModule,\r\n    MatMenuModule,\r\n    MatSlideToggleModule,\r\n    AvatarModule,\r\n    GenericListFilterModule,\r\n    MatRadioModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatAutocompleteModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    ChartsModule,\r\n    MatProgressSpinnerModule,\r\n    MatTableModule\r\n  ],\r\n  providers: [ProgramService],\r\n  bootstrap: [AppComponent],\r\n  schemas: [\r\n    CUSTOM_ELEMENTS_SCHEMA\r\n  ],\r\n  entryComponents: [ViewProgramCardComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-missing-trackers',\r\n  templateUrl: './missing-trackers.component.html',\r\n  styleUrls: ['./missing-trackers.component.css']\r\n})\r\nexport class MissingTrackersComponent implements OnInit {\r\n  missingDayList:any;\r\n  incompleteDayList:any;\r\n  missingCount:number;\r\n  incompleteCount:number;\r\n  constructor(@Inject(MAT_DIALOG_DATA) public _data: any) {\r\n    this.missingDayList=_data.missing;\r\n    this.incompleteDayList=_data.incomplete;\r\n    this.missingCount=_data.missing.length;\r\n    this.incompleteCount=_data.incomplete.length\r\n   }\r\n\r\n  ngOnInit(): void {\r\nconsole.log(\"DATA\",this._data);\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div id=\"inner-container\">\r\n    <div id=\"first\">\r\n      <h2 [hidden]=\"missingCount<1\">Missing Daily Trackers!!</h2>\r\n      <div id=\"head\">\r\n        <h4 id=\"count\" [hidden]=\"missingCount<1\">{{missingCount}} </h4>\r\n        <h4 [hidden]=\"missingCount<1\">Daily Trackers Not Filled</h4>\r\n      </div>\r\n      <table class=\"table table-danger table-striped table-hover\" [hidden]=\"missingCount<1\">\r\n        <tbody>\r\n          <tr *ngFor=\"let day of missingDayList\">\r\n            <td>{{day}}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <div id=\"second\">\r\n      <h2 [hidden]=\"incompleteCount<1\">Incomplete Daily Trackers!!</h2>\r\n      <div id=\"head\">\r\n        <h4 id=\"count\" [hidden]=\"incompleteCount<1\">{{incompleteCount}} </h4>\r\n        <h4 [hidden]=\"incompleteCount<1\">Daily Tracker Hours Incomplete</h4>\r\n      </div>\r\n      <table class=\"table table-warning table-striped table-hover\" [hidden]=\"incompleteCount<1\">\r\n        <tbody>\r\n          <tr *ngFor=\"let day of incompleteDayList\">\r\n            <td>{{day}}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n  <h1 [hidden]=\"incompleteCount>0 || missingCount>0\">All Logs Complete!!</h1>\r\n  <h1 [hidden]=\"incompleteCount>0 || missingCount>0\">Monthly Tracker Submitted!!</h1>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { EmployeeService } from 'src/app/service/employee.service';\r\n\r\n@Component({\r\n  selector: 'app-side-nav',\r\n  templateUrl: './side-nav.component.html',\r\n  styleUrls: ['./side-nav.component.css']\r\n})\r\nexport class SideNavComponent implements OnInit {\r\n\r\n  employee: any;\r\n  constructor(private employeeService: EmployeeService) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getEmployee(window.localStorage.getItem('tgt_email'));\r\n  }\r\n\r\n\r\n  getEmployee(emailId: string): void{\r\n    this.employeeService.getEmployee(emailId).subscribe(\r\n      response => {\r\n        // console.log('Employee data retrieved : ');\r\n        // console.log(response);\r\n        this.employee = response;\r\n        window.localStorage.setItem('role', this.employee.role);\r\n        // console.log(\"employee object : \");\r\n        // console.log(this.employee);\r\n      },\r\n      error => {\r\n        console.log('error message : ');\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"sidenav\">\r\n    <div class=\"logo\">\r\n        <hr style=\"color: white\">\r\n        <a class=\"simple-text logo-mini\">\r\n            <div class=\"logo-img\">\r\n                <img src=\"../../../assets/trackerNewLogo.png\" alt=\"\">\r\n            </div>\r\n        </a>\r\n        <a class=\"simple-text logo-normal\">\r\n            <!-- {{employee.role}} -->\r\n            <br>\r\n        </a>\r\n        <hr style=\"color: white\">\r\n    </div>\r\n    <ul class=\"nav\" >\r\n        <li *ngIf=\"employee?.role === 'OPERATIONS'\" routerLinkActive=\"active\"><a routerLink=\"monthly-tracker\"><i  class=\"fa fa-clock-o\"></i>Monthly Tracker</a></li>\r\n        <li routerLinkActive=\"active\"><a routerLink=\"view-program-manager\"><i  class=\"fa fa-thumb-tack\"></i>All Programs</a></li>\r\n        <li routerLinkActive=\"active\"><a routerLink=\"calendar\"><i  class=\"fa fa-calendar-check-o\"></i>Calendar</a></li>\r\n        <!-- <li routerLinkActive=\"active\"><a routerLink=\"#\"><i  class=\"fa-solid fa-people-group\"></i>Teams</a></li> -->\r\n        <li *ngIf=\"employee?.role === 'OPERATIONS'\" routerLinkActive=\"active\"><a routerLink=\"cv\"><i  class=\"fa fa-file-text-o\"></i>Reports</a></li>\r\n        <li routerLinkActive=\"active\"><a routerLink=\"analytics\"><i  class=\"fa fa-file-text-o\"></i>Analytics</a></li>\r\n        <!-- <li routerLinkActive=\"active\"><a routerLink=\"#\"><i  class=\"fas fa-cogs\"></i>Settings</a></li> -->\r\n    </ul>\r\n\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n// import { SecurityService } from '../service/security.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private router: Router) {\r\n  }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    if (this.isLoggedInWithJwt()) {\r\n      console.log('jwt token is there');\r\n      return true;\r\n    }\r\n    this.router.navigate(['']);\r\n    return false;\r\n  }\r\n\r\n    isLoggedInWithJwt() {\r\n    const token = window.localStorage.getItem('tgt');\r\n    return token != null;\r\n  }\r\n}\r\n","export class ProgramData {\r\n    organizationBrandLogo:string;\r\n    programName:string;\r\n    organizationName:string;\r\n    programType:string;\r\n    createdOn:number;\r\n    startDate:number;\r\n    endDate:number;\r\n    managerEmailId:string;\r\n    programStatus:string;\r\n    memberList:MemberHour[];\r\n    totalHours:number;\r\n\r\n    constructor(organizationBrandLogo:string,programName:string,organizationName:string,programType:string,createdOn:number,startDate:number,endDate:number,managerEmailId:string,programStatus:string){\r\n     this.organizationBrandLogo= organizationBrandLogo;\r\n    this.programName= programName;\r\n    this.organizationName= organizationName;\r\n    this.programType=programType;\r\n    this.createdOn=createdOn;\r\n    this.startDate=startDate;\r\n    this.endDate=endDate;\r\n    this.managerEmailId=managerEmailId;\r\n    this.programStatus=programStatus;\r\n    this.memberList=[]\r\n    this.totalHours=0;\r\n    }\r\n}\r\nexport class MemberHour{\r\n    member:string;//emailid of employee working on the program\r\n    hours: number;//total hours given to program by this employee\r\n    constructor(member:string,hours:number){\r\n        this.member=member;\r\n        this.hours=hours;\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pie-chart',\r\n  templateUrl: './pie-chart.component.html',\r\n  styleUrls: ['./pie-chart.component.css']\r\n})\r\nexport class PieChartComponent implements OnInit {\r\n\r\n\r\n  public pieChartLabels = ['Google Wave 2', 'IBM X1', 'Wipro B5', 'Infosys M2'];\r\n  public pieChartData = [120, 150, 180, 90];\r\n  public pieChartType = 'pie';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div style=\"display: block;\">\r\n    <canvas baseChart\r\n            [data]=\"pieChartData\"\r\n            [labels]=\"pieChartLabels\"\r\n            [chartType]=\"pieChartType\">\r\n    </canvas>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Observable } from 'rxjs';\r\nimport { EmployeeService } from 'src/app/service/employee.service';\r\n\r\n@Component({\r\n  selector: 'app-nav-bar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.css']\r\n})\r\n\r\nexport class NavBarComponent implements OnInit {\r\n\r\n  // name;\r\n\r\n  public employee: any;\r\n  constructor(private employeeService: EmployeeService,\r\n              private snackBar: MatSnackBar,\r\n              private http: HttpClient\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getEmployee(window.localStorage.getItem('tgt_email'));\r\n    // this.getUserInfo().subscribe(data => this.name = data.name);\r\n  }\r\n\r\n  // getUserInfo(): Observable<any> {\r\n  //   return this.http.get('http://localhost:8084/api/v1/home');\r\n  // }\r\n\r\n  getEmployee(emailId: string): void{\r\n    this.employeeService.getEmployee(emailId).subscribe(\r\n      response => {\r\n        console.log('Employee data retrieved : ');\r\n        console.log(response);\r\n        this.employee = response;\r\n        // window.localStorage.setItem('role', this.employee.role);\r\n        // console.log(\"employee object : \");\r\n        // console.log(this.employee);\r\n      },\r\n      error => {\r\n        console.log('error message : ');\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  // onUpdateProfileImage() {\r\n\r\n  // }\r\n\r\n  logout(): void {\r\n    window.localStorage.clear();\r\n    this.snackBar.open('You have been successfully logged out.', '', {\r\n      duration: 3000,\r\n      horizontalPosition: 'center',\r\n      verticalPosition: 'top',\r\n      panelClass: ['mat-toolbar', 'mat-primary']\r\n    });\r\n  }\r\n\r\n}\r\n","<!-- Hello {{name}} !! Welcome to the Nav, you are logged in through google -->\r\n<div class=\"container-fluid main\">\r\n     <mat-toolbar class=\"navbar navbar-expand-lg navbar-dark \" >\r\n        <div>\r\n            <a class=\"sidenav-button\"><i class=\"fas fa-bars fa-xls\" aria-hidden=\"true\" (click)=\"sideNav.toggle()\"></i></a>\r\n            <a class=\"navbar-brand\">NouveauTracker</a>\r\n        </div>\r\n        <div>\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n                <ul class=\"navbar-nav ml-auto\">\r\n                    <!-- <li><a><i class=\"fa-solid fa-bell\"></i></a></li> -->\r\n                    <li class=\"nav-item dropdown\">\r\n                        <a *ngIf=\"true\" [matMenuTriggerFor]=\"menu\" class=\"nav-link dropdown-toggle username\"  id=\"navbarDropdownMenuLink\">\r\n                            <div class=\"photo\">\r\n                                <img *ngIf=\"!employee?.profileImage\" src=\"../../../assets/noProfileImage.jpg\" alt=\"Profile photo\">\r\n                                <img *ngIf=\"employee?.profileImage\" src=\"data:image/jpeg;base64,{{employee.profileImage}}\" alt=\"Profile photo\">\r\n                            </div>\r\n                            {{employee?.employeeName}}\r\n                        </a>\r\n                        <mat-menu #menu=\"matMenu\">\r\n                            <!-- update profile image feature here -->\r\n                            <button mat-menu-item routerLink=\"/home/profile\">    \r\n                                Profile\r\n                            </button>\r\n                            <button mat-menu-item routerLink=\"/\" (click)=\"logout()\">\r\n                                Logout\r\n                            </button>\r\n                          </mat-menu>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>  \r\n    </mat-toolbar>\r\n\r\n    <mat-sidenav-container >\r\n        <mat-sidenav #sideNav opened mode=\"side\" [fixedInViewport]=\"true\" >\r\n            <app-side-nav></app-side-nav>\r\n        </mat-sidenav>\r\n        <mat-sidenav-content >\r\n            <router-outlet></router-outlet>\r\n        </mat-sidenav-content>\r\n    </mat-sidenav-container>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ProgramService } from 'src/app/service/program.service';\r\nimport { Chart} from '../../../../../node_modules/chart.js';\r\n\r\n@Component({\r\n  selector: 'app-doughnut-chart',\r\n  templateUrl: './doughnut-chart.component.html',\r\n  styleUrls: ['./doughnut-chart.component.css']\r\n})\r\nexport class DoughnutChartComponent implements OnInit {\r\n\r\n  public role: any;\r\n  public programsArray = [];\r\n  public doughnutChartLabel = [];\r\n  public doughnutChartData = [];\r\n  constructor(private programService: ProgramService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.role = window.localStorage.getItem('role');\r\n    this.getAllActivePrograms();\r\n  }\r\n\r\n  myChart(): void{\r\n    const myChart = new Chart('myChart', {\r\n      type: 'doughnut',\r\n      data: {\r\n          labels: this.doughnutChartLabel,\r\n          datasets: [{\r\n              label: 'No. of employees',\r\n              data: this.doughnutChartData,\r\n              backgroundColor: [\r\n                'cornflowerblue',\r\n                'olivedrab',\r\n                'orange',\r\n                'tomato',\r\n                'crimson',\r\n                'purple',\r\n                'turquoise',\r\n                'forestgreen',\r\n                'navy',\r\n                '#455a64',\r\n                'rgba(255, 220, 129, 0.2)',\r\n                'rgba(200, 181, 199, 0.2)',\r\n                'rgba(193, 226, 206, 0.2)',\r\n                'rgba(201, 193, 226, 0.2)',\r\n                'rgba(175, 201, 195, 0.2)',\r\n                'rgba(253, 222, 166, 0.2)',\r\n                'rgba(216, 156, 218, 0.2)',\r\n                'rgba(154, 215, 209, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(216, 181, 173, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(154, 198, 215, 0.2)',\r\n                'rgba(208, 232, 191, 0.2)'\r\n              ],\r\n              // hoverOffset: 4,\r\n              borderWidth: 1,\r\n              borderColor: '#fff',\r\n              hoverBorderWidth: 2,\r\n              hoverBorderColor: '#fff'\r\n          }]\r\n      },\r\n      options: {\r\n        title: {\r\n          display: true,\r\n          text: 'Employee Distribution (Active Programs)',\r\n          padding: 20,\r\n          fontSize: 25,\r\n        },\r\n        legend: {\r\n          position: 'right',                  // comment and show\r\n          labels: {\r\n            fontColor: '#000',\r\n          }\r\n        },\r\n        layout: {\r\n          padding: {\r\n            left: 100\r\n          }\r\n        },\r\n        tooltips: {\r\n          displayColors: false\r\n        }\r\n      }\r\n  });\r\n  }\r\n\r\n  getAllActivePrograms(): void {\r\n    this.programService.getAllActivePrograms('ACTIVE').subscribe(\r\n      response => {\r\n        this.programsArray = response;\r\n        console.log(response);\r\n        this.programsArray.forEach(program => {\r\n          this.doughnutChartLabel.push(program.programName);\r\n          this.doughnutChartData.push(program.membersList.length);\r\n        });\r\n        this.myChart();\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div style=\"display: block; \">\r\n    <div id=\"divChart\">\r\n        <canvas id=\"myChart\"></canvas>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { EmployeeService } from 'src/app/service/employee.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  public employee: any;\r\n  uploadForm: FormGroup;\r\n  constructor(private formBuilder: FormBuilder, private employeeService: EmployeeService, private router: Router) {}\r\n\r\n  getEmployee(emailId: string): void{\r\n    this.employeeService.getEmployee(emailId).subscribe(\r\n      response => {\r\n        console.log('Employee data retrieved : ');\r\n        console.log(response);\r\n        this.employee = response;\r\n        window.localStorage.setItem('role', this.employee.role);\r\n        // console.log(\"employee object : \");\r\n        // console.log(this.employee);\r\n      },\r\n      error => {\r\n        console.log('error message : ');\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.employee = this.getEmployee(window.localStorage.getItem('tgt_email'));\r\n    this.uploadForm = this.formBuilder.group({\r\n      emailid: '',\r\n      file: ['']\r\n    });\r\n  }\r\n\r\n  onFileSelect(event: any): void {\r\n    if (event.target.files.length > 0) {\r\n      const file = event.target.files[0];\r\n      this.uploadForm.get('file').setValue(file);\r\n    }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    const formData = new FormData();\r\n    this.uploadForm.get('emailid').setValue(this.employee.emailId);\r\n    formData.append('emailid', this.uploadForm.get('emailid').value);\r\n    formData.append('file', this.uploadForm.get('file').value);\r\n    this.employeeService.updateUserProfileImage(formData);\r\n    // window.location.href = 'http://localhost:4200/#/home/profile';\r\n    window.location.reload();\r\n    // this.router.navigateByUrl('home/calendar');\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"main-container\" style=\"display: flex;\">\r\n    <section>\r\n        <span class=\"profile-head\">Employee Profile</span><br><br><br>\r\n        <table width=\"50%\" cellspacing=\"0\" class=\"table-class\">\r\n            <br>\r\n            <!-- <thead>\r\n            <th width=\"700\"></th>\r\n            </thead> -->\r\n            <tbody>\r\n            <tr>\r\n                <td>Name</td>\r\n                <td>{{employee.employeeName}}</td>\r\n            </tr>\r\n            <!-- <tr>\r\n                <td>Role</td>\r\n                <td>{{employee.role}}</td>\r\n            </tr> -->\r\n            <tr>\r\n                <td>Email-id</td>\r\n                <td>{{employee.emailId}}</td>\r\n            </tr>\r\n            <tr *ngIf=\"employee.managerEmailId\">\r\n                <td>Manager's Email-id</td>\r\n                <td>{{employee.managerEmailId}}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Upload Profile Photo</td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    <form [formGroup]=\"uploadForm\" (ngSubmit)=\"onSubmit()\">\r\n                        <div>\r\n                            <!-- <label for=\"file\">Profile picture </label> -->\r\n                            <input type=\"file\" accept=\"image/*\" name=\"file\" (change)=\"onFileSelect($event)\" />\r\n                            <button type=\"submit\" class=\"btn btn-primary\">Upload</button>\r\n                        </div>\r\n                    </form>\r\n                </td>\r\n            </tr>\r\n            </tbody>\r\n        </table>     \r\n    </section>   \r\n    <section>\r\n        <aside class=\"profile-card\">\r\n            <header>\r\n                <a>\r\n                    <img *ngIf=\"!employee.profileImage\" src=\"../../../assets/noProfileImage.jpg\" class=\"hoverZoomLink\">\r\n                    <img *ngIf=\"employee.profileImage\" src=\"data:image/jpeg;base64,{{employee.profileImage}}\" class=\"hoverZoomLink\">\r\n                </a>\r\n                <h1>{{employee.employeeName}}</h1>\r\n                <h2>Thank you!</h2>\r\n            </header>\r\n            <div class=\"profile-bio\">\r\n               <p>Clients do not come first. Employees come first. If you take care of your employees, they will take care of the clients.</p>\r\n            </div>\r\n        </aside>    \r\n    </section> \r\n</div>\r\n\r\n","import { DialogComponent } from './dialog/dialog.component';\r\nimport { EmailService } from './../../service/email.service';\r\nimport { MonthlyTrackerService } from './../../service/monthly-tracker.service';\r\nimport { Router } from '@angular/router';\r\nimport { Component, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs/tab-group';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\nexport interface MonthlyTracker {\r\n  monthlyTrackerId: string;\r\n  employeeEmail: string;\r\n  status: string;\r\n  year: number;\r\n  monthName: string;\r\n  startDate: number;\r\n  endDate: number;\r\n  remarks: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-monthly-tracker',\r\n  templateUrl: './monthly-tracker.component.html',\r\n  styleUrls: ['./monthly-tracker.component.css'],\r\n})\r\nexport class MonthlyTrackerComponent implements AfterViewInit {\r\n  month: string;\r\n  year: number;\r\n  startDate: number;\r\n  endDate: number;\r\n  records: number;\r\n  showSpinner = false;\r\n\r\n  allmonths = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n\r\n  thisMonth: string = this.allmonths[new Date().getMonth() - 1];\r\n  thisYear: number = new Date().getFullYear();\r\n  yearFilter = new FormControl(new Date().getFullYear(), [\r\n    Validators.min(2000),\r\n    Validators.max(new Date().getFullYear()),\r\n  ]);\r\n  monthFilter = new FormControl(this.allmonths[new Date().getMonth() - 1]);\r\n\r\n  // Tabs\r\n  @ViewChild('tabGroup') tabGroup: { selectedIndex: number };\r\n\r\n  // ALL RECORDS\r\n  allTrackers: MonthlyTracker[] = [];\r\n\r\n  // SUBMITTED RECORDS\r\n  submittedTrackers: MonthlyTracker[] = [];\r\n\r\n  // APPROVED RECORDS\r\n  approvedTrackers: MonthlyTracker[] = [];\r\n\r\n  // REVERTED RECORDS\r\n  revertedTrackers: MonthlyTracker[] = [];\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private monthlyTrackerService: MonthlyTrackerService,\r\n    private emailService: EmailService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n\r\n  // Overview Populate on View Initialization\r\n  ngAfterViewInit(): void {\r\n    // Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\r\n    // Add 'implements AfterViewInit' to the class.\r\n    this.updateRecords();\r\n  }\r\n\r\n  // Tab Change Event Handler\r\n  tabChanged(tabChangeEvent: MatTabChangeEvent): void {\r\n    if (tabChangeEvent.index === 0) {\r\n      this.updateOverview(this.allTrackers);\r\n    } else if (tabChangeEvent.index === 1) {\r\n      this.updateOverview(this.submittedTrackers);\r\n    } else if (tabChangeEvent.index === 2) {\r\n      this.updateOverview(this.approvedTrackers);\r\n    } else if (tabChangeEvent.index === 3) {\r\n      this.updateOverview(this.revertedTrackers);\r\n    }\r\n  }\r\n\r\n  // Long to Date String Convertor\r\n  date(milliseconds: number): string {\r\n    return new Date(milliseconds).toDateString();\r\n  }\r\n\r\n  viewDetails(monthlyTracker: MonthlyTracker): void {\r\n    console.log(\"email:\",monthlyTracker.employeeEmail,\"month:\",this.allmonths.indexOf(this.monthFilter.value) + 1,\"year:\",this.yearFilter.value)\r\n    this.router.navigate([\r\n      '/home/mtd',\r\n      monthlyTracker.employeeEmail,\r\n      this.allmonths.indexOf(this.monthFilter.value) + 1,\r\n      this.yearFilter.value,\r\n    ]);\r\n  }\r\n  approve(monthlyTracker: MonthlyTracker): void {\r\n    this.monthlyTrackerService\r\n      .ApproveMonthlyTracker(monthlyTracker)\r\n      .subscribe((Response) => {\r\n        this.updateRecords();\r\n      });\r\n  }\r\n  revert(monthlyTracker: MonthlyTracker): void {\r\n    this.openDialog(monthlyTracker);\r\n    this.dialog.afterAllClosed.subscribe(() => {\r\n      this.updateRecords();\r\n    });\r\n    this.updateRecords();\r\n  }\r\n\r\n  updateRecords(): void {\r\n    this.thisMonth = this.allmonths[new Date().getMonth()];\r\n    this.thisYear = new Date().getFullYear();\r\n    this.showSpinner = true;\r\n    this.monthlyTrackerService\r\n      .getAllMonthlyTrackers(this.monthFilter.value, this.yearFilter.value)\r\n      .subscribe(\r\n        (response) => {\r\n          this.allTrackers = response;\r\n          this.showSpinner = false;\r\n          this.submittedTrackers = this.allTrackers.filter(\r\n            (s) => s.status === 'SUBMITTED'\r\n          );\r\n          this.approvedTrackers = this.allTrackers.filter(\r\n            (s) => s.status === 'COMPLETED'\r\n          );\r\n          this.revertedTrackers = this.allTrackers.filter(\r\n            (s) => s.status === 'REVERTED'\r\n          );\r\n          if (this.tabGroup.selectedIndex === 0) {\r\n            this.updateOverview(this.allTrackers);\r\n          } else if (this.tabGroup.selectedIndex === 1) {\r\n            this.updateOverview(this.submittedTrackers);\r\n          } else if (this.tabGroup.selectedIndex === 2) {\r\n            this.updateOverview(this.approvedTrackers);\r\n          } else if (this.tabGroup.selectedIndex === 3) {\r\n            this.updateOverview(this.revertedTrackers);\r\n          } else {\r\n            this.updateOverview(this.allTrackers);\r\n          }\r\n        },\r\n        (error) => {\r\n          this.showSpinner = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  updateOverview(monthlyTrackers: MonthlyTracker[]): void {\r\n    this.records = monthlyTrackers.length;\r\n    if (this.records === 0 && this.allTrackers.length === 0) {\r\n      this.month = this.monthFilter.value;\r\n      this.year = this.yearFilter.value;\r\n      this.startDate = null;\r\n      this.endDate = null;\r\n    } else {\r\n      this.month = monthlyTrackers.reduce((s) => s).monthName.toLowerCase();\r\n      this.year = monthlyTrackers.reduce((s) => s).year;\r\n      this.startDate = monthlyTrackers[0].startDate;\r\n      this.endDate = monthlyTrackers[0].endDate;\r\n    }\r\n  }\r\n\r\n  openDialog(monthlyTracker: MonthlyTracker): void {\r\n    this.dialog.open(DialogComponent, {\r\n      data: monthlyTracker,\r\n    });\r\n  }\r\n}\r\n","<div class=\"spinner\" *ngIf=\"showSpinner\">\r\n  <mat-progress-spinner [mode]=\"'indeterminate'\"> </mat-progress-spinner>\r\n</div>\r\n\r\n<div class=\"background\">\r\n  <!-- Overview -->\r\n  <div class=\"overview\">\r\n    <span class=\"side-header\">OVERVIEW</span>\r\n    <br /><br />\r\n    <div class=\"side-info\">\r\n      No.of Monthly Trackers\r\n      <br />\r\n      <h1>{{ records }}</h1>\r\n    </div>\r\n    &nbsp; &nbsp;\r\n    <div class=\"side-info\">\r\n      Month\r\n      <br />\r\n      <h1>{{ month }}</h1>\r\n    </div>\r\n    &nbsp; &nbsp;\r\n    <div class=\"side-info\">\r\n      Year\r\n      <br />\r\n      <h1>{{ year }}</h1>\r\n    </div>\r\n    <br />\r\n    <div class=\"side-sub-info\" *ngIf=\"startDate !== null\">\r\n      Start Date\r\n      <br />\r\n      <h1>{{ startDate | date: \"dd MMM yyyy\" }}</h1>\r\n    </div>\r\n    &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n    <div class=\"side-sub-info\" *ngIf=\"endDate !== null\">\r\n      End Date\r\n      <br />\r\n      <h1>{{ endDate | date: \"dd MMM yyyy\" }}</h1>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Title  -->\r\n  <div class=\"title\">&nbsp; &nbsp; MONTHLY TRACKER</div>\r\n  <br />\r\n  <!-- Filter -->\r\n  <div class=\"filter\">\r\n    <span class=\"side-header\">Filter</span>\r\n    <br />\r\n    <br />\r\n    <mat-form-field appearance=\"outline\">\r\n      <mat-label>Month</mat-label>\r\n      <mat-select\r\n        [(value)]=\"thisMonth\"\r\n        [formControl]=\"monthFilter\"\r\n        (selectionChange)=\"updateRecords()\"\r\n      >\r\n        <mat-option>None</mat-option>\r\n        <mat-option *ngFor=\"let month of allmonths\" [value]=\"month\">\r\n          {{ month }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    &nbsp;\r\n    <mat-form-field appearance=\"outline\">\r\n      <mat-label>Year</mat-label>\r\n      <input\r\n        matInput\r\n        type=\"number\"\r\n        placeholder=\"Year\"\r\n        (input)=\"updateRecords()\"\r\n        [formControl]=\"yearFilter\"\r\n        min=\"2000\"\r\n        [max]=\"thisYear\"\r\n      />\r\n      <mat-error *ngIf=\"yearFilter.invalid\">\"Enter a Valid Year</mat-error>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <!-- Tabs -->\r\n\r\n  <mat-tab-group\r\n    animationDuration=\"0ms\"\r\n    #tabGroup\r\n    (selectedTabChange)=\"tabChanged($event)\"\r\n  >\r\n    <!-- All Records -->\r\n    <mat-tab>\r\n      <ng-template mat-tab-label>\r\n        All &nbsp;\r\n        <a mat-mini-fab color=\"primary\">\r\n          <mat-icon class=\"mat-18\">all_inclusive</mat-icon>\r\n        </a>\r\n      </ng-template>\r\n      <!-- Data -->\r\n      <div\r\n        class=\"list\"\r\n        *ngIf=\"allTrackers.length > 0 || showSpinner; else noAllTrackers\"\r\n      >\r\n        <mat-card class=\"heading\">\r\n          <div>EMPLOYEE EMAIL</div>\r\n          <div>STATUS</div>\r\n          <div>REMARKS</div>\r\n          <div>ACTION</div>\r\n          <div></div>\r\n        </mat-card>\r\n        <mat-card class=\"data\" *ngFor=\"let tracker of allTrackers\">\r\n          <div class=\"record\">\r\n            <mat-icon class=\"mat-18\" [style.color]=\"'#d27a4f'\">mail</mat-icon>\r\n            {{ tracker.employeeEmail }}\r\n          </div>\r\n          <div>\r\n            <mat-icon\r\n              [style.color]=\"\r\n                tracker.status == 'COMPLETED'\r\n                  ? '#8cc73c'\r\n                  : tracker.status == 'REVERTED'\r\n                  ? '#f66178'\r\n                  : '#f2b551'\r\n              \"\r\n              >fiber_manual_record</mat-icon\r\n            >\r\n            {{ tracker.status.toUpperCase() }}\r\n          </div>\r\n          <div>{{ tracker.remarks }}</div>\r\n          <div [style.textAlign]=\"left\">\r\n            <span *ngIf=\"tracker.status == 'SUBMITTED'\">\r\n              &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            </span>\r\n            <button\r\n              mat-mini-fab\r\n              matTooltip=\"Approve\"\r\n              [style.backgroundColor]=\"'#8cc73c'\"\r\n              *ngIf=\"tracker.status == 'SUBMITTED'\"\r\n            >\r\n              <mat-icon (click)=\"approve(tracker)\" class=\"mat-18\"\r\n                >done_outline</mat-icon\r\n              >\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              mat-mini-fab\r\n              matTooltip=\"Revert\"\r\n              (click)=\"revert(tracker)\"\r\n              [style.backgroundColor]=\"'#f66178'\"\r\n              *ngIf=\"tracker.status == 'SUBMITTED'\"\r\n            >\r\n              <mat-icon class=\"mat-18\">north_east</mat-icon>\r\n            </button>\r\n            <button\r\n              mat-flat-button\r\n              disabled\r\n              class=\"no-action\"\r\n              *ngIf=\"\r\n                tracker.status == 'COMPLETED' || tracker.status == 'REVERTED'\r\n              \"\r\n              [style.color]=\"'#55557b'\"\r\n            >\r\n              <strong>No Action Allowed</strong>\r\n            </button>\r\n          </div>\r\n          <div>\r\n            <button\r\n              mat-stroked-button\r\n              class=\"view-details\"\r\n              (click)=\"viewDetails(tracker)\"\r\n              color=\"primary\"\r\n            >\r\n              View Details\r\n            </button>\r\n          </div>\r\n        </mat-card>\r\n      </div>\r\n      <ng-template #noAllTrackers>\r\n        <div class=\"not-available\">\r\n          <img\r\n            class=\"oops\"\r\n            src=\"assets/images/minion-oops.png\"\r\n            alt=\"\"\r\n            srcset=\"\"\r\n          />\r\n          Oops! No Available Trackers as of Now!\r\n        </div>\r\n      </ng-template>\r\n    </mat-tab>\r\n\r\n    <!-- SUBMITTED Records -->\r\n    <mat-tab>\r\n      <ng-template mat-tab-label>\r\n        SUBMITTED &nbsp;\r\n        <a mat-mini-fab [style.backgroundColor]=\"'#f2b551'\">\r\n          <mat-icon class=\"mat-18\">checklist</mat-icon>\r\n        </a>\r\n      </ng-template>\r\n      <!-- Data -->\r\n      <div\r\n        class=\"list\"\r\n        *ngIf=\"\r\n          submittedTrackers.length > 0 || showSpinner;\r\n          else noSubmittedTrackers\r\n        \"\r\n      >\r\n        <mat-card class=\"heading\">\r\n          <div>EMPLOYEE EMAIL</div>\r\n          <div>STATUS</div>\r\n          <div>REMARKS</div>\r\n          <div>ACTION</div>\r\n          <div></div>\r\n        </mat-card>\r\n        <mat-card class=\"data\" *ngFor=\"let tracker of submittedTrackers\">\r\n          <div>\r\n            <mat-icon class=\"mat-18\" [style.color]=\"'#d27a4f'\">mail</mat-icon>\r\n            {{ tracker.employeeEmail }}\r\n          </div>\r\n          <div>\r\n            <mat-icon\r\n              [style.color]=\"\r\n                tracker.status == 'COMPLETED'\r\n                  ? '#8cc73c'\r\n                  : tracker.status == 'REVERTED'\r\n                  ? '#f66178'\r\n                  : '#f2b551'\r\n              \"\r\n              >fiber_manual_record</mat-icon\r\n            >\r\n            {{ tracker.status.toUpperCase() }}\r\n          </div>\r\n          <div>{{ tracker.remarks }}</div>\r\n          <div [style.textAlign]=\"left\">\r\n            <span *ngIf=\"tracker.status == 'SUBMITTED'\"> </span>\r\n            <button\r\n              mat-mini-fab\r\n              matTooltip=\"Approve\"\r\n              (click)=\"approve(tracker)\"\r\n              [style.backgroundColor]=\"'#8cc73c'\"\r\n              *ngIf=\"tracker.status == 'SUBMITTED'\"\r\n            >\r\n              <mat-icon class=\"mat-18\">done_outline</mat-icon>\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              mat-mini-fab\r\n              matTooltip=\"Revert\"\r\n              (click)=\"revert(tracker)\"\r\n              [style.backgroundColor]=\"'#f66178'\"\r\n              *ngIf=\"tracker.status == 'SUBMITTED'\"\r\n            >\r\n              <mat-icon class=\"mat-18\">north_east</mat-icon>\r\n            </button>\r\n          </div>\r\n          <div>\r\n            <button\r\n              mat-stroked-button\r\n              class=\"view-details\"\r\n              (click)=\"viewDetails(tracker)\"\r\n              color=\"primary\"\r\n            >\r\n              View Details\r\n            </button>\r\n          </div>\r\n        </mat-card>\r\n      </div>\r\n      <ng-template #noSubmittedTrackers>\r\n        <div class=\"not-available\">\r\n          <img\r\n            class=\"oops\"\r\n            src=\"assets/images/minion-oops.png\"\r\n            alt=\"\"\r\n            srcset=\"\"\r\n          />\r\n          Oops! No Available Trackers as of Now!\r\n        </div>\r\n      </ng-template>\r\n    </mat-tab>\r\n\r\n    <!-- Approved Records -->\r\n    <mat-tab>\r\n      <ng-template mat-tab-label>\r\n        Approved &nbsp;\r\n        <a mat-mini-fab [style.backgroundColor]=\"'#8cc73c'\">\r\n          <mat-icon class=\"mat-18\">done_outline</mat-icon>\r\n        </a>\r\n      </ng-template>\r\n      <!-- Data -->\r\n      <div\r\n        class=\"list\"\r\n        *ngIf=\"\r\n          approvedTrackers.length > 0 || showSpinner;\r\n          else noApprovedTrackers\r\n        \"\r\n      >\r\n        <mat-card class=\"heading\">\r\n          <div>EMPLOYEE EMAIL</div>\r\n          <div>STATUS</div>\r\n          <div>REMARKS</div>\r\n          <div></div>\r\n        </mat-card>\r\n        <mat-card class=\"data\" *ngFor=\"let tracker of approvedTrackers\">\r\n          <div>\r\n            <mat-icon class=\"mat-18\" [style.color]=\"'#d27a4f'\">mail</mat-icon>\r\n            {{ tracker.employeeEmail }}\r\n          </div>\r\n          <div>\r\n            <mat-icon\r\n              [style.color]=\"\r\n                tracker.status == 'COMPLETED'\r\n                  ? '#8cc73c'\r\n                  : tracker.status == 'REVERTED'\r\n                  ? '#f66178'\r\n                  : '#f2b551'\r\n              \"\r\n              >fiber_manual_record</mat-icon\r\n            >\r\n            {{ tracker.status.toUpperCase() }}\r\n          </div>\r\n          <div>{{ tracker.remarks }}</div>\r\n          <div>\r\n            <button\r\n              mat-stroked-button\r\n              class=\"view-details\"\r\n              (click)=\"viewDetails(tracker)\"\r\n              color=\"primary\"\r\n            >\r\n              View Details\r\n            </button>\r\n          </div>\r\n        </mat-card>\r\n      </div>\r\n\r\n      <ng-template #noApprovedTrackers>\r\n        <div class=\"not-available\">\r\n          <img\r\n            class=\"oops\"\r\n            src=\"assets/images/minion-oops.png\"\r\n            alt=\"\"\r\n            srcset=\"\"\r\n          />\r\n          Oops! No Available Trackers as of Now!\r\n        </div>\r\n      </ng-template>\r\n    </mat-tab>\r\n\r\n    <!-- Reverted Records -->\r\n    <mat-tab>\r\n      <ng-template mat-tab-label>\r\n        Reverted &nbsp;\r\n        <a mat-mini-fab [style.backgroundColor]=\"'#f66178'\">\r\n          <mat-icon class=\"mat-18\">north_east</mat-icon>\r\n        </a>\r\n      </ng-template>\r\n      <!-- Data -->\r\n      <div\r\n        class=\"list\"\r\n        *ngIf=\"\r\n          revertedTrackers.length > 0 || showSpinner;\r\n          else noRevertedTrackers\r\n        \"\r\n      >\r\n        <mat-card class=\"heading\">\r\n          <div>EMPLOYEE EMAIL</div>\r\n          <div>STATUS</div>\r\n          <div>REMARKS</div>\r\n          <div></div>\r\n        </mat-card>\r\n        <mat-card class=\"data\" *ngFor=\"let tracker of revertedTrackers\">\r\n          <div>\r\n            <mat-icon class=\"mat-18\" [style.color]=\"'#d27a4f'\">mail</mat-icon>\r\n            {{ tracker.employeeEmail }}\r\n          </div>\r\n          <div>\r\n            <mat-icon\r\n              [style.color]=\"\r\n                tracker.status == 'COMPLETED'\r\n                  ? '#8cc73c'\r\n                  : tracker.status == 'REVERTED'\r\n                  ? '#f66178'\r\n                  : '#f2b551'\r\n              \"\r\n              >fiber_manual_record</mat-icon\r\n            >\r\n            {{ tracker.status.toUpperCase() }}\r\n          </div>\r\n          <div>{{ tracker.remarks }}</div>\r\n          <div>\r\n            <button\r\n              mat-stroked-button\r\n              class=\"view-details\"\r\n              (click)=\"viewDetails(tracker)\"\r\n              color=\"primary\"\r\n            >\r\n              View Details\r\n            </button>\r\n          </div>\r\n        </mat-card>\r\n      </div>\r\n\r\n      <ng-template #noRevertedTrackers>\r\n        <div class=\"not-available\">\r\n          <img\r\n            class=\"oops\"\r\n            src=\"assets/images/minion-oops.png\"\r\n            alt=\"\"\r\n            srcset=\"\"\r\n          />\r\n          Oops! No Available Trackers as of Now!\r\n        </div>\r\n      </ng-template>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ProgramService } from 'src/app/service/program.service';\r\nimport { AddProgramMembersComponent } from '../add-program-members/add-program-members.component';\r\nimport { ViewProgramCardComponent } from '../view-program-card/view-program-card.component';\r\n\r\n@Component({\r\n  selector: 'app-program-card',\r\n  templateUrl: './program-card.component.html',\r\n  styleUrls: ['./program-card.component.css'],\r\n})\r\nexport class ProgramCardComponent implements OnInit {\r\n\r\n  role: string;\r\n  imageURL: any;\r\n\r\n  constructor(\r\n    private sanitizer: DomSanitizer,\r\n    public dialog: MatDialog,\r\n    private programService: ProgramService\r\n  ) {\r\n    this.role = '';\r\n  }\r\n\r\n\r\n  @Input() public programData: any;\r\n\r\n  showProgramDetails(programName: string): void {\r\n    this.programService.getProgramDetails(programName).subscribe((response) => {\r\n      this.dialog.open(ViewProgramCardComponent, {\r\n        width: '600px',\r\n        data: response,\r\n      });\r\n    });\r\n  }\r\n\r\n  addProgramMembers(event: any, programName: string): void {\r\n    event.stopPropagation();\r\n    this.dialog.open(AddProgramMembersComponent, {\r\n      width: '600px',\r\n      data: programName,\r\n    });\r\n    console.log('Add Members to ' + programName);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.role = window.localStorage.getItem('role');\r\n\r\n    this.imageURL = this.sanitizer.bypassSecurityTrustResourceUrl(\r\n      'data:image/jpg;base64,' + this.programData.organizationBrandLogo\r\n    );\r\n\r\n  }\r\n\r\n\r\n}\r\n","<mat-card\r\n  class=\"example-card\"\r\n  [ngClass]=\"{\r\n    'active-program': programData?.programStatus === 'ACTIVE',\r\n    'inactive-program': programData?.programStatus === 'INACTIVE'\r\n  }\"\r\n  programData\r\n  (click)=\"showProgramDetails(programData?.programName)\"\r\n>\r\n  <img mat-card-image [src]=\"imageURL\" [alt]=\"programData?.organizationName\" />\r\n  <mat-card-header>\r\n    <mat-card-title>{{ programData?.programName }} </mat-card-title>\r\n    <mat-card-subtitle>{{ programData?.organizationName }}</mat-card-subtitle>\r\n  </mat-card-header>\r\n\r\n  <mat-card-content>\r\n    <mat-icon\r\n      inline=\"true\"\r\n      (click)=\"addProgramMembers($event, programData?.programName)\"\r\n      *ngIf=\"role === 'MANAGER'\"\r\n    >\r\n      group_add</mat-icon\r\n    >\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { Component, Inject, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\r\nimport { MatChipInputEvent } from '@angular/material/chips';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ProgramService } from 'src/app/service/program.service';\r\nimport { EmployeeService } from 'src/app/service/employee.service';\r\n\r\n@Component({\r\n  selector: 'app-add-project-members',\r\n  templateUrl: './add-project-members.component.html',\r\n  styleUrls: ['./add-project-members.component.css'],\r\n})\r\n\r\nexport class AddProjectMembersComponent implements OnInit {\r\n  separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  memberCtrl = new FormControl('');\r\n  filteredMembers: Observable<string[]>;\r\n  members = new Set();\r\n  allMembers = [];\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public projectName: any,\r\n    private programService: ProgramService,\r\n    private snackBar: MatSnackBar,\r\n    private employeeService: EmployeeService\r\n  ) {\r\n    this.filteredMembers = this.memberCtrl.valueChanges.pipe(\r\n      startWith(null),\r\n      map((member: string | null) => (member ? this._filter(member) : this.allMembers.slice())),\r\n    );\r\n  }\r\n\r\n  add(event: MatChipInputEvent): void {\r\n    const value = (event.value || '').trim();\r\n\r\n    const index = this.allMembers.indexOf(value);\r\n    console.log(index);\r\n\r\n    if (index >= 0) {\r\n      this.members.add(value);\r\n    }\r\n\r\n    event.input.value = '';\r\n\r\n    this.memberCtrl.setValue(null);\r\n  }\r\n\r\n  remove(member: string): void {\r\n    this.members.delete(member);\r\n  }\r\n\r\n  selected(event: MatAutocompleteSelectedEvent): void {\r\n    this.members.add(event.option.viewValue);\r\n    this.memberCtrl.setValue(null);\r\n  }\r\n\r\n  private _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n\r\n    return this.allMembers.filter(member => member.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  addMembersToProject(): void {\r\n    console.log(this.members);\r\n\r\n    const membersArray = Array.from(this.members);\r\n\r\n    this.programService\r\n      .addMembersToProject(membersArray, this.projectName)\r\n      .subscribe(\r\n        (response) => {\r\n          console.log(response);\r\n\r\n          this.snackBar.open('Members Added Successfully.', '', {\r\n            duration: 5000,\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'top',\r\n            panelClass: ['mat-toolbar', 'mat-primary']\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n\r\n          this.snackBar.open('Some problem occured.', '', {\r\n            duration: 5000,\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'top',\r\n            panelClass: ['mat-toolbar', 'mat-warn']\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  getAllEmployees(managerEmail: string): void {\r\n    this.employeeService.getEmployeesWorkingForAParticularManager(managerEmail).subscribe((response) => {\r\n      console.log(response);\r\n      response.forEach(employee => {\r\n        this.allMembers.push(employee.emailId);\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const email = window.localStorage.getItem('tgt_email');\r\n    this.getAllEmployees(email);\r\n  }\r\n}\r\n","<h2 mat-dialog-title>Add Members for {{ projectName }}</h2>\r\n\r\n<mat-dialog-content class=\"mat-typography\">\r\n  <mat-form-field class=\"example-chip-list\" appearance=\"outline\">\r\n    <mat-label>Add Members</mat-label>\r\n    <mat-chip-list #chipList>\r\n      <mat-chip *ngFor=\"let member of members\" (removed)=\"remove(member)\">\r\n        {{ member }}\r\n        <mat-icon matChipRemove>cancel</mat-icon>\r\n      </mat-chip>\r\n      <input\r\n        placeholder=\"New Member...\"\r\n        [formControl]=\"memberCtrl\"\r\n        [matAutocomplete]=\"auto\"\r\n        [matChipInputFor]=\"chipList\"\r\n        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n        (matChipInputTokenEnd)=\"add($event)\"\r\n      />\r\n    </mat-chip-list>\r\n    <mat-autocomplete\r\n      #auto=\"matAutocomplete\"\r\n      (optionSelected)=\"selected($event)\"\r\n    >\r\n      <mat-option\r\n        *ngFor=\"let member of filteredMembers | async\"\r\n        [value]=\"member\"\r\n      >\r\n        {{ member }}\r\n      </mat-option>\r\n    </mat-autocomplete>\r\n  </mat-form-field>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button mat-dialog-close>Cancel</button>\r\n  <button\r\n    mat-button\r\n    [mat-dialog-close]=\"true\"\r\n    (click)=\"addMembersToProject()\"\r\n    color=\"primary\"\r\n    mat-flat-button\r\n  >\r\n    Add\r\n  </button>\r\n</mat-dialog-actions>\r\n","import { ProgramTime } from \"./program-time\";\r\nimport { ProjectTime } from \"./project-time\";\r\n\r\nexport class EmployeeData {\r\n    image: string;\r\n  email: string;\r\n  name: string;\r\n  projects:ProjectTime[];\r\n  programs:ProgramTime[];\r\n  totalProgHrs:number;\r\n  totalProjHrs:number;\r\n  self_Learning_Hrs:number;\r\n  leaves:number;\r\n  manager:string;\r\n  fullDayLeavesList:number[]=[]\r\n  halfDayLeavesList:number[]=[]\r\n\r\n  constructor(image:string,email:string,name:string,projects:ProjectTime[],programs:ProgramTime[],totalProgHrs:number,totalProjHrs:number,self_Learning_Hrs:number,leaves:number,manager:string,fulldayLeaveList:number[],halfdayLeaveList:number[]){\r\n    this.image=image;\r\n    this.email=email;\r\n    this.name=name;\r\n    this.projects=projects;\r\n    this.programs=programs;\r\n    this.totalProgHrs=totalProgHrs;\r\n    this.totalProjHrs=totalProjHrs;\r\n    this.self_Learning_Hrs=self_Learning_Hrs;\r\n    this.leaves=leaves;\r\n    this.manager=manager;\r\n    this.fullDayLeavesList=fulldayLeaveList;\r\n    this.halfDayLeavesList=halfdayLeaveList;\r\n  }\r\n}\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NavBarComponent } from './component/nav-bar/nav-bar.component';\r\nimport { RegisterLoginComponent } from './component/register-login/register-login.component';\r\nimport { ViewProgramCardComponent } from './component/view-program-card/view-program-card.component';\r\nimport { ViewProgramManagerComponent } from './component/view-program-manager/view-program-manager.component';\r\n// import { AddMemberCardComponent } from './component/add-member-card/add-member-card.component';\r\nimport { CalendarComponent } from './component/calendar/calendar.component';\r\nimport { TimeTrackerComponent } from './component/time-tracker/time-tracker.component';\r\nimport { MonthlyTrackerComponent } from './component/monthly-tracker/monthly-tracker.component';\r\nimport { MonthlyTrackerDetailsComponent } from './component/monthly-tracker-details/monthly-tracker-details.component';\r\nimport { AllChartsComponent } from './component/all-charts/all-charts.component';\r\nimport { BarChartComponent } from './component/charts-folder/bar-chart/bar-chart.component';\r\nimport { PieChartComponent } from './component/charts-folder/pie-chart/pie-chart.component';\r\nimport { DoughnutChartComponent } from './component/charts-folder/doughnut-chart/doughnut-chart.component';\r\nimport { ProfileComponent } from './component/profile/profile.component';\r\nimport { DoughnutChart2Component } from './component/charts-folder/doughnut-chart2/doughnut-chart2.component';\r\nimport { ConsolidatedViewComponent } from './component/consolidated-view/consolidated-view.component';\r\nimport { BarChart2Component } from './component/charts-folder/bar-chart2/bar-chart2.component';\r\nimport { AuthGuard } from './guard/auth.guard';\r\nimport { ConsolidatedAnalyticsComponent } from './component/consolidated-analytics/consolidated-analytics.component';\r\nimport { LeavesComponent } from './component/leaves/leaves.component';\r\n\r\nconst routes: Routes = [\r\n\r\n  {\r\n    path: '',\r\n    component: RegisterLoginComponent\r\n  },\r\n  // {\r\n  //   path: 'calendar',\r\n  //   component: CalendarComponent\r\n  // },\r\n  // {\r\n  //   path: 'cv',\r\n  //   component: ConsolidatedViewComponent\r\n  // },\r\n  // {\r\n  //   path: 'mtd',\r\n  //   component: MonthlyTrackerDetailsComponent\r\n  // },\r\n  {\r\n    path: 'home',\r\n    component: NavBarComponent,\r\n    canActivate:[AuthGuard],\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: ViewProgramManagerComponent\r\n      },\r\n      {\r\n        path: 'profile',\r\n        component: ProfileComponent\r\n      },\r\n      {\r\n        path: 'view-program-manager',\r\n        component: ViewProgramManagerComponent\r\n      },\r\n      {\r\n        path: 'monthly-tracker',\r\n        component: MonthlyTrackerComponent\r\n      },\r\n      {\r\n        path: 'view-program-card',\r\n        component: ViewProgramCardComponent\r\n      },\r\n      // {\r\n      //   path: 'add-member-card',\r\n      //   component: AddMemberCardComponent,\r\n      // },\r\n      {\r\n        path: 'monthly-tracker',\r\n        component: MonthlyTrackerComponent\r\n      },\r\n      {\r\n        path: 'timetracker',\r\n        component: TimeTrackerComponent\r\n      },\r\n      {\r\n        path: 'lc',\r\n        component: LeavesComponent\r\n      },\r\n      {\r\n        path: 'can',\r\n        component: ConsolidatedAnalyticsComponent\r\n      },\r\n      {\r\n        path: 'calendar',\r\n        component: CalendarComponent\r\n      },\r\n      {\r\n        path: 'cv',\r\n        component: ConsolidatedViewComponent\r\n      },\r\n      {\r\n        path: 'calendar/:email/:month/:year',\r\n        component: CalendarComponent\r\n      },\r\n      {\r\n        path: 'mtd/:email/:month/:year',\r\n        component: MonthlyTrackerDetailsComponent\r\n      },\r\n      {\r\n        path: 'analytics',\r\n        component: AllChartsComponent,\r\n        children: [\r\n          { path: 'employee-distribution-in-external-programs', component: DoughnutChartComponent },\r\n          { path: 'employee-distribution-in-internal-projects', component: DoughnutChart2Component },\r\n          { path: 'external-programs', component: BarChartComponent },\r\n          { path: 'internal-projects', component: BarChart2Component },\r\n          { path: 'pie-chart', component: PieChartComponent },\r\n          { path: '', component: BarChartComponent }\r\n        ]\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    path: 'view-program-manager',\r\n    component: ViewProgramManagerComponent,\r\n  },\r\n  {\r\n    path: 'view-program-card',\r\n    component: ViewProgramCardComponent,\r\n  },\r\n  // {\r\n  //   path: 'add-member-card',\r\n  //   component: AddMemberCardComponent,\r\n  // },\r\n  {\r\n    path: 'monthly-tracker',\r\n    component: MonthlyTrackerComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {\r\n    useHash: true\r\n  })],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule { }\r\n","import { MemberHour } from \"./program-data\";\r\n\r\nexport class ProjectData {\r\n    organizationBrandLogo:string;\r\n    projectName:string;\r\n    organizationName:string;\r\n    \r\n    createdOn:number;\r\n    startDate:number;\r\n    endDate:number;\r\n    managerEmailId:string;\r\n    projectStatus:string;\r\n    memberList:MemberHour[];\r\n    totalHours:number;\r\n\r\n    constructor(organizationBrandLogo:string,projectName:string,organizationName:string,createdOn:number,startDate:number,endDate:number,managerEmailId:string,projectStatus:string){\r\n     this.organizationBrandLogo= organizationBrandLogo;\r\n    this.projectName= projectName;\r\n    this.organizationName= organizationName;\r\n    this.createdOn=createdOn;\r\n    this.startDate=startDate;\r\n    this.endDate=endDate;\r\n    this.managerEmailId=managerEmailId;\r\n    this.projectStatus=projectStatus;\r\n    this.memberList=[]\r\n    this.totalHours=0;\r\n    }\r\n}\r\n\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ProgramService } from '../../service/program.service';\r\n\r\n@Component({\r\n  selector: 'app-view-program-card',\r\n  templateUrl: './view-program-card.component.html',\r\n  styleUrls: ['./view-program-card.component.css'],\r\n})\r\nexport class ViewProgramCardComponent implements OnInit {\r\n  programDetails: any;\r\n  role: string;\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any, private programService: ProgramService, private snackBar: MatSnackBar) { }\r\n\r\n  remove(programName: string, memberEmail: string): void {\r\n\r\n    this.programService.removeMembersFromProgram(programName, memberEmail).subscribe((response) => {\r\n      console.log(response);\r\n\r\n      this.snackBar.open('Member Removed Successfully.', '', {\r\n        duration: 5000,\r\n        horizontalPosition: 'center',\r\n        verticalPosition: 'top',\r\n        panelClass: ['mat-toolbar', 'mat-primary']\r\n      });\r\n    }, (error) => {\r\n      console.log(error);\r\n      this.snackBar.open('Some problem occured.', '', {\r\n        duration: 5000,\r\n        horizontalPosition: 'center',\r\n        verticalPosition: 'top',\r\n        panelClass: ['mat-toolbar', 'mat-warn']\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.programDetails = this.data;\r\n    this.role = window.localStorage.getItem('role');\r\n  }\r\n}\r\n","<div programDetails>\r\n  <div mat-dialog-title class=\"flex-container\">\r\n    <h1 mat-dialog-title>{{ programDetails?.programName }}</h1>\r\n    <span class=\"example-spacer\"></span>\r\n    <mat-icon [mat-dialog-close]=\"true\" matTooltip=\"Close\">close</mat-icon>\r\n  </div>\r\n\r\n  <mat-dialog-content class=\"mat-typography\">\r\n    <div fxLayout=\"row\" fxLayoutGap=\"2%\" fxLayout.xs=\"column\">\r\n      <mat-icon>domain</mat-icon>\r\n      <h3 fxFlex=\"50%\" matTooltip=\"Organization Name\">\r\n        {{ programDetails?.organizationName }}\r\n      </h3>\r\n      <mat-icon>task</mat-icon>\r\n      <h3 fxFlex=\"50%\" matTooltip=\"Program Type\">\r\n        {{ programDetails?.programType }}\r\n      </h3>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutGap=\"2%\" fxLayout.xs=\"column\">\r\n      <mat-icon>calendar_today</mat-icon>\r\n      <h3 fxFlex=\"50%\" matTooltip=\"Program Duration\">\r\n        {{ programDetails?.startDate | date: \"dd/MM/yyyy\" }} -\r\n        {{ programDetails?.endDate | date: \"dd/MM/yyyy\" }}\r\n      </h3>\r\n      <mat-icon>person</mat-icon>\r\n      <h3 fxFlex=\"50%\" matTooltip=\"Manager's Email Id\">\r\n        {{ programDetails?.managerEmailId }}\r\n      </h3>\r\n    </div>\r\n\r\n    <div fxLayout=\"column\">\r\n      <div>\r\n        <mat-icon>group</mat-icon>\r\n      </div>\r\n\r\n      <mat-form-field class=\"example-chip-list\" appearance=\"outline\">\r\n        <mat-label>Members</mat-label>\r\n        <h1 *ngIf=\"programDetails?.membersList == null\">No Members to show.</h1>\r\n        <mat-chip-list *ngIf=\"programDetails?.membersList.length > 0\" #chipList>\r\n          <mat-chip\r\n            *ngFor=\"let member of programDetails?.membersList\"\r\n            (removed)=\"\r\n              remove(programDetails?.programName, member.memberEmailId)\r\n            \"\r\n          >\r\n            {{ member.memberEmailId }}\r\n\r\n            <mat-icon\r\n              *ngIf=\"role === 'MANAGER'\"\r\n              [mat-dialog-close]=\"true\"\r\n              matTooltip=\"Remove member\"\r\n              matChipRemove\r\n              >cancel</mat-icon\r\n            >\r\n          </mat-chip>\r\n        </mat-chip-list>\r\n      </mat-form-field>\r\n    </div>\r\n  </mat-dialog-content>\r\n</div>\r\n","import { EmailService } from './../../../service/email.service';\r\nimport { MonthlyTrackerService } from './../../../service/monthly-tracker.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { MonthlyTracker } from './../../../model/monthly-tracker';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n@Component({\r\n  selector: 'app-dialog',\r\n  templateUrl: './dialog.component.html',\r\n  styleUrls: ['./dialog.component.css'],\r\n})\r\nexport class DialogComponent implements OnInit {\r\n  emailId: string;\r\n  id: string;\r\n\r\n  showSpinner = false;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private data: MonthlyTracker,\r\n    private monthlyTrackerService: MonthlyTrackerService,\r\n    private matDialogRef: MatDialogRef<DialogComponent>,\r\n    private emailService: EmailService\r\n  ) {\r\n    this.emailId = data.employeeEmail;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n  onSubmit(form: NgForm): void {\r\n    this.showSpinner = true;\r\n    this.monthlyTrackerService\r\n      .RemarkMonthlyTracker(\r\n        this.data.monthlyTrackerId,\r\n        form.control.get('remarks').value\r\n      )\r\n      .subscribe((response) => {\r\n        this.data.remarks = form.control.get('remarks').value;\r\n        this.monthlyTrackerService\r\n          .RevertMonthlyTracker(this.data)\r\n          .subscribe(() => {\r\n            this.emailService.revertMonthlyTracker(this.data).subscribe(\r\n              (response) => {\r\n                if (response === 'Email was Sent Successfully') {\r\n                  console.log('Sent email to ' + this.data.employeeEmail);\r\n                  this.showSpinner = false;\r\n                  this.matDialogRef.close();\r\n                }\r\n              },\r\n              (error) => {\r\n                console.log('Failed');\r\n                console.log(error);\r\n                this.showSpinner = false;\r\n                this.matDialogRef.close();\r\n              }\r\n            );\r\n          });\r\n      });\r\n  }\r\n}\r\n","<div class=\"spinner\" *ngIf=\"showSpinner\">\r\n    <mat-progress-spinner\r\n  [mode]=\"'indeterminate'\">\r\n  </mat-progress-spinner>   \r\n  </div>\r\n  \r\n<div class=\"dialog\">\r\n    <h2 mat-dialog-title>\r\n        Revert Monthly Tracker\r\n        \r\n    </h2>\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <p>\r\n            <mat-form-field appearance=\"outline\" class=\"email\">\r\n              <mat-label>Email</mat-label>\r\n              <input matInput placeholder=\"Email\" disabled [value]=\"emailId\">\r\n              <mat-icon matSuffix>mail</mat-icon>\r\n            </mat-form-field>\r\n        </p>\r\n        <form (ngSubmit)=\"onSubmit(form)\" #form=\"ngForm\">\r\n        <mat-icon class=\"mail\">outgoing_mail</mat-icon>\r\n        <p>\r\n            <mat-form-field appearance=\"outline\"  class=\"remarks\" class=\"remarks\">\r\n                <mat-label>Remarks /Body</mat-label>\r\n                <textarea matInput name=\"remarks\" ngModel></textarea>\r\n            </mat-form-field>\r\n        </p>\r\n        <button mat-flat-button color=\"primary\" type=\"submit\" class=\"send\" cdkFocusInitial>\r\n            <mat-icon>send</mat-icon>\r\n                Send Mail\r\n            </button>\r\n        </form>\r\n    \r\n    </mat-dialog-content>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}